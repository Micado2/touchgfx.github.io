(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{207:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return m}));var r=n(1),o=n(9),a=(n(0),n(254)),i=n(255),c=(n(268),n(265),n(269),n(264),n(263)),p={id:"TouchGFXHALDevelopmentScenariosFMC",title:"FMC / Intel 8080"},s={id:"Development/TouchGFXHALDevelopment/scenarios/TouchGFXHALDevelopmentScenariosFMC",title:"FMC / Intel 8080",description:"import Figure from '@site/components/Figure';\r",source:"@site/docs\\Development\\TouchGFXHALDevelopment\\scenarios\\FMC.mdx",permalink:"/docs/Development/TouchGFXHALDevelopment/scenarios/TouchGFXHALDevelopmentScenariosFMC",sidebar:"docs",previous:{title:"LTDC/Parallel RGB",permalink:"/docs/Development/TouchGFXHALDevelopment/TouchGFXHALDevelopmentScenarios"},next:{title:"LTDC+DSI",permalink:"/docs/Development/TouchGFXHALDevelopment/scenarios/TouchGFXHALDevelopmentScenariosDSI"}},l=[{value:"Code",id:"code",children:[]}],u={rightToc:l},h="wrapper";function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)(h,Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,'The following scenario discusses how to . The first thing to do is obviously to configure the FMC according to board and display specifications. Next thing to do is configure your TouchGFX HAL appropriately. Using FMC and SPI as display interface have much in common. Since FMC is not one of the choices in "display interface" debvelopers must select custom and implement the function to transfer the framebuffer themselves.'),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Based on area to be redrawn, move the display cursor to appropriate place in GRAM"),Object(a.b)("li",{parentName:"ol"},"Prepare to write incoming pixel data to GRAM"),Object(a.b)("li",{parentName:"ol"},"Send pixel data ")),Object(a.b)(i.a,{imageSource:"/img/Development/TouchGFXHALDevelopment/scenarios/custom_interface.png",caption:"Project activity",noShadow:!0,mdxType:"Figure"}),Object(a.b)(c.a,{mdxType:"FurtherReading"},"the L496-DISCO Application template from the designer uses FMC and can be inspected for inspiration."),Object(a.b)("h2",{id:"code"},"Code"),Object(a.b)("p",null,"bla bla flushFrameBuffer"),Object(a.b)("p",null,"React to signal (S?) from TouchGFX Engine."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"void  TouchGFXHAL::flushFrameBuffer(const Rect& rect)\n{\n    // Partial framebuffer might be supported for this platform only when Double\n    // Buffering is enabled\n    if (USE_DOUBLE_BUFFERING)\n    {\n        __IO uint16_t tmp;\n\n        HAL::flushFrameBuffer();\n\n        /* Set Cursor */\n        __ST7789H2_SetDisplayWindow(rect.x, rect.y, rect.width, rect.height);\n\n        /* Prepare to write to LCD RAM */\n        ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);\n\n        /* Read dummy data */\n        tmp = LCD_IO_ReadData();\n        this->copyFrameBufferBlockToLCD(rect);\n    }\n    else\n    {\n        this->flushFrameBuffer();\n    }\n}\n")),Object(a.b)("p",null,'Sets the "cursor" in  GRAM in preparation to receive pixels.'),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-c"}),'extern "C"\nvoid __ST7789H2_SetDisplayWindow(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height)\n{\n    uint8_t   parameter[4];\n\n    /* CASET: Comumn Addrses Set */\n    parameter[0] = 0x00;\n    parameter[1] = Xpos;\n    parameter[2] = 0x00;\n    parameter[3] = Xpos + Width - 1;\n    ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);\n    /* RASET: Row Addrses Set */\n    parameter[0] = 0x00;\n    parameter[1] = Ypos;\n    parameter[2] = 0x00;\n    parameter[3] = Ypos + Height - 1;\n    ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);\n}\n')),Object(a.b)("p",null,"Send pixels to display - Use the function provided by the generator."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"void TouchGFXHAL::copyFrameBufferBlockToLCD(const Rect rect)\n{\n    __IO uint16_t* ptr;\n    uint32_t height;\n\n    // Use default implementation (CPU copy!).\n    // This can be accelerated using regular DMA hardware\n    for (height = 0; height < rect.height ; height++)\n    {\n        ptr = getClientFrameBuffer() + rect.x + (height + rect.y)  * BSP_LCD_GetXSize();\n        LCD_IO_WriteMultipleData((uint16_t*)ptr, rect.width);\n    }\n}\n")))}m.isMDXComponent=!0},268:function(e,t,n){"use strict";var r=n(5),o=n(0),a=n.n(o),i=n(266),c=a.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.a.createElement("path",{"fill-rule":"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){return a.a.createElement(i.a,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:c},this.props.children)},t}(o.Component);t.a=p},269:function(e,t,n){"use strict";var r=n(5),o=n(0),a=n.n(o),i=n(266),c=a.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.a.createElement("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){return a.a.createElement(i.a,{color:"var(--highlight-color-try)",header:"Things to try",type:"try",icon:c},this.props.children)},t}(o.Component);t.a=p}}]);