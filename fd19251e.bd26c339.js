(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{247:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return m})),n.d(t,"metadata",(function(){return h})),n.d(t,"rightToc",(function(){return O})),n.d(t,"default",(function(){return f}));var a=n(1),r=n(9),b=(n(0),n(254)),i=n(255),o=n(263),c=n(259),l=n(265),p=n(267),s=n(256),d=n(260),u=n(264),m={id:"ButtonWithLabel",title:"ButtonWithLabel"},h={id:"Development/UIDevelopment/UIComponents/Buttons/ButtonWithLabel",title:"ButtonWithLabel",description:"import Figure from '@site/components/Figure'\r",source:"@site/docs\\Development\\UIDevelopment\\UIComponents\\Buttons\\ButtonWithLabel.mdx",permalink:"/docs/Development/UIDevelopment/UIComponents/Buttons/ButtonWithLabel",sidebar:"docs",previous:{title:"Button",permalink:"/docs/Development/UIDevelopment/UIComponents/Buttons/Button"},next:{title:"ButtonWithIcon",permalink:"/docs/Development/UIDevelopment/UIComponents/Buttons/ButtonWithIcon"}},O=[{value:"Widget Group",id:"widget-group",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Interactions",id:"interactions",children:[{value:"Actions",id:"actions",children:[]},{value:"Triggers",id:"triggers",children:[]}]},{value:"Performance",id:"performance",children:[]},{value:"Examples",id:"examples",children:[{value:"Generated Code",id:"generated-code",children:[]},{value:"TouchGFX Designer Examples",id:"touchgfx-designer-examples",children:[]}]},{value:"API Reference",id:"api-reference",children:[]}],j={rightToc:O},g="wrapper";function f(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)(g,Object(a.a)({},j,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"A ButtonWithLabel in TouchGFX is a widget that is aware of touch events and can send a callback when the ButtonWithLabel is released. Each state, pressed and released, is associated with an image and a text."),Object(b.b)("p",null,"The ButtonWithLabel can be replicated with the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/Development/UIDevelopment/UIComponents/Buttons/FlexButton"}),"FlexButton"),". A FlexButton is a more configurable button that takes up a bit more RAM in exchange for flexibility."),Object(b.b)(i.a,{imageSource:"/img/Development/UIDevelopment/UIComponents/ButtonWithLabel/WidgetAppearance.png",caption:"ButtonWithLabel running in the simulator (pressed state)",mdxType:"Figure"}),Object(b.b)("h2",{id:"widget-group"},"Widget Group"),Object(b.b)("p",null,"The ButtonWithLabel can be found in the Buttons widget group in TouchGFX Designer."),Object(b.b)(i.a,{imageSource:"/img/Development/UIDevelopment/UIComponents/ButtonWithLabel/WidgetGroup.png",caption:"ButtonWithLabel in TouchGFX Designer",mdxType:"Figure"}),Object(b.b)("h2",{id:"properties"},"Properties"),Object(b.b)("p",null,"The properties for the ButtonWithLabel are described in the following sections."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Property Group")),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Property Descriptions")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Name")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Name",mdxType:"Property"})," of the widget. ",Object(b.b)(s.a,{text:"Name is the unique identifier used in TouchGFX Designer and code",mdxType:"InlineNote"}),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Location")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"X",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"Y",mdxType:"Property"})," specify the top left corner of the widget relative to its parent.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"W",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"H",mdxType:"Property"})," specify the width and height of the widget.",Object(b.b)("br",null),Object(b.b)(s.a,{text:"The size of a ButtonWithLabel is determined by the size of the selected images.",mdxType:"InlineNote"}),Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"Visible",mdxType:"Property"})," specifies the visibility of the widget.",Object(b.b)("br",null),Object(b.b)(s.a,{text:"Making the widget invisible also disables interacting with the widget through the screen.",mdxType:"InlineNote"}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Text")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Single Use",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"Ressource",mdxType:"Property"})," specify the type of text: unique or from a known ressource.",Object(b.b)("br",null),Object(b.b)("br",null),"When Single Use is selected:",Object(b.b)("br",null),Object(b.b)(c.a,{name:"Text",mdxType:"Property"})," specifies the content of the text to be displayed.",Object(b.b)("br",null),Object(b.b)(c.a,{name:"Typography",mdxType:"Property"})," specifies the format of the text.",Object(b.b)("br",null),Object(b.b)(c.a,{name:"Alignment",mdxType:"Property"})," specifies the horizontal alignment of the text relative to the widget.",Object(b.b)("br",null),Object(b.b)("br",null),"When Ressource is selected:",Object(b.b)("br",null),Object(b.b)(c.a,{name:"Ressource ID",mdxType:"Property"})," specifies the ressource to retrieve the text from.",Object(b.b)("br",null),Object(b.b)("br",null),"For more details on text configuration, refer to the ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/Development/UIDevelopment/TouchGFXEngineFeatures/TextsAndFonts"}),"Using texts and fonts")," section.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Text Appearance")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Released Color",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"Pressed Color",mdxType:"Property"})," specify the color of the Text in the pressed and released states.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"Alpha",mdxType:"Property"})," specifies the transparency of the widget.",Object(b.b)("br",null),Object(b.b)(s.a,{text:"The alpha value ranges between 0 and 255 for the widget. 0 is fully transparent and 255 is solid.",mdxType:"InlineNote"}),Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"Text Rotation",mdxType:"Property"})," specifies the angle in degrees of rotation of the text. There are four possible angles : 0, 90, 80 and 270 degrees.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Style")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Style",mdxType:"Property"})," specifies a predefined setup of the widget, that sets select properties to predefined values.",Object(b.b)("br",null),Object(b.b)(s.a,{text:"These styles contain images that are free to use",mdxType:"InlineNote"}),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Image")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Released Image",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"Pressed Image",mdxType:"Property"})," specify the images assigned to the pressed and released states fron the Designer skin library or the Project folder.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Mixins")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)(c.a,{name:"Draggable",mdxType:"Property"})," specifies if the widget is draggable at runtime.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"ClickListener",mdxType:"Property"})," specifies if the widget emits a callback when clicked.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"FadeAnimator",mdxType:"Property"})," specifies if the widget can animate changes to its ",Object(b.b)(c.a,{name:"Alpha",mdxType:"Property"})," value.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(c.a,{name:"MoveAnimator",mdxType:"Property"})," specifies if the widget can animate changes to ",Object(b.b)(c.a,{name:"X",mdxType:"Property"})," and ",Object(b.b)(c.a,{name:"Y",mdxType:"Property"})," values.")))),Object(b.b)("h2",{id:"interactions"},"Interactions"),Object(b.b)("p",null,"The actions and triggers supported by the ButtonWithLabel are described in the following sections."),Object(b.b)("h3",{id:"actions"},"Actions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Specific widget action")),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Description")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Set label color type"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Set the color of the text.")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Standard widget action")),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Description")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Move widget"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Move a widget to a new position over time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Fade widget"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Modify alpha value of widget over time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Hide widget"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Hides a widget (sets visibility to false).")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Show widget"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Make a hidden widget visible (sets visibility to true).")))),Object(b.b)("h3",{id:"triggers"},"Triggers"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Trigger")),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"Description")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},"Button is clicked")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A ButtonWithLabel has been clicked.")))),Object(b.b)("h2",{id:"performance"},"Performance"),Object(b.b)("p",null,"A ButtonWithLabel is composed of two images and text, and is dependent on image and text drawing. Text drawing is very similar to general image drawing (though due to the nature of text characters, a significant amount of alpha blending takes place). Therefore, the ButtonWithLabel is considered a fast widget on most platforms."),Object(b.b)("p",null,"For more details on text drawing performance, read the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/Development/UIDevelopment/UIComponents/GeneralUIComponentPerformance"}),"General UI Component Performance")," section."),Object(b.b)("h2",{id:"examples"},"Examples"),Object(b.b)("h3",{id:"generated-code"},"Generated Code"),Object(b.b)("p",null,"In the generated code for the View base class we can see how TouchGFX Designer sets up a ButtonWithLabel."),Object(b.b)(u.a,{mdxType:"CodeHeader"},"Screen1ViewBase.cpp"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),'#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>\n#include "BitmapDatabase.hpp"\n#include <texts/TextKeysAndLanguages.hpp>\n#include <touchgfx/Color.hpp>\n\ncreen1ViewBase::Screen1ViewBase() :\n    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)\n{\n    buttonWithLabelName.setXY(155, 106);\n    buttonWithLabelName.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));\n    buttonWithLabelName.setLabelText(touchgfx::TypedText(T_SINGLEUSEID1));\n    buttonWithLabelName.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));\n    buttonWithLabelName.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));\n    buttonWithLabelName.setLabelRotation(TEXT_ROTATE_0);\n    buttonWithLabelName.setAction(buttonCallback);\n\n    add(buttonWithLabelName);\n}\n\nvoid Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)\n{\n    if (&src == &buttonWithLabelName)\n    {\n        //InteractionName\n        //When buttonName clicked calls the new virtual function "functionName()" set by the user\n        functionName();\n    }\n}\n')),Object(b.b)(l.a,{mdxType:"Tip"},"You can use these functions and the others available in the ButtonWithLabel class in user code. Remember to force a redraw by calling ",Object(b.b)(p.a,{text:"buttonWithLabelName.invalidate()",mdxType:"InlineCode"})," if you change the appearance of the widget."),Object(b.b)("h3",{id:"touchgfx-designer-examples"},"TouchGFX Designer Examples"),Object(b.b)("p",null,"To further explore the ButtonWithLabel, try creating a new application within TouchGFX Designer with the following UI templates:"),Object(b.b)(i.a,{imageSource:"/img/Development/UIDevelopment/UITemplates/CustomTriggerActionExample.png",caption:"Custom Trigger Action Example UI template in TouchGFX Designer",mdxType:"Figure"}),Object(b.b)(i.a,{imageSource:"/img/Development/UIDevelopment/UITemplates/PoolDemo.png",caption:"Pool Demo UI template in TouchGFX Designer ",mdxType:"Figure"}),Object(b.b)("h2",{id:"api-reference"},"API Reference"),Object(b.b)(o.a,{mdxType:"FurtherReading"},Object(b.b)("li",null,Object(b.b)(d.a,{link:"classtouchgfx_1_1_button_with_label.html",mdxType:"API"},"API reference for the ButtonWithLabel class"))))}f.isMDXComponent=!0},256:function(e,t,n){"use strict";var a=n(5),r=n(0),b=n.n(r),i=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return b.a.createElement("i",null,this.props.text)},t}(r.Component);t.a=i},258:function(e,t,n){var a=n(24).f,r=Function.prototype,b=/^\s*function ([^ (]*)/;"name"in r||n(11)&&a(r,"name",{configurable:!0,get:function(){try{return(""+this).match(b)[1]}catch(e){return""}}})},259:function(e,t,n){"use strict";n(258);var a=n(5),r=n(0),b=n.n(r),i=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return b.a.createElement("i",null,this.props.name)},t}(r.Component);t.a=i},260:function(e,t,n){"use strict";n(261);var a=n(5),r=n(0),b=n.n(r),i=n(257),o=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e="/api/"+this.props.link;return b.a.createElement(i.a,{to:e,target:"_blank"},this.props.children)},t}(r.Component);t.a=o},261:function(e,t,n){"use strict";n(262)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},262:function(e,t,n){var a=n(17),r=n(18),b=n(23),i=/"/g,o=function(e,t,n,a){var r=String(b(e)),o="<"+t;return""!==n&&(o+=" "+n+'="'+String(a).replace(i,"&quot;")+'"'),o+">"+r+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(o),a(a.P+a.F*r((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}}}]);