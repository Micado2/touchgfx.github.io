<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_d_m_a___interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>touchgfx::DMA_Interface</compoundname>
    <derivedcompoundref refid="classtouchgfx_1_1_no_d_m_a" prot="public" virt="non-virtual">NoDMA</derivedcompoundref>
    <includes local="no">DMA.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_d_m_a___interface_1a83a8e29cdf2f3a9068d6f6ca93f1562d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool isAllowed</definition>
        <argsstring></argsstring>
        <name>isAllowed</name>
        <briefdescription>
<para>true if DMA transfers are currently allowed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="274" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_d_m_a___interface_1a35e1fbda907c4c69651e7ffed1543106" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isRunning</definition>
        <argsstring></argsstring>
        <name>isRunning</name>
        <briefdescription>
<para>true if a DMA transfer is currently ongoing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="273" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_d_m_a___interface_1a33f1c078645d901608bf6ad3be2bb4dc" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_d_m_a___queue" kindref="compound">DMA_Queue</ref> &amp;</type>
        <definition>DMA_Queue&amp; queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
<para>Reference to the DMA queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="272" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1aebb17bfed547a2eb905c772b390d8d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void addToQueue</definition>
        <argsstring>(const BlitOp &amp;op)</argsstring>
        <name>addToQueue</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_blit_op" kindref="compound">BlitOp</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Inserts a <ref refid="structtouchgfx_1_1_blit_op" kindref="compound">BlitOp</ref> for processing. </para>
        </briefdescription>
        <detaileddescription>
<para>This also potentially starts the DMA controller, if not already running.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1ad3aed50bc3b4459454ccb8c64f5ced5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <reimplementedby refid="classtouchgfx_1_1_no_d_m_a_1ad3aed50bc3b4459454ccb8c64f5ced5a">flush</reimplementedby>
        <briefdescription>
<para>This function blocks until all DMA transfers in the queue have been completed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="125" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a3d32bb72993e0c725ba8b5b7d8300fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool getAllowed</definition>
        <argsstring>() const</argsstring>
        <name>getAllowed</name>
        <briefdescription>
<para>Gets whether a DMA operation is allowed to begin. </para>
        </briefdescription>
        <detaileddescription>
<para>Used in single-buffering to avoid changing the framebuffer while display is being updated.</para>
<para><simplesect kind="return"><para>true if DMA is allowed to start, false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="162" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a904d28a7d4cd741de18e0ff4066d0f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacetouchgfx_1a5c99ff39743a4feaa2188efdc075ae8b" kindref="member">BlitOperations</ref></type>
        <definition>virtual BlitOperations getBlitCaps</definition>
        <argsstring>()=0</argsstring>
        <name>getBlitCaps</name>
        <reimplementedby refid="classtouchgfx_1_1_no_d_m_a_1aa76b900e4b59cdff7bb1892030c266fe">getBlitCaps</reimplementedby>
        <briefdescription>
<para>Gets the blit capabilities of this DMA. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The blit operations supported by this DMA implementation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1af3a80c71ce290b58fecb805d73951611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacetouchgfx_1ac4182ff66044df30080851925c914fb0" kindref="member">DMAType</ref></type>
        <definition>virtual DMAType getDMAType</definition>
        <argsstring>(void)</argsstring>
        <name>getDMAType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for obtaining the DMA type of the concrete <ref refid="classtouchgfx_1_1_d_m_a___interface" kindref="compound">DMA_Interface</ref> implementation. </para>
        </briefdescription>
        <detaileddescription>
<para>As default, will return DMA_TYPE_GENERIC type value.</para>
<para><simplesect kind="return"><para>a DMAType value of the concrete <ref refid="classtouchgfx_1_1_d_m_a___interface" kindref="compound">DMA_Interface</ref> implementation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="199" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a6365dca5a7d8ddb694726a53b55a4c27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
<para>Perform initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>Does nothing in this base class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="131" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a1a98f41cae552e17b4a32ea78ef85e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isDmaQueueEmpty</definition>
        <argsstring>()</argsstring>
        <name>isDmaQueueEmpty</name>
        <briefdescription>
<para>Query if the DMA queue is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if DMA queue is empty, else 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1ae449ecb70817657f685e4d36ebef2b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isDmaQueueFull</definition>
        <argsstring>()</argsstring>
        <name>isDmaQueueFull</name>
        <briefdescription>
<para>Query if the DMA queue is full. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if DMA queue is full, else 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1ad4e4133a18755f9a4bfdb95a5196e289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDMARunning</definition>
        <argsstring>()</argsstring>
        <name>isDMARunning</name>
        <briefdescription>
<para>Query if the DMA is running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if a DMA operation is currently in progress. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="140" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a10eee3ceeb935bbcf24177d6c23c2146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setAllowed</definition>
        <argsstring>(bool allowed)</argsstring>
        <name>setAllowed</name>
        <param>
          <type>bool</type>
          <declname>allowed</declname>
        </param>
        <briefdescription>
<para>Sets whether or not a DMA operation is allowed to begin. </para>
        </briefdescription>
        <detaileddescription>
<para>Used in single-buffering to avoid changing the framebuffer while display is being updated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allowed</parametername>
</parameternamelist>
<parameterdescription>
<para>true if DMA transfers are allowed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="151" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a15ba17b28adcd14cf31c92122c01950b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void signalDMAInterrupt</definition>
        <argsstring>()=0</argsstring>
        <name>signalDMAInterrupt</name>
        <reimplementedby refid="classtouchgfx_1_1_no_d_m_a_1abddde06d102e215daa7f90ca2eb424b6">signalDMAInterrupt</reimplementedby>
        <briefdescription>
<para>This function is called automatically by the framework when a DMA interrupt has been received. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called automatically by the framework when a DMA interrupt has been received. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a62b63bddf378b0e13a4affa3e8e1bedf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Signals that DMA transfers can start. </para>
        </briefdescription>
        <detaileddescription>
<para>If any elements are in the queue, start it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1aa9a7736e9b6ee0f23d5e34975216a035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~DMA_Interface</definition>
        <argsstring>()</argsstring>
        <name>~DMA_Interface</name>
        <briefdescription>
<para>Finalizes an instance of the <ref refid="classtouchgfx_1_1_d_m_a___interface" kindref="compound">DMA_Interface</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="205" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a0599b67617d4770cae232f7216d583c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void disableAlpha</definition>
        <argsstring>()</argsstring>
        <name>disableAlpha</name>
        <briefdescription>
<para>Configures blit-op hardware for solid operation (no alpha-blending) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a12a7bbb6651b789d40147ff580775d3d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DMA_Interface</definition>
        <argsstring>(DMA_Queue &amp;dmaQueue)</argsstring>
        <name>DMA_Interface</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_d_m_a___queue" kindref="compound">DMA_Queue</ref> &amp;</type>
          <declname>dmaQueue</declname>
        </param>
        <briefdescription>
<para>Constructs a DMA Interface object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dmaQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the queue of DMA operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="215" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a58adbc7c8fd501d0810c2e36eebebbc4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void enableAlpha</definition>
        <argsstring>(uint8_t alpha)</argsstring>
        <name>enableAlpha</name>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Configures blit-op hardware for alpha-blending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha-blending value to apply. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1aba23c8b87dfd88dbf08bb3d51573509c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void enableCopyWithTransparentPixels</definition>
        <argsstring>(uint8_t alpha)</argsstring>
        <name>enableCopyWithTransparentPixels</name>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Configures blit-op hardware for alpha-blending while simultaneously skipping transparent pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha-blending value to apply. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1ad5f7eb65ad7e29b7cf8fc85a5f445951" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
<para>Performs a queued blit-op. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1aed6bdc99a03307df0c42f37ad7e67dca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void executeCompleted</definition>
        <argsstring>()</argsstring>
        <name>executeCompleted</name>
        <briefdescription>
<para>To be called when blit-op has been performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1aa37fa4704cc2f73d67b39dd4b5af7a6e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void seedExecution</definition>
        <argsstring>()</argsstring>
        <name>seedExecution</name>
        <briefdescription>
<para>Called when elements are added to the DMA-queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The framebuffer must be locked before this method returns if the DMA-queue is non- empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1ae1e3019b884575cf907eb20781f2f2d4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void setupDataCopy</definition>
        <argsstring>(const BlitOp &amp;blitOp)=0</argsstring>
        <name>setupDataCopy</name>
        <reimplementedby refid="classtouchgfx_1_1_no_d_m_a_1ab8e508427d1b5c9aac159d2808380e77">setupDataCopy</reimplementedby>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_blit_op" kindref="compound">BlitOp</ref> &amp;</type>
          <declname>blitOp</declname>
        </param>
        <briefdescription>
<para>Configures blit-op hardware for a 2D copy as specified by blitOp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blitOp</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation to execute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a02c5acbd4a07ba14444d1d34d396e592" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void setupDataFill</definition>
        <argsstring>(const BlitOp &amp;blitOp)=0</argsstring>
        <name>setupDataFill</name>
        <reimplementedby refid="classtouchgfx_1_1_no_d_m_a_1a5d23d746615ac71f4da626da9bcd130c">setupDataFill</reimplementedby>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_blit_op" kindref="compound">BlitOp</ref> &amp;</type>
          <declname>blitOp</declname>
        </param>
        <briefdescription>
<para>Configures blit-op hardware for a 2D fill as specified by blitOp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blitOp</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation to execute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_d_m_a___interface_1a96248188721cb2ea07610ac9d084b6c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void waitForFrameBufferSemaphore</definition>
        <argsstring>()</argsstring>
        <name>waitForFrameBufferSemaphore</name>
        <briefdescription>
<para>Waits until framebuffer semaphore is available (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>neither DMA or application is accessing the framebuffer). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/DMA.hpp" line="270" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtouchgfx_1_1_d_m_a___interface" kindref="compound">DMA_Interface</ref> provides basic functionality and structure for processing &quot;blit&quot; operations using DMA. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="521">
        <label>DMA_Interface</label>
        <link refid="classtouchgfx_1_1_d_m_a___interface"/>
      </node>
      <node id="522">
        <label>NoDMA</label>
        <link refid="classtouchgfx_1_1_no_d_m_a"/>
        <childnode refid="521" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="523">
        <label>DMA_Interface</label>
        <link refid="classtouchgfx_1_1_d_m_a___interface"/>
        <childnode refid="524" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="524">
        <label>DMA_Queue</label>
        <link refid="classtouchgfx_1_1_d_m_a___queue"/>
      </node>
    </collaborationgraph>
    <location file="touchgfx/hal/DMA.hpp" line="107" column="1" bodyfile="touchgfx/hal/DMA.hpp" bodystart="106" bodyend="275"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1aebb17bfed547a2eb905c772b390d8d6d" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>addToQueue</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a0599b67617d4770cae232f7216d583c5" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>disableAlpha</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a12a7bbb6651b789d40147ff580775d3d" prot="protected" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>DMA_Interface</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a58adbc7c8fd501d0810c2e36eebebbc4" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>enableAlpha</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1aba23c8b87dfd88dbf08bb3d51573509c" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>enableCopyWithTransparentPixels</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1ad5f7eb65ad7e29b7cf8fc85a5f445951" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>execute</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1aed6bdc99a03307df0c42f37ad7e67dca" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>executeCompleted</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1ad3aed50bc3b4459454ccb8c64f5ced5a" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>flush</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a3d32bb72993e0c725ba8b5b7d8300fa7" prot="public" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>getAllowed</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a904d28a7d4cd741de18e0ff4066d0f83" prot="public" virt="pure-virtual"><scope>touchgfx::DMA_Interface</scope><name>getBlitCaps</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1af3a80c71ce290b58fecb805d73951611" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>getDMAType</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a6365dca5a7d8ddb694726a53b55a4c27" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>initialize</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a83a8e29cdf2f3a9068d6f6ca93f1562d" prot="protected" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>isAllowed</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a1a98f41cae552e17b4a32ea78ef85e01" prot="public" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>isDmaQueueEmpty</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1ae449ecb70817657f685e4d36ebef2b7b" prot="public" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>isDmaQueueFull</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1ad4e4133a18755f9a4bfdb95a5196e289" prot="public" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>isDMARunning</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a35e1fbda907c4c69651e7ffed1543106" prot="protected" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>isRunning</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a33f1c078645d901608bf6ad3be2bb4dc" prot="protected" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>queue</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1aa37fa4704cc2f73d67b39dd4b5af7a6e" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>seedExecution</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a10eee3ceeb935bbcf24177d6c23c2146" prot="public" virt="non-virtual"><scope>touchgfx::DMA_Interface</scope><name>setAllowed</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1ae1e3019b884575cf907eb20781f2f2d4" prot="protected" virt="pure-virtual"><scope>touchgfx::DMA_Interface</scope><name>setupDataCopy</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a02c5acbd4a07ba14444d1d34d396e592" prot="protected" virt="pure-virtual"><scope>touchgfx::DMA_Interface</scope><name>setupDataFill</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a15ba17b28adcd14cf31c92122c01950b" prot="public" virt="pure-virtual"><scope>touchgfx::DMA_Interface</scope><name>signalDMAInterrupt</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a62b63bddf378b0e13a4affa3e8e1bedf" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>start</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1a96248188721cb2ea07610ac9d084b6c8" prot="protected" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>waitForFrameBufferSemaphore</name></member>
      <member refid="classtouchgfx_1_1_d_m_a___interface_1aa9a7736e9b6ee0f23d5e34975216a035" prot="public" virt="virtual"><scope>touchgfx::DMA_Interface</scope><name>~DMA_Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
