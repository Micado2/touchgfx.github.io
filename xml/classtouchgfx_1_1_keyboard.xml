<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_keyboard" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::Keyboard</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_container" prot="public" virt="non-virtual">Container</basecompoundref>
    <includes local="no">Keyboard.hpp</includes>
    <innerclass refid="structtouchgfx_1_1_keyboard_1_1_callback_area" prot="public">touchgfx::Keyboard::CallbackArea</innerclass>
    <innerclass refid="structtouchgfx_1_1_keyboard_1_1_key" prot="public">touchgfx::Keyboard::Key</innerclass>
    <innerclass refid="structtouchgfx_1_1_keyboard_1_1_key_mapping" prot="public">touchgfx::Keyboard::KeyMapping</innerclass>
    <innerclass refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" prot="public">touchgfx::Keyboard::KeyMappingList</innerclass>
    <innerclass refid="structtouchgfx_1_1_keyboard_1_1_layout" prot="public">touchgfx::Keyboard::Layout</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1aaa309fc7aea0ab102d04ff7d7fcfe336" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>Unicode::UnicodeChar* buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
<para>Pointer to null-terminated buffer where the entered text is being displayed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="243" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1a4e7af17ef6039d5e27411d7658c2bac0" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t bufferPosition</definition>
        <argsstring></argsstring>
        <name>bufferPosition</name>
        <briefdescription>
<para>Current position in buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="245" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1ad1859b3438b8d5562f5c3c0ecbe760d4" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t bufferSize</definition>
        <argsstring></argsstring>
        <name>bufferSize</name>
        <briefdescription>
<para>Size of the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="244" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1a214b91c2ce9533497c181ab4ae7a41f6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool cancelIsEmitted</definition>
        <argsstring></argsstring>
        <name>cancelIsEmitted</name>
        <briefdescription>
<para>Tells if a cancel is emitted to check when a key is released. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="251" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1a0d1799f9a7783272b1eb749f184b103a" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_text_area_with_one_wildcard" kindref="compound">TextAreaWithOneWildcard</ref></type>
        <definition>TextAreaWithOneWildcard enteredText</definition>
        <argsstring></argsstring>
        <name>enteredText</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_widget" kindref="compound">Widget</ref> capable of displaying the entered text buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="247" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1a1c56977ef91b2a7c3ae565433e142368" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image highlightImage</definition>
        <argsstring></argsstring>
        <name>highlightImage</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref> to display when a key is highlighted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="250" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1af6057c173c211ff78c0f66fe3229899e" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image image</definition>
        <argsstring></argsstring>
        <name>image</name>
        <briefdescription>
<para><ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> bitmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="246" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1ac254b9ee5f805371a5db9584046ab046" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_generic_callback" kindref="compound">GenericCallback</ref>&lt; <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> &gt; *</type>
        <definition>GenericCallback&lt;Unicode::UnicodeChar&gt;* keyListener</definition>
        <argsstring></argsstring>
        <name>keyListener</name>
        <briefdescription>
<para>Pointer to callback being executed when a key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="241" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1ad6b1c95cd7a312fb84dfc18a1c245608" prot="protected" static="no" mutable="no">
        <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> *</type>
        <definition>const KeyMappingList* keyMappingList</definition>
        <argsstring></argsstring>
        <name>keyMappingList</name>
        <briefdescription>
<para>Pointer to key mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="249" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_keyboard_1a4c99d938faa124a3b4c58e3ddc9b610b" prot="protected" static="no" mutable="no">
        <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> *</type>
        <definition>const Layout* layout</definition>
        <argsstring></argsstring>
        <name>layout</name>
        <briefdescription>
<para>Pointer to layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="248" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a1277d4bddd51dbc604de265fb70ccbfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void draw</definition>
        <argsstring>(const Rect &amp;invalidatedArea) const</argsstring>
        <name>draw</name>
        <reimplements refid="classtouchgfx_1_1_container_1a1277d4bddd51dbc604de265fb70ccbfd">draw</reimplements>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>invalidatedArea</declname>
        </param>
        <briefdescription>
<para>Overrides the draw implementation on the <ref refid="classtouchgfx_1_1_container" kindref="compound">Container</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>First invokes the container draw implementation to draw the keyboard bitmap and text area holding the entered text. If additional drawables have been added to the keyboard, they will also be draw. After invoking the container draw, the glyphs mapped to keys are drawn and if a key has been pressed, it will be highlighted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invalidatedArea</parametername>
</parameternamelist>
<parameterdescription>
<para>The area to draw. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a25c4ed3fd357ec9cab171c4ba33122ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>Unicode::UnicodeChar* getBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getBuffer</name>
        <briefdescription>
<para>Gets the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The buffer containing entered text currently being displayed.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1a00b4f472644b940ebde31fa6e8845b15" kindref="member">setBuffer</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="193" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1ac7bc29fa2c414ae285854dfb21f9f615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getBufferPosition</definition>
        <argsstring>()</argsstring>
        <name>getBufferPosition</name>
        <briefdescription>
<para>Gets buffer position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the buffer position, i.e. the current index where new characters will be placed.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1af9e417e884c95bc169852e8c0758d653" kindref="member">setBufferPosition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="181" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1af7b073ae21bf6ccde27a850fea1d3b3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> *</type>
        <definition>const KeyMappingList* getKeyMappingList</definition>
        <argsstring>() const</argsstring>
        <name>getKeyMappingList</name>
        <briefdescription>
<para>Gets key mapping list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> used by the <ref refid="classtouchgfx_1_1_keyboard" kindref="compound">Keyboard</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="155" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a042134860872da5929cf8be301fc0d24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> *</type>
        <definition>const Layout* getLayout</definition>
        <argsstring>() const</argsstring>
        <name>getLayout</name>
        <briefdescription>
<para>Gets the layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The layout used by the <ref refid="classtouchgfx_1_1_keyboard" kindref="compound">Keyboard</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1a5b45bbc0cf7c9a84ec527f05deb332eb" kindref="member">setLayout</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="137" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a7f1524b90bc90e5f6cf7ee47aae12123" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void handleClickEvent</definition>
        <argsstring>(const ClickEvent &amp;evt)</argsstring>
        <name>handleClickEvent</name>
        <reimplements refid="classtouchgfx_1_1_drawable_1a7f1524b90bc90e5f6cf7ee47aae12123">handleClickEvent</reimplements>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_click_event" kindref="compound">ClickEvent</ref> &amp;</type>
          <declname>evt</declname>
        </param>
        <briefdescription>
<para>Overrides the handleClickEvent on the container. </para>
        </briefdescription>
        <detaileddescription>
<para>The keyboard handles all click events internally and click events are <emphasis>not</emphasis> propagated to drawables added to the keyboard.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classtouchgfx_1_1_click_event" kindref="compound">ClickEvent</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a06ae1946b2124cc94e26cfe18728debf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void handleDragEvent</definition>
        <argsstring>(const DragEvent &amp;evt)</argsstring>
        <name>handleDragEvent</name>
        <reimplements refid="classtouchgfx_1_1_drawable_1a06ae1946b2124cc94e26cfe18728debf">handleDragEvent</reimplements>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_drag_event" kindref="compound">DragEvent</ref> &amp;</type>
          <declname>evt</declname>
        </param>
        <briefdescription>
<para>Overrides the handleDragEvent on the container. </para>
        </briefdescription>
        <detaileddescription>
<para>The keyboard handles drag events to enable the container to, emit a CANCEL, if the user drags outside the currently pressed key.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classtouchgfx_1_1_drag_event" kindref="compound">DragEvent</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a55f0147849534b72999205bdb1fa86cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Keyboard</definition>
        <argsstring>()</argsstring>
        <name>Keyboard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a00b4f472644b940ebde31fa6e8845b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBuffer</definition>
        <argsstring>(Unicode::UnicodeChar *newBuffer, uint16_t newBufferSize)</argsstring>
        <name>setBuffer</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
          <declname>newBuffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>newBufferSize</declname>
        </param>
        <briefdescription>
<para>Sets the buffer to be used by the keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para>Keys entered are added to the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer holding the text edited by the keyboard. If the buffer is not empty, the edit position for the keyboard will be set to the end of the provided text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newBufferSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer, i.e. number of UnicodeChar&apos;s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1a25c4ed3fd357ec9cab171c4ba33122ad" kindref="member">getBuffer</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1af9e417e884c95bc169852e8c0758d653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBufferPosition</definition>
        <argsstring>(uint16_t newPos)</argsstring>
        <name>setBufferPosition</name>
        <param>
          <type>uint16_t</type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
<para>Change the buffer position i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>the next index to place a character when a key is pressed. This can be used to implement backspace functionality if the class using the <ref refid="classtouchgfx_1_1_keyboard" kindref="compound">Keyboard</ref> implements a callback and maps it to a backspace implementation. Setting the position will cause the <ref refid="classtouchgfx_1_1_text_area" kindref="compound">TextArea</ref> displaying the text to be invalidated to request a redraw.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPos</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1a72e3e18b4e464a712a4c478087573748" kindref="member">setTextIndentation</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a0bbd34242aa94939d20fa23e8f0f6197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setKeyListener</definition>
        <argsstring>(GenericCallback&lt; Unicode::UnicodeChar &gt; &amp;callback)</argsstring>
        <name>setKeyListener</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_generic_callback" kindref="compound">GenericCallback</ref>&lt; <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> &gt; &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Sets the callback for the keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback will be executed every time a key is clicked. The callback argument contains the key that was just pressed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> to invoke.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Backspace, shift and mode keys report a 0 as value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="235" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a3de88732c98d6421c774bcaece7a042b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setKeymappingList</definition>
        <argsstring>(const KeyMappingList *newKeyMappingList)</argsstring>
        <name>setKeymappingList</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> *</type>
          <declname>newKeyMappingList</declname>
        </param>
        <briefdescription>
<para>Set/change the <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> to use. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classtouchgfx_1_1_keyboard" kindref="compound">Keyboard</ref> will invalidate the space it occupies to request a redraw.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newKeyMappingList</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a5b45bbc0cf7c9a84ec527f05deb332eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setLayout</definition>
        <argsstring>(const Layout *newLayout)</argsstring>
        <name>setLayout</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> *</type>
          <declname>newLayout</declname>
        </param>
        <briefdescription>
<para>Set/change the <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Keyboard::Layout</ref> to use.The <ref refid="classtouchgfx_1_1_keyboard" kindref="compound">Keyboard</ref> will invalidate the space it occupies to request a redraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>The new layout.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_keyboard_1a042134860872da5929cf8be301fc0d24" kindref="member">getLayout</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a72e3e18b4e464a712a4c478087573748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTextIndentation</definition>
        <argsstring>()</argsstring>
        <name>setTextIndentation</name>
        <briefdescription>
<para>Sets text indentation by making the area for entered text slightly larger. </para>
        </briefdescription>
        <detaileddescription>
<para>The result is that some characters (often &apos;j&apos; and &apos;_&apos;) will not be cut off. Indentation is added to both sides of the text area in case the text is right-to-left. Indentation is automatically set so all characters will display properly.</para>
<para><simplesect kind="see"><para><ref refid="classtouchgfx_1_1_text_area_1a371f930ee677c79033f7dfe938848ee8" kindref="member">TextArea::setIndentation</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1acec86b051eb2fd163d5f5b2e19679f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~Keyboard</definition>
        <argsstring>()</argsstring>
        <name>~Keyboard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="94" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a1d303af8a27affc1ee73f7bb09d7db20" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtouchgfx_1_1_keyboard_1_1_callback_area" kindref="compound">CallbackArea</ref></type>
        <definition>CallbackArea getCallbackAreaForCoordinates</definition>
        <argsstring>(int16_t x, int16_t y) const</argsstring>
        <name>getCallbackAreaForCoordinates</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Gets the callback area defined by the layout for the specified coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate to perform key look up with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate to perform key look up with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="structtouchgfx_1_1_keyboard_1_1_callback_area" kindref="compound">CallbackArea</ref>, which is empty if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1a0159a93864fa5f9574763629d127064b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getCharForKey</definition>
        <argsstring>(uint8_t keyId) const</argsstring>
        <name>getCharForKey</name>
        <param>
          <type>uint8_t</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
<para>Maps a keyId to the UnicodeChar being displayed by that key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the key to perform lookup with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the UnicodeChar used for the specified key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_keyboard_1af0dfbad2227e050e889458cccdf9117f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtouchgfx_1_1_keyboard_1_1_key" kindref="compound">Key</ref></type>
        <definition>Key getKeyForCoordinates</definition>
        <argsstring>(int16_t x, int16_t y) const</argsstring>
        <name>getKeyForCoordinates</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Gets key for coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate to perform key look up with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate to perform key look up with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The key for the given coordinates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/Keyboard.hpp" line="261" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The keyboard provides text input for touch devices. </para>
    </briefdescription>
    <detaileddescription>
<para>It is configured using a <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> and a <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref>, both of which can be changed at runtime. The class using the keyboard must provide a buffer where the entered text is placed. The <ref refid="structtouchgfx_1_1_keyboard_1_1_layout" kindref="compound">Layout</ref> contains a bitmap id for the image to display and two mappings: rectangles to key ids and rectangles to callback methods.</para>
<para>The <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> maps key ids to <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> characters. When the user presses a key, the keyboard looks in its layout for a rectangle containing the coordinates pressed. If it finds a mapping to a callback method, it will invoke that method. If it finds a mapping to a key it will look up the <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> character for that key and place it in a text buffer. The sequence is: (x,y) -&gt; KeyId -&gt; UnicodeChar.</para>
<para>A keyboard with multiple key mappings e.g. lower case alpha, upper case alpha and numeric mappings can be created by implementing callback methods for shift and mode areas in the provided bitmap and then changing the <ref refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list" kindref="compound">KeyMappingList</ref> when those areas are pressed. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="818">
        <label>Container</label>
        <link refid="classtouchgfx_1_1_container"/>
        <childnode refid="819" relation="public-inheritance">
        </childnode>
      </node>
      <node id="817">
        <label>Keyboard</label>
        <link refid="classtouchgfx_1_1_keyboard"/>
        <childnode refid="818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="819">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="825">
        <label>KeyMappingList</label>
        <link refid="structtouchgfx_1_1_keyboard_1_1_key_mapping_list"/>
        <childnode refid="826" relation="usage">
          <edgelabel>keyMappingArray</edgelabel>
        </childnode>
      </node>
      <node id="836">
        <label>Widget</label>
        <link refid="classtouchgfx_1_1_widget"/>
        <childnode refid="822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="833">
        <label>TextAreaWithOneWildcard</label>
        <link refid="classtouchgfx_1_1_text_area_with_one_wildcard"/>
        <childnode refid="834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="821">
        <label>Container</label>
        <link refid="classtouchgfx_1_1_container"/>
        <childnode refid="822" relation="public-inheritance">
        </childnode>
        <childnode refid="822" relation="usage">
          <edgelabel>firstChild</edgelabel>
        </childnode>
      </node>
      <node id="823">
        <label>Rect</label>
        <link refid="classtouchgfx_1_1_rect"/>
      </node>
      <node id="837">
        <label>Image</label>
        <link refid="classtouchgfx_1_1_image"/>
        <childnode refid="836" relation="public-inheritance">
        </childnode>
        <childnode refid="838" relation="usage">
          <edgelabel>bitmap</edgelabel>
        </childnode>
      </node>
      <node id="824">
        <label>GenericCallback&lt; Unicode::UnicodeChar &gt;</label>
        <link refid="classtouchgfx_1_1_generic_callback"/>
      </node>
      <node id="830">
        <label>CallbackArea</label>
        <link refid="structtouchgfx_1_1_keyboard_1_1_callback_area"/>
        <childnode refid="823" relation="usage">
          <edgelabel>keyArea</edgelabel>
        </childnode>
        <childnode refid="831" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
      </node>
      <node id="820">
        <label>Keyboard</label>
        <link refid="classtouchgfx_1_1_keyboard"/>
        <childnode refid="821" relation="public-inheritance">
        </childnode>
        <childnode refid="824" relation="usage">
          <edgelabel>keyListener</edgelabel>
        </childnode>
        <childnode refid="825" relation="usage">
          <edgelabel>keyMappingList</edgelabel>
        </childnode>
        <childnode refid="827" relation="usage">
          <edgelabel>layout</edgelabel>
        </childnode>
        <childnode refid="833" relation="usage">
          <edgelabel>enteredText</edgelabel>
        </childnode>
        <childnode refid="837" relation="usage">
          <edgelabel>highlightImage</edgelabel>
          <edgelabel>image</edgelabel>
        </childnode>
      </node>
      <node id="829">
        <label>TypedText</label>
        <link refid="classtouchgfx_1_1_typed_text"/>
      </node>
      <node id="822">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
        <childnode refid="823" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="822" relation="usage">
          <edgelabel>nextSibling</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="835">
        <label>TextArea</label>
        <link refid="classtouchgfx_1_1_text_area"/>
        <childnode refid="836" relation="public-inheritance">
        </childnode>
        <childnode refid="829" relation="usage">
          <edgelabel>typedText</edgelabel>
        </childnode>
        <childnode refid="832" relation="usage">
          <edgelabel>color</edgelabel>
        </childnode>
      </node>
      <node id="827">
        <label>Layout</label>
        <link refid="structtouchgfx_1_1_keyboard_1_1_layout"/>
        <childnode refid="823" relation="usage">
          <edgelabel>textAreaPosition</edgelabel>
        </childnode>
        <childnode refid="828" relation="usage">
          <edgelabel>keyArray</edgelabel>
        </childnode>
        <childnode refid="829" relation="usage">
          <edgelabel>textAreaFont</edgelabel>
        </childnode>
        <childnode refid="830" relation="usage">
          <edgelabel>callbackAreaArray</edgelabel>
        </childnode>
        <childnode refid="832" relation="usage">
          <edgelabel>textAreaFontColor</edgelabel>
          <edgelabel>keyFontColor</edgelabel>
        </childnode>
      </node>
      <node id="838">
        <label>Bitmap</label>
        <link refid="classtouchgfx_1_1_bitmap"/>
      </node>
      <node id="834">
        <label>TextAreaWithWildcardBase</label>
        <link refid="classtouchgfx_1_1_text_area_with_wildcard_base"/>
        <childnode refid="835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="831">
        <label>GenericCallback&lt; T1, T2, T3 &gt;</label>
        <link refid="classtouchgfx_1_1_generic_callback"/>
      </node>
      <node id="832">
        <label>colortype</label>
        <link refid="structtouchgfx_1_1colortype"/>
      </node>
      <node id="828">
        <label>Key</label>
        <link refid="structtouchgfx_1_1_keyboard_1_1_key"/>
        <childnode refid="823" relation="usage">
          <edgelabel>keyArea</edgelabel>
        </childnode>
      </node>
      <node id="826">
        <label>KeyMapping</label>
        <link refid="structtouchgfx_1_1_keyboard_1_1_key_mapping"/>
      </node>
    </collaborationgraph>
    <location file="touchgfx/widgets/Keyboard.hpp" line="42" column="1" bodyfile="touchgfx/widgets/Keyboard.hpp" bodystart="41" bodyend="293"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_container_1a302ad1a4da6fe171eb249828bd8dc7ab" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>add</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1aaa309fc7aea0ab102d04ff7d7fcfe336" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>buffer</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a4e7af17ef6039d5e27411d7658c2bac0" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>bufferPosition</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1ad1859b3438b8d5562f5c3c0ecbe760d4" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>bufferSize</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a214b91c2ce9533497c181ab4ae7a41f6" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>cancelIsEmitted</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae2d939b2a9c253f0fb3bae3ec7be4e2f" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>childGeometryChanged</name></member>
      <member refid="classtouchgfx_1_1_container_1ac92243515043dff4fd93c987b894b017" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>Container</name></member>
      <member refid="classtouchgfx_1_1_container_1a0109ca3d59d6ced431a24313fef18803" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>contains</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a1277d4bddd51dbc604de265fb70ccbfd" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>draw</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9cf3a85fa7554475fa42c97985bda6df" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>Drawable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4a009ec2b654351679a0124e9055abdc" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>drawToDynamicBitmap</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a0d1799f9a7783272b1eb749f184b103a" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>enteredText</name></member>
      <member refid="classtouchgfx_1_1_container_1a15fc4ae5c33721f5f425b20640217f22" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>firstChild</name></member>
      <member refid="classtouchgfx_1_1_container_1a2b224826cd4f0f674009c21d6821f525" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>forEachChild</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa7737d9d49d7f55ec9bde8f2c9751b1d" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getAbsoluteRect</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a25c4ed3fd357ec9cab171c4ba33122ad" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getBuffer</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1ac7bc29fa2c414ae285854dfb21f9f615" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getBufferPosition</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a1d303af8a27affc1ee73f7bb09d7db20" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getCallbackAreaForCoordinates</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a0159a93864fa5f9574763629d127064b" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getCharForKey</name></member>
      <member refid="classtouchgfx_1_1_container_1a47e8a844fa50b171656f8355fd8e313b" prot="protected" virt="virtual"><scope>touchgfx::Keyboard</scope><name>getContainedArea</name></member>
      <member refid="classtouchgfx_1_1_container_1a35ae5c9547dd1861f70b5e4f0f9b94b3" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getFirstChild</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ad00483821e06fe4d0d70222de4135d30" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getHeight</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1af0dfbad2227e050e889458cccdf9117f" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getKeyForCoordinates</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1af7b073ae21bf6ccde27a850fea1d3b3c" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getKeyMappingList</name></member>
      <member refid="classtouchgfx_1_1_container_1a6bc8e89dc7f879221e9862fb27dc726f" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>getLastChild</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a042134860872da5929cf8be301fc0d24" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getLayout</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a61c9b2bf703c49a6d238d354ddcaedb3" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getNextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a013e065d4d9a10dbfa0ddee9a35582a3" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getParent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af23a5bb7d473e16363a449c497586be3" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getRect</name></member>
      <member refid="classtouchgfx_1_1_container_1a4dcdd780e93cc783a2ceeda00c6f3b51" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>getSolidRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4783dfe657ff1b7a33261bda8c4b4266" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>getSolidRectAbsolute</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a83b8847f583b63e60aa4bf778261ddd7" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>getVisibleRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1acae58162aaca6fc174416550f76668e7" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac071e9b7ccf37179df7d29c6778b664c" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a26752e6cff4607d0eec8768ef6d9032a" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>getY</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a7f1524b90bc90e5f6cf7ee47aae12123" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>handleClickEvent</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a06ae1946b2124cc94e26cfe18728debf" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>handleDragEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4db4945ecbc2303bf860e082409b8029" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>handleGestureEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1af635cee0f186c3d0fcea60bac14355" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>handleTickEvent</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a1c56977ef91b2a7c3ae565433e142368" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>highlightImage</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1af6057c173c211ff78c0f66fe3229899e" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>image</name></member>
      <member refid="classtouchgfx_1_1_container_1aca896b17460628dceeac8b01553b6a00" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>insert</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2800b4c18c63e9e7b1f85a74ce6b80c3" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>invalidate</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a130cf6e1bf2b9f04f48e659758fa75e2" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>invalidateRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a01c717b9abc98d48673b79d691c2d28a" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>isTouchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9d8a6cfb13917785c143e74d40e4e2be" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>isVisible</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a55f0147849534b72999205bdb1fa86cb" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>Keyboard</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1ac254b9ee5f805371a5db9584046ab046" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>keyListener</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1ad6b1c95cd7a312fb84dfc18a1c245608" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>keyMappingList</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a4c99d938faa124a3b4c58e3ddc9b610b" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>layout</name></member>
      <member refid="classtouchgfx_1_1_container_1add539b68574f09b364f0b4e6a312b9b0" prot="protected" virt="virtual"><scope>touchgfx::Keyboard</scope><name>moveChildrenRelative</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af3590480070e2cf91580976f322d2c5e" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>moveRelative</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aadc5abfad4d2fcc331cf8de8713dc00e" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>moveTo</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0da4a00c3fbdea5740e52c7e04316c65" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>nextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ab77c13cde2b01107dcbc5c2b584d422f" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>parent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2a955ddc316d002f566598f340eb2af9" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>rect</name></member>
      <member refid="classtouchgfx_1_1_container_1a4d9056af30ab3c61da25a71023a341f2" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>remove</name></member>
      <member refid="classtouchgfx_1_1_container_1a4e62c805a8478320f1e650e6a635b31a" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>removeAll</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a00b4f472644b940ebde31fa6e8845b15" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setBuffer</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1af9e417e884c95bc169852e8c0758d653" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setBufferPosition</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a47a6312407603de99247bb802dbd8a48" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setHeight</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a0bbd34242aa94939d20fa23e8f0f6197" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setKeyListener</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a3de88732c98d6421c774bcaece7a042b" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setKeymappingList</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a5b45bbc0cf7c9a84ec527f05deb332eb" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setLayout</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac218c371450d8ad2bed3e1b07965a41a" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setPosition</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1a72e3e18b4e464a712a4c478087573748" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setTextIndentation</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae4c38eadb852b153850ea7ded1f50a19" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setTouchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a71639c6634c5dcf6d1bb21b8b1b61f5b" prot="public" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>setVisible</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae74a37f71d23440fc8b0466ad8ecfe4b" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9f6db7f34a74e991fc446fffb5703a53" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6c86659dc1e7355c207e9c0aa18af167" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setXY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1b08d48e7e23a046f09e63089bc82bc1" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>setY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0d014de134cb9b9c1c361fcd726a5f34" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>touchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a48c1d14ac943dbfa4935ea39db950608" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>translateRectToAbsolute</name></member>
      <member refid="classtouchgfx_1_1_container_1a23f8fdbaba5449e55efb7a14a96b657d" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>unlink</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa54a57ae048476d840caf6d4d2c47aa3" prot="protected" virt="non-virtual"><scope>touchgfx::Keyboard</scope><name>visible</name></member>
      <member refid="classtouchgfx_1_1_container_1a316105bb0065103f6190b08783144c33" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>~Container</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6bb040a11ffc2bd641283cc0bc0d1346" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>~Drawable</name></member>
      <member refid="classtouchgfx_1_1_keyboard_1acec86b051eb2fd163d5f5b2e19679f9e" prot="public" virt="virtual"><scope>touchgfx::Keyboard</scope><name>~Keyboard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
