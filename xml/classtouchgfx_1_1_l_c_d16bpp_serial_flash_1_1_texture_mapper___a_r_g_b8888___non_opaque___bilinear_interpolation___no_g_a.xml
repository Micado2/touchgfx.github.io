<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a" kind="class" language="C++" prot="private">
    <compoundname>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</compoundname>
    <basecompoundref prot="public" virt="non-virtual">LCD16bppSerialFlash::DrawTextureMapScanLineBase16</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1ab2182346858447906df97b78f1bd50fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void drawTextureMapScanLineSubdivisions</definition>
        <argsstring>(int subdivisions, const int widthModLength, int pixelsToDraw, const int affineLength, float oneOverZRight, float UOverZRight, float VOverZRight, fixed16_16 U, fixed16_16 V, fixed16_16 deltaU, fixed16_16 deltaV, float ULeft, float VLeft, float URight, float VRight, float ZRight, const DrawingSurface &amp;dest, const int destX, const int destY, const int16_t bitmapWidth, const int16_t bitmapHeight, const TextureSurface &amp;texture, uint8_t alpha, const float dOneOverZdXAff, const float dUOverZdXAff, const float dVOverZdXAff)</argsstring>
        <name>drawTextureMapScanLineSubdivisions</name>
        <param>
          <type>int</type>
          <declname>subdivisions</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>widthModLength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pixelsToDraw</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>affineLength</declname>
        </param>
        <param>
          <type>float</type>
          <declname>oneOverZRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>UOverZRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VOverZRight</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>V</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>deltaU</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>deltaV</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ULeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VLeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>URight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ZRight</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_drawing_surface" kindref="compound">DrawingSurface</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>destX</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>destY</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapHeight</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_texture_surface" kindref="compound">TextureSurface</ref> &amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dOneOverZdXAff</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dUOverZdXAff</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dVOverZdXAff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD16bppSerialFlash.hpp" line="785" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1af1feb8cda3ae1ae73fea6bd02dccd1c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FORCE_INLINE_FUNCTION void</type>
        <definition>FORCE_INLINE_FUNCTION void writePixel</definition>
        <argsstring>(uint16_t *const destBits, const uint32_t *const textureBits32, const int16_t bitmapWidth, const int UInt, const int VInt, const uint8_t UFrac, const uint8_t VFrac)</argsstring>
        <name>writePixel</name>
        <param>
          <type>uint16_t *const</type>
          <declname>destBits</declname>
        </param>
        <param>
          <type>const uint32_t *const</type>
          <declname>textureBits32</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>UInt</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>VInt</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>UFrac</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>VFrac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD16bppSerialFlash.hpp" line="788" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1a5b98b4296b26aeda0944085f61ac47a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writePixelOnEdge</definition>
        <argsstring>(uint16_t *const destBits, const uint32_t *const textureBits32, const int16_t bitmapWidth, const int16_t bitmapHeight, const int UInt, const int VInt, const uint8_t UFrac, const uint8_t VFrac)</argsstring>
        <name>writePixelOnEdge</name>
        <param>
          <type>uint16_t *const</type>
          <declname>destBits</declname>
        </param>
        <param>
          <type>const uint32_t *const</type>
          <declname>textureBits32</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapHeight</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>UInt</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>VInt</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>UFrac</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>VFrac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD16bppSerialFlash.hpp" line="789" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1903">
        <label>DrawTextureMapScanLineBase16</label>
        <childnode refid="1904" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1904">
        <label>DrawTextureMapScanLineBase</label>
        <link refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base"/>
      </node>
      <node id="1902">
        <label>LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</label>
        <childnode refid="1903" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1906">
        <label>DrawTextureMapScanLineBase16</label>
        <childnode refid="1907" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1907">
        <label>DrawTextureMapScanLineBase</label>
        <link refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base"/>
      </node>
      <node id="1905">
        <label>LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</label>
        <childnode refid="1906" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="platform/driver/lcd/LCD16bppSerialFlash.hpp" line="783" column="1" bodyfile="platform/driver/lcd/LCD16bppSerialFlash.hpp" bodystart="782" bodyend="790"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1add0589d9e887a57f8b687470a08d8266" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>drawTextureMapNextSubdivision</name></member>
      <member refid="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1ab2182346858447906df97b78f1bd50fe" prot="public" virt="virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>drawTextureMapScanLineSubdivisions</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1adc2b8996624c05d3f30f27186185aa3c" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>half</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1a22c84c4c44c3ec0427c4dca43d111740" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is1Inside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1a67e23de90ee7c3d9096ae799c7da8e7c" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is1x1Inside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1acbb5432c44dc0aa4c4d033a45ad71ead" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is2Inside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1a465467b63215cdd985ba984c46fbd937" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is2PartiallyInside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1a7eb16f0232cb2658f9c3396888ef290f" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is2x2Inside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1a5628626873a5c12fd2aaa6471bb76330" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>is2x2PartiallyInside</name></member>
      <member refid="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_draw_texture_map_scan_line_base16_1a38edcbd3e6c790bf0989f5cba4d1f45c" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>overrunCheckBilinearInterpolation</name></member>
      <member refid="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_draw_texture_map_scan_line_base16_1af8eae24fd3db5a00151a795b15f57e54" prot="protected" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>overrunCheckNearestNeighbor</name></member>
      <member refid="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1af1feb8cda3ae1ae73fea6bd02dccd1c5" prot="private" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>writePixel</name></member>
      <member refid="classtouchgfx_1_1_l_c_d16bpp_serial_flash_1_1_texture_mapper___a_r_g_b8888___non_opaque___bilinear_interpolation___no_g_a_1a5b98b4296b26aeda0944085f61ac47a0" prot="private" virt="non-virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>writePixelOnEdge</name></member>
      <member refid="classtouchgfx_1_1_l_c_d_1_1_draw_texture_map_scan_line_base_1abeeb40671ac8350ae2abbcee86f96609" prot="public" virt="virtual"><scope>touchgfx::LCD16bppSerialFlash::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA</scope><name>~DrawTextureMapScanLineBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
