<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_single_block_allocator" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::SingleBlockAllocator</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_frame_buffer_allocator" prot="public" virt="non-virtual">FrameBufferAllocator</basecompoundref>
    <includes local="no">FrameBufferAllocator.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint16_t</type>
        <declname>block_size</declname>
        <defname>block_size</defname>
      </param>
      <param>
        <type>uint32_t</type>
        <declname>bytes_pr_pixel</declname>
        <defname>bytes_pr_pixel</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88" prot="private" static="no" strong="no">
        <type></type>
        <name>BlockState</name>
        <enumvalue id="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a2f0d18fc0d0fa4a6cd92dc328501874d" prot="private">
          <name>EMPTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a6a8a5583659fbcdf64186aacaf55cece" prot="private">
          <name>ALLOCATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a0df07fbba3060ca340188fc6a9a583da" prot="private">
          <name>DRAWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88adfcb5fb1201d2110fa6604e4db15d459" prot="private">
          <name>SENDING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="173" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="172" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_single_block_allocator_1a9fa59abd36991ffdfb4d33d03a62768f" prot="private" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>volatile Rect blockRect</definition>
        <argsstring></argsstring>
        <name>blockRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="181" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_single_block_allocator_1a2b1894f00db675a1294d276378a41cc4" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t memory[block_size/4]</definition>
        <argsstring>[block_size/4]</argsstring>
        <name>memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="180" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_single_block_allocator_1a04bf687f0808f3c14ddce7d1dbad3654" prot="private" static="no" mutable="no">
        <type>BlockState</type>
        <definition>volatile BlockState state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="179" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1a2497da66d9e04ea0b5112cddd1d297bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>uint16_t</type>
        <definition>virtual uint16_t allocateBlock</definition>
        <argsstring>(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t **block)</argsstring>
        <name>allocateBlock</name>
        <reimplements refid="classtouchgfx_1_1_frame_buffer_allocator_1a3365296b1eba57ee3a979ae24f58bffa">allocateBlock</reimplements>
        <param>
          <type>const uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Allocates a framebuffer block. </para>
        </briefdescription>
        <detaileddescription>
<para>The block will have at least the width requested. The height of the allocated block can be lower than requested if not enough memory is available. This class calls <ref refid="namespacetouchgfx_1a7a3610743e1972c8f41084114a82389e" kindref="member">FrameBufferAllocatorWaitOnTransfer()</ref> if no block is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute x coordinate of the block on the screen. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute y coordinate of the block on the screen. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">block</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer to return the block address in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The height of the allocated block. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="110" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="110" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1a27ace0c47cb7a44e1542a0cde44a8efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void freeBlockAfterTransfer</definition>
        <argsstring>()</argsstring>
        <name>freeBlockAfterTransfer</name>
        <reimplements refid="classtouchgfx_1_1_frame_buffer_allocator_1a7bdd152d1fb8624413d5999c0e429115">freeBlockAfterTransfer</reimplements>
        <briefdescription>
<para>Free a block after transfer to the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Marks a previously allocated block as transferred and ready to reuse. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="165" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1a137e28734f80992194e4f42ec0846ed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const uint8_t *</type>
        <definition>virtual const uint8_t* getBlockForTransfer</definition>
        <argsstring>(Rect &amp;rect)</argsstring>
        <name>getBlockForTransfer</name>
        <reimplements refid="classtouchgfx_1_1_frame_buffer_allocator_1acf7e532e03f66d46e50e9f085e30bbea">getBlockForTransfer</reimplements>
        <param>
          <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Get the block ready for transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to rect to write block x, y, width, and height.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the address of the block ready for transfer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="153" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1acdafcf1d6b01559219c02e6076cdcb05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hasBlockReadyForTransfer</definition>
        <argsstring>()</argsstring>
        <name>hasBlockReadyForTransfer</name>
        <reimplements refid="classtouchgfx_1_1_frame_buffer_allocator_1a0c4bb68f5e74e3bbec35b6cf38dccb9a">hasBlockReadyForTransfer</reimplements>
        <briefdescription>
<para>Check if a block is ready for transfer to the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if a block is ready for transfer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="141" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1a639978843010083e09b66a073a58d8b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void markBlockReadyForTransfer</definition>
        <argsstring>()</argsstring>
        <name>markBlockReadyForTransfer</name>
        <reimplements refid="classtouchgfx_1_1_frame_buffer_allocator_1a47d30f293c8e92a7ef8b9ee9a0660091">markBlockReadyForTransfer</reimplements>
        <briefdescription>
<para>Marks a previously allocated block as ready to be transferred to the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="129" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_single_block_allocator_1a421da559269609f85e992cbbe1f53978" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SingleBlockAllocator</definition>
        <argsstring>()</argsstring>
        <name>SingleBlockAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="91" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is partial framebuffer allocator using just one block. </para>
    </briefdescription>
    <detaileddescription>
<para>No new buffer can be allocated until the block has been transferred to <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>.</para>
<para><simplesect kind="see"><para><ref refid="classtouchgfx_1_1_many_block_allocator" kindref="compound">ManyBlockAllocator</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1471">
        <label>SingleBlockAllocator&lt; block_size, bytes_pr_pixel &gt;</label>
        <link refid="classtouchgfx_1_1_single_block_allocator"/>
        <childnode refid="1472" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1472">
        <label>FrameBufferAllocator</label>
        <link refid="classtouchgfx_1_1_frame_buffer_allocator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1473">
        <label>SingleBlockAllocator&lt; block_size, bytes_pr_pixel &gt;</label>
        <link refid="classtouchgfx_1_1_single_block_allocator"/>
        <childnode refid="1474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1474">
        <label>FrameBufferAllocator</label>
        <link refid="classtouchgfx_1_1_frame_buffer_allocator"/>
      </node>
    </collaborationgraph>
    <location file="touchgfx/hal/FrameBufferAllocator.hpp" line="89" column="1" bodyfile="touchgfx/hal/FrameBufferAllocator.hpp" bodystart="88" bodyend="182"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a2497da66d9e04ea0b5112cddd1d297bb" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>allocateBlock</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a6a8a5583659fbcdf64186aacaf55cece" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>ALLOCATED</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a9fa59abd36991ffdfb4d33d03a62768f" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>blockRect</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>BlockState</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a0df07fbba3060ca340188fc6a9a583da" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>DRAWN</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88a2f0d18fc0d0fa4a6cd92dc328501874d" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>EMPTY</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a27ace0c47cb7a44e1542a0cde44a8efe" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>freeBlockAfterTransfer</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a137e28734f80992194e4f42ec0846ed2" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>getBlockForTransfer</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1acdafcf1d6b01559219c02e6076cdcb05" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>hasBlockReadyForTransfer</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a639978843010083e09b66a073a58d8b5" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>markBlockReadyForTransfer</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a2b1894f00db675a1294d276378a41cc4" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>memory</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1ad6cf116f1b761cc66851b7c34eb68d88adfcb5fb1201d2110fa6604e4db15d459" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>SENDING</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a421da559269609f85e992cbbe1f53978" prot="public" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>SingleBlockAllocator</name></member>
      <member refid="classtouchgfx_1_1_single_block_allocator_1a04bf687f0808f3c14ddce7d1dbad3654" prot="private" virt="non-virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>state</name></member>
      <member refid="classtouchgfx_1_1_frame_buffer_allocator_1af5063163985b08c7cc7e26841f10302d" prot="public" virt="virtual"><scope>touchgfx::SingleBlockAllocator</scope><name>~FrameBufferAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
