<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_h_a_l_s_d_l2" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::HALSDL2</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_h_a_l" prot="public" virt="non-virtual">HAL</basecompoundref>
    <includes local="no">HALSDL2.hpp</includes>
    <innerclass refid="classtouchgfx_1_1_h_a_l_s_d_l2_1_1_skin_info" prot="private">touchgfx::HALSDL2::SkinInfo</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a76d56c236c346f17d434313197a29eeb" prot="private" static="no" mutable="no">
        <type>SkinInfo *</type>
        <definition>SkinInfo* currentSkin</definition>
        <argsstring></argsstring>
        <name>currentSkin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="375" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a8c45501c6d6f8960e0f957dd40583db7" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* customTitle</definition>
        <argsstring></argsstring>
        <name>customTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="353" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1af32f244e4a5c9fbf0cd2dbc843f00ae2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool debugInfoEnabled</definition>
        <argsstring></argsstring>
        <name>debugInfoEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="347" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a7aa1f1dea357a81887bc60328b895ba1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool flashInvalidatedRect</definition>
        <argsstring></argsstring>
        <name>flashInvalidatedRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="379" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a261482a22f8a5bfa72aa6b770edeeed1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isSkinActive</definition>
        <argsstring></argsstring>
        <name>isSkinActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="376" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a97efaea785d552f4151bf1639132e86f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isWindowBorderless</definition>
        <argsstring></argsstring>
        <name>isWindowBorderless</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="377" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a04d91bca58c7ebb89eb34ff257f8dc5f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isWindowVisible</definition>
        <argsstring></argsstring>
        <name>isWindowVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="378" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a3a31646c769fd598c711472155c00cac" prot="private" static="no" mutable="no">
        <type>SkinInfo</type>
        <definition>SkinInfo landscapeSkin</definition>
        <argsstring></argsstring>
        <name>landscapeSkin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="374" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a92edeac1ba786b47283789bb0e864833" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float msBetweenTicks</definition>
        <argsstring></argsstring>
        <name>msBetweenTicks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="349" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1af4cb0ea144aaec8f16f70ff421a3b31d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float msPassed</definition>
        <argsstring></argsstring>
        <name>msPassed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="350" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a9fc545975737e815e26217e20778e277" prot="private" static="no" mutable="no">
        <type>SkinInfo</type>
        <definition>SkinInfo portraitSkin</definition>
        <argsstring></argsstring>
        <name>portraitSkin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="373" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1af44fe217683aa2b74ca754ce298df307" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char programPath[300]</definition>
        <argsstring>[300]</argsstring>
        <name>programPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="372" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1afc42c41a97d4c3b14ae657c1991a05c1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool windowDrag</definition>
        <argsstring></argsstring>
        <name>windowDrag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="381" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a57e449d1bc71d0f8bd9899e13268e77d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int windowDragX</definition>
        <argsstring></argsstring>
        <name>windowDragX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="382" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ab48054085afef42fb016a3c242636685" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int windowDragY</definition>
        <argsstring></argsstring>
        <name>windowDragY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="383" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1acad576d9d244cb22faf1b95c5b7b0a2f" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool _lastTouch</definition>
        <argsstring></argsstring>
        <name>_lastTouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="394" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ae8bcdeccd59cd6e7f1f5bf94418ac451" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int _numTouches</definition>
        <argsstring></argsstring>
        <name>_numTouches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="396" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a640b4a4fb1d771e28f04131d783d260b" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool _touches[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_touches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="395" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a1b83cc017163d0027e9f71f39225231f" prot="private" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t _x</definition>
        <argsstring></argsstring>
        <name>_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="387" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aeaaf1555e8b458fbd57b2b3e10599f85" prot="private" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t _xMouse</definition>
        <argsstring></argsstring>
        <name>_xMouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="385" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a4ca4ab5da1bd6e1e07872dcb254b0309" prot="private" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t _y</definition>
        <argsstring></argsstring>
        <name>_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="388" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a42c6c93d982b66a2a700d56397f7ceee" prot="private" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t _yMouse</definition>
        <argsstring></argsstring>
        <name>_yMouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="386" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a50163bfdf770359a983182d3503da712" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t icon[]</definition>
        <argsstring>[]</argsstring>
        <name>icon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="352" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aa34d41dcf2247ebcb3fefb6b3d10de99" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int initialMouseX</definition>
        <argsstring></argsstring>
        <name>initialMouseX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="392" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ad42fd0a05d44b21bf247919d5439c6ec" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int initialMouseY</definition>
        <argsstring></argsstring>
        <name>initialMouseY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="393" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ad8b93504576408c1dddb9e7c7c05bc51" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int initialWindowX</definition>
        <argsstring></argsstring>
        <name>initialWindowX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="390" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a22ada8bce2510c862a8f608d3578f974" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int initialWindowY</definition>
        <argsstring></argsstring>
        <name>initialWindowY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="391" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aa18809f3bc9aefcae9971d5cbb35f621" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool isWindowBeingDragged</definition>
        <argsstring></argsstring>
        <name>isWindowBeingDragged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="389" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a37e1d922e78c9925e4d656bc74912cc9" prot="private" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t keyPressed</definition>
        <argsstring></argsstring>
        <name>keyPressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="398" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ac77022b9a52bdd38af7df0b409ea78da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void blitSetTransparencyKey</definition>
        <argsstring>(uint16_t key)</argsstring>
        <name>blitSetTransparencyKey</name>
        <param>
          <type>uint16_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>If Blit-operations are supported, transparency-keying support is implicitly assumed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;transparent&quot; color value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Transparancy key is no longer supported. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a4f53c9928e6d17edbb6382461ea60a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool blockCopy</definition>
        <argsstring>(void *RESTRICT dest, const void *RESTRICT src, uint32_t numBytes)</argsstring>
        <name>blockCopy</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a4f53c9928e6d17edbb6382461ea60a43">blockCopy</reimplements>
        <param>
          <type>void *RESTRICT</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *RESTRICT</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>This function performs a platform-specific memcpy, if supported by the hardware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to destination memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to source memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the copy succeeded, false if copy was not performed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a7e98db3f597ee3ffc7a1b1038e1fef2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void copyScreenshotToClipboard</definition>
        <argsstring>()</argsstring>
        <name>copyScreenshotToClipboard</name>
        <briefdescription>
<para>Copies the screenshot to clipboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aab0db61c2cf5905c3d0e6b481dd22065" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool doSampleTouch</definition>
        <argsstring>(int32_t &amp;x, int32_t &amp;y) const</argsstring>
        <name>doSampleTouch</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Samples the position of the mouse cursor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if touch detected, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a93dfbddf2eff9ce1d0fd1bf2a89e5028" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void flushFrameBuffer</definition>
        <argsstring>()</argsstring>
        <name>flushFrameBuffer</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a93dfbddf2eff9ce1d0fd1bf2a89e5028">flushFrameBuffer</reimplements>
        <briefdescription>
<para>This function is called whenever the framework has performed a complete draw. </para>
        </briefdescription>
        <detaileddescription>
<para>On some platforms, a local framebuffer needs to be pushed to the display through a SPI channel or similar. Implement that functionality here. This function is called whenever the framework has performed a complete draw. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1af7803460ef14e8d4a4731d40a9f4c57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void flushFrameBuffer</definition>
        <argsstring>(const Rect &amp;rect)</argsstring>
        <name>flushFrameBuffer</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1af7803460ef14e8d4a4731d40a9f4c57f">flushFrameBuffer</reimplements>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>This function is called whenever the framework has performed a partial draw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the screen that has been drawn, expressed in absolute coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a9cdcb279b6edfda3cc5b414d470b2b17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* getWindowTitle</definition>
        <argsstring>() const</argsstring>
        <name>getWindowTitle</name>
        <briefdescription>
<para>Gets window title. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>null &quot;TouchGFX simulator&quot; unless set to something else using <ref refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab0bfbd62cf8ab1b0a55e7071a0fdca11" kindref="member">setWindowTitle()</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab0bfbd62cf8ab1b0a55e7071a0fdca11" kindref="member">setWindowTitle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ad1896be0f4d4364c64d12909e2e2437f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool getWindowVisible</definition>
        <argsstring>() const</argsstring>
        <name>getWindowVisible</name>
        <briefdescription>
<para>Are windows visible? </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if it is visible, false if it is hidden. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="278" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ac8279da1a82ce25c9691ecebd08185cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HALSDL2</definition>
        <argsstring>(DMA_Interface &amp;dma, LCD &amp;lcd, TouchController &amp;touchCtrl, uint16_t width, uint16_t height)</argsstring>
        <name>HALSDL2</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_d_m_a___interface" kindref="compound">DMA_Interface</ref> &amp;</type>
          <declname>dma</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> &amp;</type>
          <declname>lcd</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_touch_controller" kindref="compound">TouchController</ref> &amp;</type>
          <declname>touchCtrl</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classtouchgfx_1_1_h_a_l_s_d_l2" kindref="compound">HALSDL2</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dma</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to DMA interface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lcd</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">touchCtrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Touch Controller driver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="46" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="46" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aed26e0f40276da29534e66b50fc9ff9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadSkin</definition>
        <argsstring>(touchgfx::DisplayOrientation orientation, int x, int y)</argsstring>
        <name>loadSkin</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a38bd6ad994c4baaac737cf426fbf23ea" kindref="member">touchgfx::DisplayOrientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Loads a skin for a given display orientation that will be rendered in the simulator window with the the TouchGFX framebuffer placed inside the bitmap at the given coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>Different bitmaps can be loaded in landscape and portrait mode. If the provided bitmap cannot be loaded, the TouchGFX framebuffer will be displayed as normal. If the png files contain areas with alpha &lt; 255, this will be used to create a shaped window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The skins must be named &quot;portrait.png&quot; and &quot;landscape.png&quot; and placed inside the &quot;simulator/&quot; folder. The build process of the simulator will automatically copy the skins to the folder where the executable simulator is generated. </para>
</simplesect>
<simplesect kind="note"><para>When as skin is set, the entire framebuffer is rendered through SDL whenever there is a change. Without a skin, only the areas with changes is rendered through SDL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a4bedab6fe6056b80b124104085ab562c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool sampleKey</definition>
        <argsstring>(uint8_t &amp;key)</argsstring>
        <name>sampleKey</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a4bedab6fe6056b80b124104085ab562c">sampleKey</reimplements>
        <param>
          <type>uint8_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Sample key event from keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter that will be set to the key value if a key press was detected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a key press was detected and the &quot;key&quot; parameter is set to a value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ab9d68086e0112b76042073cbb83f81f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void saveNextScreenshots</definition>
        <argsstring>(int n)</argsstring>
        <name>saveNextScreenshots</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Copy the next N screenshots to disk. </para>
        </briefdescription>
        <detaileddescription>
<para>On each screen update, the new screen is saved to disk.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of screenshots to save. These are added to any ongoing amount of screenshots in queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a3670d3a476852657572527cefe285f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveScreenshot</definition>
        <argsstring>()</argsstring>
        <name>saveScreenshot</name>
        <briefdescription>
<para>Saves a screenshot to the default folder and default filename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a82d86cb0065c34990842ccdab990de43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void saveScreenshot</definition>
        <argsstring>(char *folder, char *filename)</argsstring>
        <name>saveScreenshot</name>
        <param>
          <type>char *</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Saves a screenshot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Folder name to place the screenshot in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to save the screenshot to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a737212a54df3379364628f4689f31dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool sdl_init</definition>
        <argsstring>(int argcount, char **args)</argsstring>
        <name>sdl_init</name>
        <param>
          <type>int</type>
          <declname>argcount</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Initializes SDL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argcount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if init went well, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a549a5cde234a93399eb6aa65fde4a35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setVsyncInterval</definition>
        <argsstring>(float ms)</argsstring>
        <name>setVsyncInterval</name>
        <param>
          <type>float</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Sets vsync interval for simulating same tick speed as the real hardware. </para>
        </briefdescription>
        <detaileddescription>
<para>Due to limitations in the granularity of SDL, the generated ticks in the simulator might not occur at the exact time, but accumulated over several ticks, the precision is very good.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>The milliseconds between ticks.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>That you can also use <ref refid="classtouchgfx_1_1_h_a_l_1a90f65a787d4a4296655e2434e88c1b6d" kindref="member">HAL::setFrameRateCompensation()</ref> in the simulator. The effect of this can easily be demonstrated by dragging the console output window of the simulator (when running from Visual Studio) as this will pause the SDL and generate a lot of ticks when the console window is released. Beware that since the missed vsyncs are accumulated in an 8 bit counter, only up to 255 ticks may be missed, so at VsyncInterval = 16.6667, dragging the windows for more than 255 * 16.6667ms = 4250ms = 4.25s will not generate all the ticks that were actually missed. This situation is, however, not very realistic, as normally just a couple of vsyncs are skipped. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ab0bfbd62cf8ab1b0a55e7071a0fdca11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setWindowTitle</definition>
        <argsstring>(const char *title)</argsstring>
        <name>setWindowTitle</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets window title. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets window title of the TouchGFX simulator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title, if null the original &quot;TouchGFX simulator&quot; will be used.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a9cdcb279b6edfda3cc5b414d470b2b17" kindref="member">getWindowTitle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a1c8c6011a893513bb79df4d49783cbdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setWindowVisible</definition>
        <argsstring>(bool visible, bool redrawWindow=true)</argsstring>
        <name>setWindowVisible</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>redrawWindow</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Change visibility of window (hidden vs. </para>
        </briefdescription>
        <detaileddescription>
<para>shown).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the window be visible? </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>redrawWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Should the window be redrawn? Default is true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="263" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a41a5803bbaeb702e813fcc2190dfa618" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void taskEntry</definition>
        <argsstring>()</argsstring>
        <name>taskEntry</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a41a5803bbaeb702e813fcc2190dfa618">taskEntry</reimplements>
        <briefdescription>
<para>Main event loop. </para>
        </briefdescription>
        <detaileddescription>
<para>Will wait for VSYNC signal, and then process next frame. Call this function from your GUI task.</para>
<para><simplesect kind="note"><para>This function never returns! </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1afc6fb3fa82d2ef71e4493c3659ac7bc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* doRotate</definition>
        <argsstring>(uint8_t *dst, uint8_t *src)</argsstring>
        <name>doRotate</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Rotates a framebuffer if the display is rotated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination for the rotated framebuffer. must be non-null if the screen is rotated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>The framebuffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Null if it fails, else a pointer to an uint8_t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a1dd3a2cd8f811a373cd27c55f8b8c1c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>static char** getArgv</definition>
        <argsstring>(int *argc)</argsstring>
        <name>getArgv</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <briefdescription>
<para>Gets the argc and argv for a Windows program. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where to store number of arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The argv list of arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a467ec2f125c0ddb147692cbef9a129bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* scaleTo24bpp</definition>
        <argsstring>(uint8_t *dst, uint16_t *src, Bitmap::BitmapFormat format)</argsstring>
        <name>scaleTo24bpp</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" kindref="member">Bitmap::BitmapFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Scale framebuffer to 24bpp. </para>
        </briefdescription>
        <detaileddescription>
<para>The format of the framebuffer (src) is given in parameter format. The result is placed in the pre-allocated memory pointed to by parameter dst. If the frambebuffer is in format <ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55acbcf87c79628b8c7fed02f39f7cbd15f" kindref="member">Bitmap::RGB888</ref>, parameter dst is not used and the parameter src is simply returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination for the framebuffer. must be non-null unless format is <ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55acbcf87c79628b8c7fed02f39f7cbd15f" kindref="member">Bitmap::RGB888</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>The framebuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Describes the format of the framebuffer (<ref refid="classtouchgfx_1_1_h_a_l_1a649cc066d589492ce9b6198ec66d9654" kindref="member">lcd()</ref>.framebufferFormat()).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Null if it fails, else a pointer to an uint8_t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="244" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a77a3b251f30ecb28886d3372e5fbfd1b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void configureInterrupts</definition>
        <argsstring>()</argsstring>
        <name>configureInterrupts</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a899e0d32497b51e5483064565623156f">configureInterrupts</reimplements>
        <briefdescription>
<para>Configures the interrupts relevant for TouchGFX. </para>
        </briefdescription>
        <detaileddescription>
<para>This primarily entails setting the interrupt priorities for the DMA and <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> interrupts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="330" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a9138f2a6216e632c998ac783535127f1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void configureLCDInterrupt</definition>
        <argsstring>()</argsstring>
        <name>configureLCDInterrupt</name>
        <briefdescription>
<para>Configures <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="317" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1af5028e20dc4b7425a6bbd0671b32b9a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void disableInterrupts</definition>
        <argsstring>()</argsstring>
        <name>disableInterrupts</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a1fbc52b8a6598c3a3183e79ab7b18021">disableInterrupts</reimplements>
        <briefdescription>
<para>Disables the DMA and <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="307" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a36a492e20549120a008400b010fc8977" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void enableInterrupts</definition>
        <argsstring>()</argsstring>
        <name>enableInterrupts</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a2202c8be3809f3abde2c823e7d4241f5">enableInterrupts</reimplements>
        <briefdescription>
<para>Enables the DMA and <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="312" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1abebe60bfe17c2b6b1b01816efeb1f2ea" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void enableLCDControllerInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableLCDControllerInterrupt</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a1d84dc0c997642bd476853aefb6446a8">enableLCDControllerInterrupt</reimplements>
        <briefdescription>
<para>Enables the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="322" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ae6195e03edb44b7de37d578c2774365c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint16_t *</type>
        <definition>virtual uint16_t* getTFTFrameBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getTFTFrameBuffer</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a3bec5c2eaafb5e7b2674dc6720dccf0e">getTFTFrameBuffer</reimplements>
        <briefdescription>
<para>Gets TFT framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>null if it fails, else the TFT framebuffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1adf83a370364878003e12747001b1ae22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void performDisplayOrientationChange</definition>
        <argsstring>()</argsstring>
        <name>performDisplayOrientationChange</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1ae02af3c8fab5f0287febd79b6789be9c">performDisplayOrientationChange</reimplements>
        <briefdescription>
<para>Perform the actual display orientation change. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1aec20dd3f82d03df1341ab10f6f834a19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void renderLCD_FrameBufferToMemory</definition>
        <argsstring>(const Rect &amp;_rectToUpdate, uint8_t *frameBuffer)</argsstring>
        <name>renderLCD_FrameBufferToMemory</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>_rectToUpdate</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>frameBuffer</declname>
        </param>
        <briefdescription>
<para>Update framebuffer using an SDL Surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_rectToUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>Area to update. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frameBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Target framebuffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a98806d2a7b0b0093792111195da6e5b7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void setTFTFrameBuffer</definition>
        <argsstring>(uint16_t *addr)</argsstring>
        <name>setTFTFrameBuffer</name>
        <reimplements refid="classtouchgfx_1_1_h_a_l_1a831e28238b114d68c64cc8b4d9a2f435">setTFTFrameBuffer</reimplements>
        <param>
          <type>uint16_t *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Sets TFT framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the TFT framebuffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="296" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a63d4b314e19cbb673e7a6da6a009fd1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alphaChannelCheck</definition>
        <argsstring>(SDL_Surface *surface, bool &amp;isOpaque, bool &amp;hasSemiTransparency)</argsstring>
        <name>alphaChannelCheck</name>
        <param>
          <type>SDL_Surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isOpaque</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasSemiTransparency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ad8f708907cbaf71893032903d31492fb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getCurrentSkinX</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentSkinX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ab4e3243f503a34d10629de0aadd3c7a5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getCurrentSkinY</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentSkinY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1ac5b3225c4bdb4fcbda44d0e8e9fac0d7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool popTouch</definition>
        <argsstring>() const</argsstring>
        <name>popTouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a4af1926a83a09bc4e816a72f25a8e513" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pushTouch</definition>
        <argsstring>(bool down) const</argsstring>
        <name>pushTouch</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a71561c92f02a1081cfb5ed720bf08523" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recreateWindow</definition>
        <argsstring>(bool updateContent=true)</argsstring>
        <name>recreateWindow</name>
        <param>
          <type>bool</type>
          <declname>updateContent</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a759c4a9d7e8301d86cc3ac310418a76b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateCurrentSkin</definition>
        <argsstring>()</argsstring>
        <name>updateCurrentSkin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_h_a_l_s_d_l2_1a3183af17f0e69e05d2def4b57098fd3a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateTitle</definition>
        <argsstring>(int32_t x, int32_t y) const</argsstring>
        <name>updateTitle</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="341" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtouchgfx_1_1_h_a_l" kindref="compound">HAL</ref> implementation for the TouchGFX simulator. </para>
    </briefdescription>
    <detaileddescription>
<para>This particular simulator <ref refid="classtouchgfx_1_1_h_a_l" kindref="compound">HAL</ref> implementation uses SDL2 to show the content of the framebuffer in a window.</para>
<para><simplesect kind="see"><para><ref refid="classtouchgfx_1_1_h_a_l" kindref="compound">HAL</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="742">
        <label>HAL</label>
        <link refid="classtouchgfx_1_1_h_a_l"/>
      </node>
      <node id="741">
        <label>HALSDL2</label>
        <link refid="classtouchgfx_1_1_h_a_l_s_d_l2"/>
        <childnode refid="742" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="745">
        <label>Rect</label>
        <link refid="classtouchgfx_1_1_rect"/>
      </node>
      <node id="754">
        <label>MCUInstrumentation</label>
        <link refid="classtouchgfx_1_1_m_c_u_instrumentation"/>
      </node>
      <node id="747">
        <label>DMA_Interface</label>
        <link refid="classtouchgfx_1_1_d_m_a___interface"/>
        <childnode refid="748" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="750">
        <label>Gestures</label>
        <link refid="classtouchgfx_1_1_gestures"/>
      </node>
      <node id="744">
        <label>HAL</label>
        <link refid="classtouchgfx_1_1_h_a_l"/>
        <childnode refid="745" relation="usage">
          <edgelabel>partialFrameBufferRect</edgelabel>
        </childnode>
        <childnode refid="746" relation="usage">
          <edgelabel>frameBufferAllocator</edgelabel>
        </childnode>
        <childnode refid="747" relation="usage">
          <edgelabel>dma</edgelabel>
        </childnode>
        <childnode refid="749" relation="usage">
          <edgelabel>touchController</edgelabel>
        </childnode>
        <childnode refid="750" relation="usage">
          <edgelabel>gestures</edgelabel>
        </childnode>
        <childnode refid="751" relation="usage">
          <edgelabel>lcdRef</edgelabel>
          <edgelabel>auxiliaryLCD</edgelabel>
        </childnode>
        <childnode refid="753" relation="usage">
          <edgelabel>buttonController</edgelabel>
        </childnode>
        <childnode refid="754" relation="usage">
          <edgelabel>mcuInstrumentation</edgelabel>
        </childnode>
      </node>
      <node id="751">
        <label>LCD</label>
        <link refid="classtouchgfx_1_1_l_c_d"/>
        <childnode refid="752" relation="usage">
          <edgelabel>defaultColor</edgelabel>
        </childnode>
      </node>
      <node id="749">
        <label>TouchController</label>
        <link refid="classtouchgfx_1_1_touch_controller"/>
      </node>
      <node id="753">
        <label>ButtonController</label>
        <link refid="classtouchgfx_1_1_button_controller"/>
      </node>
      <node id="743">
        <label>HALSDL2</label>
        <link refid="classtouchgfx_1_1_h_a_l_s_d_l2"/>
        <childnode refid="744" relation="public-inheritance">
        </childnode>
      </node>
      <node id="748">
        <label>DMA_Queue</label>
        <link refid="classtouchgfx_1_1_d_m_a___queue"/>
      </node>
      <node id="746">
        <label>FrameBufferAllocator</label>
        <link refid="classtouchgfx_1_1_frame_buffer_allocator"/>
      </node>
      <node id="752">
        <label>colortype</label>
        <link refid="structtouchgfx_1_1colortype"/>
      </node>
    </collaborationgraph>
    <location file="platform/hal/simulator/sdl2/HALSDL2.hpp" line="35" column="1" bodyfile="platform/hal/simulator/sdl2/HALSDL2.hpp" bodystart="34" bodyend="399"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1acad576d9d244cb22faf1b95c5b7b0a2f" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_lastTouch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ae8bcdeccd59cd6e7f1f5bf94418ac451" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_numTouches</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a640b4a4fb1d771e28f04131d783d260b" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_touches</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a1b83cc017163d0027e9f71f39225231f" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_x</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aeaaf1555e8b458fbd57b2b3e10599f85" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_xMouse</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a4ca4ab5da1bd6e1e07872dcb254b0309" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_y</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a42c6c93d982b66a2a700d56397f7ceee" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>_yMouse</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a705c80beba28778e2399d45f6ed97eb9" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>allowDMATransfers</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a63d4b314e19cbb673e7a6da6a009fd1a" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>alphaChannelCheck</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1af0c77c8827957c2d15397234aea724f6" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>auxiliaryLCD</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ae26fd1525f3ede94d9cff4c11c3cb423" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>backPorchExited</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ae61b1e2b893dcea03977ab8654824f6e" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>beginFrame</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ac8dbf97679e73e73955e2ecd45109ae8" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>blitCopy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a6ff0a8b2198a0aa836bcff822d1df26e" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitCopy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1af3fbd84308b86fe2b5392637f6ce505a" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitCopy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a3d7d4d8a67422bfc45100ea70441e6c1" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitCopyARGB8888</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a6a9d5dd2bec5e01051b5524ff452a82a" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitCopyGlyph</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a9a0c19d1a1246b6086e12f61c1f933e5" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitFill</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a8a7bc42ad95131aa18e017605a0fedc9" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitFill</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ac77022b9a52bdd38af7df0b409ea78da" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blitSetTransparencyKey</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a4f53c9928e6d17edbb6382461ea60a43" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>blockCopy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a10e22c3440b3719c6ab6603469c17083" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>buttonController</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a77a3b251f30ecb28886d3372e5fbfd1b" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>configureInterrupts</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a9138f2a6216e632c998ac783535127f1" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>configureLCDInterrupt</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a01a26dc295915296613e39a1f38abf2b" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>configurePartialFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1be4b79cccbf907115e5ce6075759b80" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>copyFBRegionToMemory</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a8547506d89d884bcd2039241a5805c06" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>copyFBRegionToMemory</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a7e98db3f597ee3ffc7a1b1038e1fef2f" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>copyScreenshotToClipboard</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a76d56c236c346f17d434313197a29eeb" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>currentSkin</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a8c45501c6d6f8960e0f957dd40583db7" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>customTitle</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1af32f244e4a5c9fbf0cd2dbc843f00ae2" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>debugInfoEnabled</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1af5028e20dc4b7425a6bbd0671b32b9a3" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>disableInterrupts</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a88f14e4aa8756798bf97845274e8614d" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>DISPLAY_HEIGHT</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a687a54fff313039e31edc57eb1781297" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>DISPLAY_ROTATION</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a69caf4e3dd9e447013bc0d95dc00b29e" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>DISPLAY_WIDTH</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a05a11ff786f8aba513c4393cddef4dee" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>dma</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1afc6fb3fa82d2ef71e4493c3659ac7bc5" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>doRotate</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aab0db61c2cf5905c3d0e6b481dd22065" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>doSampleTouch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a666d501b1cf9ac91dc6dc6e78e7f0e28" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>drawDrawableInDynamicBitmap</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a661a7afd508167ec028cb97320bce2c6" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>drawDrawableInDynamicBitmap</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a36a492e20549120a008400b010fc8977" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>enableInterrupts</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1abebe60bfe17c2b6b1b01816efeb1f2ea" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>enableLCDControllerInterrupt</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7f93a2214fa1982c6f5ff3a1ed9ef77c" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>enableMCULoadCalculation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a16613ef68935ab6966f20192bd9e5ebf" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>endFrame</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a55d4a3b2e3954954ac0bde7a1572d3c5" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>fingerSize</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a7aa1f1dea357a81887bc60328b895ba1" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>flashInvalidatedRect</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a0f0005b02d82995ee28c1c7895a15a89" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>flushDMA</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a93dfbddf2eff9ce1d0fd1bf2a89e5028" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>flushFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1af7803460ef14e8d4a4731d40a9f4c57f" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>flushFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a65190cd2f6af334e630f8e1d33783542" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>FRAME_BUFFER_HEIGHT</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ac405941b35fb55f1635ab2804f60f08e" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>FRAME_BUFFER_WIDTH</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ac66e3b19235b43dbe16f9bef92d8c091" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frameBuffer0</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7a5e0d2d006904d52da083c421645ab9" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frameBuffer1</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1a28230b1ddebca275d51d72f356bd2b" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frameBuffer2</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1adf80c809ef5619c1f049673cfead6e51" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frameBufferAllocator</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ae3e79adce0f20f90e6ed0841ac5808bc" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frameBufferUpdatedThisFrame</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7f86838885c94deaae0ddbf8efab2cf4" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>FrameRefreshStrategy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1a6717e9770ad606ffe0c2276427f0f7" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>frontPorchEntered</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a13b276fe6aeb77874d05a66cc27eb8ea" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>gestures</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7c4974317fa357a72aadb65cf8df894e" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getAnimationStorage</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a1dd3a2cd8f811a373cd27c55f8b8c1c4" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getArgv</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a0f618e37f375c87dddb612788df3324c" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getAuxiliaryLCD</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1aa76b900e4b59cdff7bb1892030c266fe" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>getBlitCaps</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a3824270ab45fd63e637a1f6199c2bda6" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getButtonController</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1aa4451062ff9146fc50ea3147b77bc88c" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getClientFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1cf8b1899b19f8e52e86fe4006531e9a" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getCPUCycles</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ad8f708907cbaf71893032903d31492fb" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getCurrentSkinX</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab4e3243f503a34d10629de0aadd3c7a5" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getCurrentSkinY</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ad0f6ee4f84ab0f5a09f9d198e3bdf14d" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getDisplayHeight</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a9724a2c9e9763c751266320a8890cb80" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getDisplayOrientation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a939eadd59671da1da21f6a729df6f611" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getDisplayWidth</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a3bf3fd3047dfb9b99f89edd6f9d659f8" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>getDMAType</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ab2e6f5b465dd6c637971f8f74449d07a" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getFingerSize</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1afbaf61825a1727a7352e669be3a93888" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getFrameBufferAllocator</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a35eb6f0a4856e743be6fdbe5f934b8fb" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getFrameRefreshStrategy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ae4fa38f01133ea5a21e25449a0432d40" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getInstance</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a64088fc596df92a732dd8cb083454fbe" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getLCDRefreshCount</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a4b0233f623b18fd87d3e387b66ccbde2" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getMCULoadPct</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1aa8754934c1239c5b1a7c16beda97c97c" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>getTFTCurrentLine</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ae6195e03edb44b7de37d578c2774365c" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>getTFTFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a19d1b16b7fd76c0ecd3cef8ace6a4a89" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getTouchSampleRate</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a9cdcb279b6edfda3cc5b414d470b2b17" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getWindowTitle</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ad1896be0f4d4364c64d12909e2e2437f" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>getWindowVisible</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1aff7d430ff97f6eca77cee715afcbcd7e" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>HAL</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ac8279da1a82ce25c9691ecebd08185cb" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>HALSDL2</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a50163bfdf770359a983182d3503da712" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>icon</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a25a40b6614565f755233080a384c35f1" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>initialize</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aa34d41dcf2247ebcb3fefb6b3d10de99" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>initialMouseX</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ad42fd0a05d44b21bf247919d5439c6ec" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>initialMouseY</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ad8b93504576408c1dddb9e7c7c05bc51" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>initialWindowX</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a22ada8bce2510c862a8f608d3578f974" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>initialWindowY</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a9f832b80ca0857bc38fca999ddd9d7b0" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>isDrawing</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a261482a22f8a5bfa72aa6b770edeeed1" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>isSkinActive</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aa18809f3bc9aefcae9971d5cbb35f621" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>isWindowBeingDragged</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a97efaea785d552f4151bf1639132e86f" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>isWindowBorderless</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a04d91bca58c7ebb89eb34ff257f8dc5f" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>isWindowVisible</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a37e1d922e78c9925e4d656bc74912cc9" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>keyPressed</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a3a31646c769fd598c711472155c00cac" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>landscapeSkin</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a649cc066d589492ce9b6198ec66d9654" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>lcd</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1aca20e801cb9562eb4da3a028b5cad0cb" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>lcdRef</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aed26e0f40276da29534e66b50fc9ff9d" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>loadSkin</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1add7d8e4551e5fb46a8ce656dc5c14190" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>lockDMAToFrontPorch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a70d9d7d6a38d3c1d6856319f6fa6e1a4" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>lockDMAToPorch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a58075740e18c8812114dd5082a5074e7" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>lockFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a859883064e961e58224109bd208ae314" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>mcuInstrumentation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a92edeac1ba786b47283789bb0e864833" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>msBetweenTicks</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1af4cb0ea144aaec8f16f70ff421a3b31d" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>msPassed</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a123c63e538589b1f208fcd41067b5514" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>nativeDisplayOrientation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1dbae324e9d61cf117ce4f7c9b4c479d" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>noTouch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a89f3f06692914977fdc5a9d8e494c668" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>partialFrameBufferRect</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1adf83a370364878003e12747001b1ae22" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>performDisplayOrientationChange</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ac5b3225c4bdb4fcbda44d0e8e9fac0d7" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>popTouch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a9fc545975737e815e26217e20778e277" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>portraitSkin</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1af44fe217683aa2b74ca754ce298df307" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>programPath</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a4af1926a83a09bc4e816a72f25a8e513" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>pushTouch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a71561c92f02a1081cfb5ed720bf08523" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>recreateWindow</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7f86838885c94deaae0ddbf8efab2cf4a3c95f830eb73d08211afe676080d18b5" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>REFRESH_STRATEGY_DEFAULT</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7f86838885c94deaae0ddbf8efab2cf4ab08914e9037d6b98fb2606a4483ed8a0" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a7f86838885c94deaae0ddbf8efab2cf4ad6eaee7a49c2ae7399ac220c1055ebdb" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1adcf247597bbd8b4cf7bb1644be325d8d" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>refreshStrategy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a8ebfd2ba3e6bbca031f49a42638e4033" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>registerEventListener</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a42152550ca952d7c3b149ada5c017ecf" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>registerTaskDelayFunction</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1aec20dd3f82d03df1341ab10f6f834a19" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>renderLCD_FrameBufferToMemory</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a4bedab6fe6056b80b124104085ab562c" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>sampleKey</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab9d68086e0112b76042073cbb83f81f0" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>saveNextScreenshots</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a3670d3a476852657572527cefe285f56" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>saveScreenshot</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a82d86cb0065c34990842ccdab990de43" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>saveScreenshot</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a467ec2f125c0ddb147692cbef9a129bf" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>scaleTo24bpp</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a737212a54df3379364628f4689f31dc0" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>sdl_init</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ae6fc10602f19e1dfe07d579939c543ed" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setAuxiliaryLCD</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a87c1f6c423f7ac101443cce375ea67ae" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setButtonController</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a54f42eaa3650ab0a0e342e0026826fde" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>setDisplayOrientation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1adcbcf663a587b694756e0551a7ec4a02" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setDragThreshold</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1af2c44c65e38882752f77141bd9eca3f4" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setFingerSize</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a0082f3c519686ebf9043752a2a6ce2e7" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setFrameBufferAllocator</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ad984d2d33fe2d3605b67427e5a34a47d" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>setFrameBufferStartAddress</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a2a6fd92626168d79e8346658752027e6" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>setFrameBufferStartAddresses</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a90f65a787d4a4296655e2434e88c1b6d" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setFrameRateCompensation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1af7ed8f3a817cabfa5fba5f2f44f55bd7" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setFrameRefreshStrategy</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a4e2c2a8b8af2098feed65c6908547691" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setMCUActive</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a01eb7c98dd3cbc649d63c2e7b295718a" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setMCUInstrumentation</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a98806d2a7b0b0093792111195da6e5b7" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>setTFTFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a61b9ba64014639fbc554a8ea5b0eb3c7" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setTouchSampleRate</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a549a5cde234a93399eb6aa65fde4a35a" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setVsyncInterval</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab0bfbd62cf8ab1b0a55e7071a0fdca11" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setWindowTitle</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a1c8c6011a893513bb79df4d49783cbdd" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>setWindowVisible</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a5e6cf4d44af298d5d01023f51ee4a182" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>signalDMAInterrupt</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1af79cd7a21af87918ddf1d9f6a1bfc2c1" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>swapFrameBuffers</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ad68f077a0a024c4ae26d2f5aa6784fe1" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>taskDelay</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1c6b454fcb5302c60165c03cb53e05e6" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>taskDelayFunc</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a41a5803bbaeb702e813fcc2190dfa618" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>taskEntry</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a084002a4b3ed4e00a3639ef6dab1f2be" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>tick</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ab7301bee172befade52329bd7e9a188f" prot="protected" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>touch</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a1b7a962e3c313381b64ba5c8102733db" prot="protected" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>touchController</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1ad72bdda011be4074fcb5c3009a96e02c" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>unlockFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a759c4a9d7e8301d86cc3ac310418a76b" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>updateCurrentSkin</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a3183af17f0e69e05d2def4b57098fd3a" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>updateTitle</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a0638787ef3286032a7e7ac67d53c1d61" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>USE_ANIMATION_STORAGE</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a713a93a66c418e8221fe9341bb1858e4" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>USE_DOUBLE_BUFFERING</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1abb1199249671d4d4777c3012002e4e46" prot="public" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>vSync</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1afc42c41a97d4c3b14ae657c1991a05c1" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>windowDrag</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1a57e449d1bc71d0f8bd9899e13268e77d" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>windowDragX</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_s_d_l2_1ab48054085afef42fb016a3c242636685" prot="private" virt="non-virtual"><scope>touchgfx::HALSDL2</scope><name>windowDragY</name></member>
      <member refid="classtouchgfx_1_1_h_a_l_1a06a55976707db0ec78f6f18def68caeb" prot="public" virt="virtual"><scope>touchgfx::HALSDL2</scope><name>~HAL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
