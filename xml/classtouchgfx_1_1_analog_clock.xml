<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_analog_clock" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::AnalogClock</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_abstract_clock" prot="public" virt="non-virtual">AbstractClock</basecompoundref>
    <includes local="no">AnalogClock.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a4c9d0ee476ff3cf4c8aaec472f7d1718" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t animationDuration</definition>
        <argsstring></argsstring>
        <name>animationDuration</name>
        <briefdescription>
<para>The duration of hand animations. If 0 animations are disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="202" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a22eaec05bb341f1aebd7f3cf85dcc3bf" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetouchgfx_1a067e5cd30b7258d54a37d6a0d1423d68" kindref="member">EasingEquation</ref></type>
        <definition>EasingEquation animationEquation</definition>
        <argsstring></argsstring>
        <name>animationEquation</name>
        <briefdescription>
<para>The easing equation used by hand animations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="201" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1ac58c7595db571063cbbb5832998af4d4" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image background</definition>
        <argsstring></argsstring>
        <name>background</name>
        <briefdescription>
<para>The background image of the <ref refid="classtouchgfx_1_1_analog_clock" kindref="compound">AnalogClock</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="195" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a0d95b0e105a188043f421da8d9790c49" prot="protected" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t clockRotationCenterX</definition>
        <argsstring></argsstring>
        <name>clockRotationCenterX</name>
        <briefdescription>
<para>The x coordinate of the rotation point of the hands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="204" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a9671e6acdc2e39efb06ad706a462d9b9" prot="protected" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t clockRotationCenterY</definition>
        <argsstring></argsstring>
        <name>clockRotationCenterY</name>
        <briefdescription>
<para>The y coordinate of the rotation point of the hands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="205" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a67ab070f543699233ae6754f86903c66" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_animation_texture_mapper" kindref="compound">AnimationTextureMapper</ref></type>
        <definition>AnimationTextureMapper hourHand</definition>
        <argsstring></argsstring>
        <name>hourHand</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_texture_mapper" kindref="compound">TextureMapper</ref> used for drawing the hourHand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="197" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1ab1406dd0bc3541853cb565552121bd1d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hourHandMinuteCorrectionActive</definition>
        <argsstring></argsstring>
        <name>hourHandMinuteCorrectionActive</name>
        <briefdescription>
<para>Is hour hand minute correction active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="211" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a42212cbb77f6aec6df9a419e720cb1df" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lastHour</definition>
        <argsstring></argsstring>
        <name>lastHour</name>
        <briefdescription>
<para>The last know hour value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="207" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a3b22777a5996fb0c93c9597b4f36f9ff" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lastMinute</definition>
        <argsstring></argsstring>
        <name>lastMinute</name>
        <briefdescription>
<para>The last know minute value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="208" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1afa70dab3ce7698b1f3afa7bb6d593465" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lastSecond</definition>
        <argsstring></argsstring>
        <name>lastSecond</name>
        <briefdescription>
<para>The last know second value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="209" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a8e46777647266e8888e6e82a4b8b9d43" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_animation_texture_mapper" kindref="compound">AnimationTextureMapper</ref></type>
        <definition>AnimationTextureMapper minuteHand</definition>
        <argsstring></argsstring>
        <name>minuteHand</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_texture_mapper" kindref="compound">TextureMapper</ref> used for drawing the minuteHand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="198" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a2fce5a9ab56621d2ebb87c85e9557cb3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool minuteHandSecondCorrectionActive</definition>
        <argsstring></argsstring>
        <name>minuteHandSecondCorrectionActive</name>
        <briefdescription>
<para>Is minute hand second correction active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="212" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_analog_clock_1a8b057ad7883bfef7bf1f03e0764ba360" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_animation_texture_mapper" kindref="compound">AnimationTextureMapper</ref></type>
        <definition>AnimationTextureMapper secondHand</definition>
        <argsstring></argsstring>
        <name>secondHand</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_texture_mapper" kindref="compound">TextureMapper</ref> used for drawing the secondHand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="199" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a66b42d84e6ea51c0ce3e85bf60dbbb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AnalogClock</definition>
        <argsstring>()</argsstring>
        <name>AnalogClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a3e1a378e61f8aa8dafeb718915aa28e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>uint16_t</type>
        <definition>virtual uint16_t getAnimationDuration</definition>
        <argsstring>()</argsstring>
        <name>getAnimationDuration</name>
        <briefdescription>
<para>Gets the animation duration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The animation duration.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_analog_clock_1a9971910de81ade9741e8109f3f690f45" kindref="member">setAnimation</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="158" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1ad8c4716330f2f1614fc4caf8cdc13b7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool getHourHandMinuteCorrection</definition>
        <argsstring>() const</argsstring>
        <name>getHourHandMinuteCorrection</name>
        <briefdescription>
<para>Gets hour hand minute correction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if hour hand minute correction is active.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_analog_clock_1a64e3e389c926499530b6442ba14aa84a" kindref="member">setHourHandMinuteCorrection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a71c167c7bb91182163fbe281f23abcd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool getMinuteHandSecondCorrection</definition>
        <argsstring>() const</argsstring>
        <name>getMinuteHandSecondCorrection</name>
        <briefdescription>
<para>Gets minute hand second correction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if minute hand second correction is active.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_analog_clock_1a64e3e389c926499530b6442ba14aa84a" kindref="member">setHourHandMinuteCorrection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1ac726036e99d2353598444dc8f3c0830e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void initializeTime12Hour</definition>
        <argsstring>(uint8_t hour, uint8_t minute, uint8_t second, bool am)</argsstring>
        <name>initializeTime12Hour</name>
        <param>
          <type>uint8_t</type>
          <declname>hour</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>minute</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>second</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>am</declname>
        </param>
        <briefdescription>
<para>Sets the time with input format as 12H. </para>
        </briefdescription>
        <detaileddescription>
<para>No animations are performed regardless of the animation settings. This is often useful when setting up the <ref refid="classtouchgfx_1_1_analog_clock" kindref="compound">AnalogClock</ref> where you do not want an initial animation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hour</parametername>
</parameternamelist>
<parameterdescription>
<para>The hours, value should be between 1 and 12. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minute</parametername>
</parameternamelist>
<parameterdescription>
<para>The minutes, value should be between 0 and 59. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>The seconds, value should be between 0 and 59. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>am</parametername>
</parameternamelist>
<parameterdescription>
<para>AM/PM setting. True = AM, false = PM.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_abstract_clock_1ad482b7acb10aa8e21862144fe5ee991c" kindref="member">setTime12Hour</ref></para>
</simplesect>
<simplesect kind="note"><para>that this does not affect any selected presentation formats. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a47e7be5146b3d54d761fdd186fca751d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void initializeTime24Hour</definition>
        <argsstring>(uint8_t hour, uint8_t minute, uint8_t second)</argsstring>
        <name>initializeTime24Hour</name>
        <param>
          <type>uint8_t</type>
          <declname>hour</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>minute</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>second</declname>
        </param>
        <briefdescription>
<para>Sets the time with input format as 24H. </para>
        </briefdescription>
        <detaileddescription>
<para>No animations are performed regardless of the animation settings. This is often useful when setting up the <ref refid="classtouchgfx_1_1_analog_clock" kindref="compound">AnalogClock</ref> where you do not want an initial animation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hour</parametername>
</parameternamelist>
<parameterdescription>
<para>The hours, value should be between 0 and 23. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minute</parametername>
</parameternamelist>
<parameterdescription>
<para>The minutes, value should be between 0 and 59. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>The seconds, value should be between 0 and 59.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_abstract_clock_1a424077012afce80b9684a1007e0eb1a7" kindref="member">setTime24Hour</ref></para>
</simplesect>
<simplesect kind="note"><para>that this does not affect any selected presentation formats. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a9971910de81ade9741e8109f3f690f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setAnimation</definition>
        <argsstring>(uint16_t duration=10, EasingEquation animationProgressionEquation=EasingEquations::backEaseInOut)</argsstring>
        <name>setAnimation</name>
        <param>
          <type>uint16_t</type>
          <declname>duration</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a067e5cd30b7258d54a37d6a0d1423d68" kindref="member">EasingEquation</ref></type>
          <declname>animationProgressionEquation</declname>
          <defval><ref refid="classtouchgfx_1_1_easing_equations_1a05affd78e180c11b8f3c35e0619096a3" kindref="member">EasingEquations::backEaseInOut</ref></defval>
        </param>
        <briefdescription>
<para>Setup the clock to use animation for hand movements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The animation duration, default is 10. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>animationProgressionEquation</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The animation progression equation, default is <ref refid="classtouchgfx_1_1_easing_equations_1a05affd78e180c11b8f3c35e0619096a3" kindref="member">EasingEquations::backEaseInOut</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a4007e425660e2bd3516afa6571720170" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setBackground</definition>
        <argsstring>(const BitmapId backgroundBitmapId)</argsstring>
        <name>setBackground</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>backgroundBitmapId</declname>
        </param>
        <briefdescription>
<para>Sets the background image of the clock. </para>
        </briefdescription>
        <detaileddescription>
<para>The clock rotation center is automatically set to the background image center. The clock rotation center is the point that the clock hands rotates around. The size of the AnalocClock widget is set to the size of the bitmap.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>backgroundBitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the background bitmap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a0795b232a9be1500aca9e5f82afec292" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setBackground</definition>
        <argsstring>(const BitmapId backgroundBitmapId, int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setBackground</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>backgroundBitmapId</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets the background image of the clock and the rotation center of the clock. </para>
        </briefdescription>
        <detaileddescription>
<para>The clock rotation center is the point that the clock hands rotates around. The size of the AnalocClock widget is set to the size of the bitmap.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>backgroundBitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the background bitmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation center y coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a64e3e389c926499530b6442ba14aa84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setHourHandMinuteCorrection</definition>
        <argsstring>(bool active)</argsstring>
        <name>setHourHandMinuteCorrection</name>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Sets whether hour hand minute correction should be active. </para>
        </briefdescription>
        <detaileddescription>
<para>If set to true the hour hand will be positioned between the current hour and the next depending on the minute hands position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para>true to use hour hand correction.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_analog_clock_1ad8c4716330f2f1614fc4caf8cdc13b7b" kindref="member">getHourHandMinuteCorrection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1ac97dcceb45a00fd15ab0e3765be350f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setMinuteHandSecondCorrection</definition>
        <argsstring>(bool active)</argsstring>
        <name>setMinuteHandSecondCorrection</name>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Sets whether minute hand second correction should be active. </para>
        </briefdescription>
        <detaileddescription>
<para>If set to true the minute hand will be positioned between the current minute and the next depending on the second hands position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para>true to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_analog_clock_1ac97dcceb45a00fd15ab0e3765be350f7" kindref="member">setMinuteHandSecondCorrection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a0f56ec04173fdc8df56cc9c23e472ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setRotationCenter</definition>
        <argsstring>(int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setRotationCenter</name>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets the rotation center of the clock. </para>
        </briefdescription>
        <detaileddescription>
<para>The clock rotation center is the point that the clock hands rotates around.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation center y coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a6c54d6d151c12e2d81e92619d80f2e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setupHourHand</definition>
        <argsstring>(const BitmapId hourHandBitmapId, int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setupHourHand</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>hourHandBitmapId</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets up the hour hand. </para>
        </briefdescription>
        <detaileddescription>
<para>The specified rotation center is the point of the hand that is to be placed on top of the clock rotation center. That is the point that the hand rotates around. The rotation point is relative to the supplied bitmap and can be placed outside of it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hourHandBitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the hour hand bitmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center y coordinate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If no hour hand is setup it will just be omitted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a35f5e975ca47e9fb4be43b7bd2bf5883" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setupMinuteHand</definition>
        <argsstring>(const BitmapId minuteHandBitmapId, int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setupMinuteHand</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>minuteHandBitmapId</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets up the minute hand. </para>
        </briefdescription>
        <detaileddescription>
<para>The specified rotation center is the point of the hand that is to be placed on top of the clock rotation center. That is the point that the hand rotates around. The rotation point is relative to the supplied bitmap but can be placed outside of it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minuteHandBitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the minute hand bitmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center y coordinate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If no minute hand is setup it will just be omitted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1ab36e7b52b3bd904f229e62ccdc64019e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setupSecondHand</definition>
        <argsstring>(const BitmapId secondHandBitmapId, int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setupSecondHand</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>secondHandBitmapId</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets up the second hand. </para>
        </briefdescription>
        <detaileddescription>
<para>The specified rotation center is the point of the hand that is to be placed on top of the clock rotation center. That is the point that the hand rotates around. The rotation point is relative to the supplied bitmap but can be placed outside of it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondHandBitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the second hand bitmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center y coordinate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If no second hand is setup it will just be omitted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a54f0d5c506b146a9a5798b75f39b02ea" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool animationEnabled</definition>
        <argsstring>() const</argsstring>
        <name>animationEnabled</name>
        <briefdescription>
<para>Is animation enabled for the hands? </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if animation is enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1afb0ea6e29c2b9aac649f54dc82c4728d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>virtual float convertHandValueToAngle</definition>
        <argsstring>(uint8_t steps, uint8_t handValue, uint8_t secondHandValue=0) const</argsstring>
        <name>convertHandValueToAngle</name>
        <param>
          <type>uint8_t</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>handValue</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>secondHandValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Convert hand value to angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of steps the primary hand value is divided into, i.e. 60 for minutes/seconds and 12 for hour. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual value for the hand in question (in the range [0; steps]). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondHandValue</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) If the angle should be corrected for a secondary hand its value should be specified here (in the range [0; 60]). This is the case when setHourHandMinuteCorrection(true) or setMinuteHandSecondCorrection(true) is selected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The converted value to angle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a4cd8c3cd456a6aebb66ab12e57cb91ac" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void setupHand</definition>
        <argsstring>(TextureMapper &amp;hand, const BitmapId bitmapId, int16_t rotationCenterX, int16_t rotationCenterY)</argsstring>
        <name>setupHand</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_texture_mapper" kindref="compound">TextureMapper</ref> &amp;</type>
          <declname>hand</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>bitmapId</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterX</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rotationCenterY</declname>
        </param>
        <briefdescription>
<para>Sets up a given the hand. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hand</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the hand being setup. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitmapId</parametername>
</parameternamelist>
<parameterdescription>
<para>The bitmap identifier for the given hand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterX</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationCenterY</parametername>
</parameternamelist>
<parameterdescription>
<para>The hand rotation center y coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_analog_clock_1a7593ce787f3476d026844b540d090a0d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void updateClock</definition>
        <argsstring>()</argsstring>
        <name>updateClock</name>
        <reimplements refid="classtouchgfx_1_1_abstract_clock_1a485c0cdeb4f94ee55f4d74eed8458da4">updateClock</reimplements>
        <briefdescription>
<para>Update the visual representation of the clock on the display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/containers/clock/AnalogClock.hpp" line="214" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An analog clock. </para>
    </briefdescription>
    <detaileddescription>
<para>Should be supplied with images for the background, hour hand, minute hand and the optional second hand. You setup the <ref refid="classtouchgfx_1_1_analog_clock" kindref="compound">AnalogClock</ref> by specifying the rotation point of each hand as well as the global rotation point of the clock. You can customize the behavior of the <ref refid="classtouchgfx_1_1_analog_clock" kindref="compound">AnalogClock</ref> in respect to animations and relations between the hands e.g. if the hour hand should move gradually towards the next hour as the minute hand progresses (<ref refid="classtouchgfx_1_1_analog_clock_1a64e3e389c926499530b6442ba14aa84a" kindref="member">setHourHandMinuteCorrection()</ref>) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="179">
        <label>Container</label>
        <link refid="classtouchgfx_1_1_container"/>
        <childnode refid="180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="178">
        <label>AbstractClock</label>
        <link refid="classtouchgfx_1_1_abstract_clock"/>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="180">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
      </node>
      <node id="177">
        <label>AnalogClock</label>
        <link refid="classtouchgfx_1_1_analog_clock"/>
        <childnode refid="178" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="188">
        <label>Widget</label>
        <link refid="classtouchgfx_1_1_widget"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="183">
        <label>Container</label>
        <link refid="classtouchgfx_1_1_container"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
        <childnode refid="184" relation="usage">
          <edgelabel>firstChild</edgelabel>
        </childnode>
      </node>
      <node id="185">
        <label>Rect</label>
        <link refid="classtouchgfx_1_1_rect"/>
      </node>
      <node id="192">
        <label>Image</label>
        <link refid="classtouchgfx_1_1_image"/>
        <childnode refid="188" relation="public-inheritance">
        </childnode>
        <childnode refid="189" relation="usage">
          <edgelabel>bitmap</edgelabel>
        </childnode>
      </node>
      <node id="182">
        <label>AbstractClock</label>
        <link refid="classtouchgfx_1_1_abstract_clock"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>TextureMapper</label>
        <link refid="classtouchgfx_1_1_texture_mapper"/>
        <childnode refid="188" relation="public-inheritance">
        </childnode>
        <childnode refid="189" relation="usage">
          <edgelabel>bitmap</edgelabel>
        </childnode>
      </node>
      <node id="184">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
        <childnode refid="185" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="184" relation="usage">
          <edgelabel>nextSibling</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="190">
        <label>AnimationSetting</label>
        <link refid="structtouchgfx_1_1_animation_texture_mapper_1_1_animation_setting"/>
      </node>
      <node id="191">
        <label>GenericCallback&lt; const touchgfx::AnimationTextureMapper &amp; &gt;</label>
        <link refid="classtouchgfx_1_1_generic_callback"/>
      </node>
      <node id="189">
        <label>Bitmap</label>
        <link refid="classtouchgfx_1_1_bitmap"/>
      </node>
      <node id="186">
        <label>AnimationTextureMapper</label>
        <link refid="classtouchgfx_1_1_animation_texture_mapper"/>
        <childnode refid="187" relation="public-inheritance">
        </childnode>
        <childnode refid="190" relation="usage">
          <edgelabel>animations</edgelabel>
        </childnode>
        <childnode refid="191" relation="usage">
          <edgelabel>textureMapperAnimationEndedCallback</edgelabel>
          <edgelabel>textureMapperAnimationStepCallback</edgelabel>
        </childnode>
      </node>
      <node id="181">
        <label>AnalogClock</label>
        <link refid="classtouchgfx_1_1_analog_clock"/>
        <childnode refid="182" relation="public-inheritance">
        </childnode>
        <childnode refid="186" relation="usage">
          <edgelabel>minuteHand</edgelabel>
          <edgelabel>secondHand</edgelabel>
          <edgelabel>hourHand</edgelabel>
        </childnode>
        <childnode refid="192" relation="usage">
          <edgelabel>background</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="touchgfx/containers/clock/AnalogClock.hpp" line="26" column="1" bodyfile="touchgfx/containers/clock/AnalogClock.hpp" bodystart="25" bodyend="248"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_abstract_clock_1a4ea52cd272fb6cba6f9f9eb92624ea97" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>AbstractClock</name></member>
      <member refid="classtouchgfx_1_1_container_1a302ad1a4da6fe171eb249828bd8dc7ab" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>add</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a66b42d84e6ea51c0ce3e85bf60dbbb06" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>AnalogClock</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a4c9d0ee476ff3cf4c8aaec472f7d1718" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>animationDuration</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a54f0d5c506b146a9a5798b75f39b02ea" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>animationEnabled</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a22eaec05bb341f1aebd7f3cf85dcc3bf" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>animationEquation</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ac58c7595db571063cbbb5832998af4d4" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>background</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae2d939b2a9c253f0fb3bae3ec7be4e2f" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>childGeometryChanged</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a0d95b0e105a188043f421da8d9790c49" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>clockRotationCenterX</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a9671e6acdc2e39efb06ad706a462d9b9" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>clockRotationCenterY</name></member>
      <member refid="classtouchgfx_1_1_container_1ac92243515043dff4fd93c987b894b017" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>Container</name></member>
      <member refid="classtouchgfx_1_1_container_1a0109ca3d59d6ced431a24313fef18803" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>contains</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1afb0ea6e29c2b9aac649f54dc82c4728d" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>convertHandValueToAngle</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1a58ba52cb4d715396d7dc127eb72a757e" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>currentHour</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1ae8b40bb038f00a4756e75a7aab4189b7" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>currentMinute</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1a73f19ae05d80df7e0c1035df66c0da86" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>currentSecond</name></member>
      <member refid="classtouchgfx_1_1_container_1a1277d4bddd51dbc604de265fb70ccbfd" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>draw</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9cf3a85fa7554475fa42c97985bda6df" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>Drawable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4a009ec2b654351679a0124e9055abdc" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>drawToDynamicBitmap</name></member>
      <member refid="classtouchgfx_1_1_container_1a15fc4ae5c33721f5f425b20640217f22" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>firstChild</name></member>
      <member refid="classtouchgfx_1_1_container_1a2b224826cd4f0f674009c21d6821f525" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>forEachChild</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa7737d9d49d7f55ec9bde8f2c9751b1d" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getAbsoluteRect</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a3e1a378e61f8aa8dafeb718915aa28e7" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getAnimationDuration</name></member>
      <member refid="classtouchgfx_1_1_container_1a47e8a844fa50b171656f8355fd8e313b" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getContainedArea</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1ac73330b9d1235b53a41cd2496590ab8c" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getCurrentHour</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1aaab7acbcaa6f945bdb3dc7ae570e9237" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getCurrentMinute</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1a8cb42ba706265640d4796da828c4a9be" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getCurrentSecond</name></member>
      <member refid="classtouchgfx_1_1_container_1a35ae5c9547dd1861f70b5e4f0f9b94b3" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getFirstChild</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ad00483821e06fe4d0d70222de4135d30" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getHeight</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ad8c4716330f2f1614fc4caf8cdc13b7b" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getHourHandMinuteCorrection</name></member>
      <member refid="classtouchgfx_1_1_container_1a6bc8e89dc7f879221e9862fb27dc726f" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getLastChild</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a71c167c7bb91182163fbe281f23abcd7" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getMinuteHandSecondCorrection</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a61c9b2bf703c49a6d238d354ddcaedb3" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getNextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a013e065d4d9a10dbfa0ddee9a35582a3" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getParent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af23a5bb7d473e16363a449c497586be3" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getRect</name></member>
      <member refid="classtouchgfx_1_1_container_1a4dcdd780e93cc783a2ceeda00c6f3b51" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getSolidRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4783dfe657ff1b7a33261bda8c4b4266" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getSolidRectAbsolute</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a83b8847f583b63e60aa4bf778261ddd7" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>getVisibleRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1acae58162aaca6fc174416550f76668e7" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac071e9b7ccf37179df7d29c6778b664c" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a26752e6cff4607d0eec8768ef6d9032a" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>getY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a7f1524b90bc90e5f6cf7ee47aae12123" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>handleClickEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a06ae1946b2124cc94e26cfe18728debf" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>handleDragEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4db4945ecbc2303bf860e082409b8029" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>handleGestureEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1af635cee0f186c3d0fcea60bac14355" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>handleTickEvent</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a67ab070f543699233ae6754f86903c66" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>hourHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ab1406dd0bc3541853cb565552121bd1d" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>hourHandMinuteCorrectionActive</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ac726036e99d2353598444dc8f3c0830e" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>initializeTime12Hour</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a47e7be5146b3d54d761fdd186fca751d" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>initializeTime24Hour</name></member>
      <member refid="classtouchgfx_1_1_container_1aca896b17460628dceeac8b01553b6a00" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>insert</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2800b4c18c63e9e7b1f85a74ce6b80c3" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>invalidate</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a130cf6e1bf2b9f04f48e659758fa75e2" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>invalidateRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a01c717b9abc98d48673b79d691c2d28a" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>isTouchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9d8a6cfb13917785c143e74d40e4e2be" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>isVisible</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a42212cbb77f6aec6df9a419e720cb1df" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>lastHour</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a3b22777a5996fb0c93c9597b4f36f9ff" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>lastMinute</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1afa70dab3ce7698b1f3afa7bb6d593465" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>lastSecond</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a8e46777647266e8888e6e82a4b8b9d43" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>minuteHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a2fce5a9ab56621d2ebb87c85e9557cb3" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>minuteHandSecondCorrectionActive</name></member>
      <member refid="classtouchgfx_1_1_container_1add539b68574f09b364f0b4e6a312b9b0" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>moveChildrenRelative</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af3590480070e2cf91580976f322d2c5e" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>moveRelative</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aadc5abfad4d2fcc331cf8de8713dc00e" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>moveTo</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0da4a00c3fbdea5740e52c7e04316c65" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>nextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ab77c13cde2b01107dcbc5c2b584d422f" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>parent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2a955ddc316d002f566598f340eb2af9" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>rect</name></member>
      <member refid="classtouchgfx_1_1_container_1a4d9056af30ab3c61da25a71023a341f2" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>remove</name></member>
      <member refid="classtouchgfx_1_1_container_1a4e62c805a8478320f1e650e6a635b31a" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>removeAll</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a8b057ad7883bfef7bf1f03e0764ba360" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>secondHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a9971910de81ade9741e8109f3f690f45" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setAnimation</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a4007e425660e2bd3516afa6571720170" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setBackground</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a0795b232a9be1500aca9e5f82afec292" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setBackground</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a47a6312407603de99247bb802dbd8a48" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setHeight</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a64e3e389c926499530b6442ba14aa84a" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setHourHandMinuteCorrection</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ac97dcceb45a00fd15ab0e3765be350f7" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setMinuteHandSecondCorrection</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac218c371450d8ad2bed3e1b07965a41a" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setPosition</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a0f56ec04173fdc8df56cc9c23e472ef8" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setRotationCenter</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1ad482b7acb10aa8e21862144fe5ee991c" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setTime12Hour</name></member>
      <member refid="classtouchgfx_1_1_abstract_clock_1a424077012afce80b9684a1007e0eb1a7" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setTime24Hour</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae4c38eadb852b153850ea7ded1f50a19" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>setTouchable</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a4cd8c3cd456a6aebb66ab12e57cb91ac" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setupHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a6c54d6d151c12e2d81e92619d80f2e1b" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setupHourHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a35f5e975ca47e9fb4be43b7bd2bf5883" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setupMinuteHand</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1ab36e7b52b3bd904f229e62ccdc64019e" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setupSecondHand</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a71639c6634c5dcf6d1bb21b8b1b61f5b" prot="public" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>setVisible</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae74a37f71d23440fc8b0466ad8ecfe4b" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9f6db7f34a74e991fc446fffb5703a53" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6c86659dc1e7355c207e9c0aa18af167" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setXY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1b08d48e7e23a046f09e63089bc82bc1" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>setY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0d014de134cb9b9c1c361fcd726a5f34" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>touchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a48c1d14ac943dbfa4935ea39db950608" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>translateRectToAbsolute</name></member>
      <member refid="classtouchgfx_1_1_container_1a23f8fdbaba5449e55efb7a14a96b657d" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>unlink</name></member>
      <member refid="classtouchgfx_1_1_analog_clock_1a7593ce787f3476d026844b540d090a0d" prot="protected" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>updateClock</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa54a57ae048476d840caf6d4d2c47aa3" prot="protected" virt="non-virtual"><scope>touchgfx::AnalogClock</scope><name>visible</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6bb040a11ffc2bd641283cc0bc0d1346" prot="public" virt="virtual"><scope>touchgfx::AnalogClock</scope><name>~Drawable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
