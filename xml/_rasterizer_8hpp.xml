<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_rasterizer_8hpp" kind="file" language="C++">
    <compoundname>Rasterizer.hpp</compoundname>
    <includes refid="_outline_8hpp" local="no">touchgfx/canvas_widget_renderer/Outline.hpp</includes>
    <includes refid="_rasterizer_8hpp" local="no">touchgfx/canvas_widget_renderer/Rasterizer.hpp</includes>
    <includes refid="_renderer_8hpp" local="no">touchgfx/canvas_widget_renderer/Renderer.hpp</includes>
    <includes refid="_scanline_8hpp" local="no">touchgfx/canvas_widget_renderer/Scanline.hpp</includes>
    <includedby refid="_rasterizer_8hpp" local="no">touchgfx/canvas_widget_renderer/Rasterizer.hpp</includedby>
    <includedby refid="_canvas_8hpp" local="no">touchgfx/widgets/canvas/Canvas.hpp</includedby>
    <includedby refid="_canvas_widget_8hpp" local="no">touchgfx/widgets/canvas/CanvasWidget.hpp</includedby>
    <includedby refid="_c_w_r_util_8hpp" local="no">touchgfx/widgets/canvas/CWRUtil.hpp</includedby>
    <incdepgraph>
      <node id="1371">
        <label>touchgfx/Application.hpp</label>
        <link refid="_application_8hpp"/>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
      </node>
      <node id="1385">
        <label>touchgfx/TextureMapTypes.hpp</label>
        <link refid="_texture_map_types_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1379">
        <label>stdarg.h</label>
      </node>
      <node id="1397">
        <label>platform/driver/button/ButtonController.hpp</label>
        <link refid="_button_controller_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1365">
        <label>touchgfx/canvas_widget_renderer/Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="1366" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
      </node>
      <node id="1387">
        <label>windows.h</label>
      </node>
      <node id="1362">
        <label>assert.h</label>
      </node>
      <node id="1360">
        <label>touchgfx/canvas_widget_renderer/Cell.hpp</label>
        <link refid="_cell_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1389">
        <label>touchgfx/Callback.hpp</label>
        <link refid="_callback_8hpp"/>
      </node>
      <node id="1367">
        <label>touchgfx/canvas_widget_renderer/Scanline.hpp</label>
        <link refid="_scanline_8hpp"/>
        <childnode refid="1368" relation="include">
        </childnode>
      </node>
      <node id="1372">
        <label>touchgfx/UIEventListener.hpp</label>
        <link refid="_u_i_event_listener_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1363">
        <label>stdint.h</label>
      </node>
      <node id="1399">
        <label>touchgfx/widgets/canvas/AbstractPainter.hpp</label>
        <link refid="_abstract_painter_8hpp"/>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
      </node>
      <node id="1359">
        <label>touchgfx/canvas_widget_renderer/Outline.hpp</label>
        <link refid="_outline_8hpp"/>
        <childnode refid="1360" relation="include">
        </childnode>
      </node>
      <node id="1384">
        <label>touchgfx/TextProvider.hpp</label>
        <link refid="_text_provider_8hpp"/>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
      </node>
      <node id="1381">
        <label>cassert</label>
      </node>
      <node id="1377">
        <label>touchgfx/transitions/Transition.hpp</label>
        <link refid="_transition_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
      </node>
      <node id="1398">
        <label>platform/driver/touch/TouchController.hpp</label>
        <link refid="_touch_controller_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1373">
        <label>touchgfx/events/ClickEvent.hpp</label>
        <link refid="_click_event_8hpp"/>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1368">
        <label>touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp</label>
        <link refid="_canvas_widget_renderer_8hpp"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
      </node>
      <node id="1391">
        <label>touchgfx/hal/BlitOp.hpp</label>
        <link refid="_blit_op_8hpp"/>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1358">
        <label>touchgfx/canvas_widget_renderer/Rasterizer.hpp</label>
        <link refid="_rasterizer_8hpp"/>
        <childnode refid="1359" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
      </node>
      <node id="1361">
        <label>touchgfx/hal/Types.hpp</label>
        <link refid="_types_8hpp"/>
        <childnode refid="1362" relation="include">
        </childnode>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1396">
        <label>platform/core/MCUInstrumentation.hpp</label>
        <link refid="_m_c_u_instrumentation_8hpp"/>
        <childnode refid="1363" relation="include">
        </childnode>
      </node>
      <node id="1386">
        <label>touchgfx/Utils.hpp</label>
        <link refid="_utils_8hpp"/>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1392">
        <label>touchgfx/hal/DMA.hpp</label>
        <link refid="_d_m_a_8hpp"/>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
      </node>
      <node id="1364">
        <label>touchgfx/hal/Config.hpp</label>
        <link refid="_config_8hpp"/>
      </node>
      <node id="1395">
        <label>touchgfx/hal/Gestures.hpp</label>
        <link refid="_gestures_8hpp"/>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1366">
        <label>touchgfx/canvas_widget_renderer/RenderingBuffer.hpp</label>
        <link refid="_rendering_buffer_8hpp"/>
      </node>
      <node id="1394">
        <label>touchgfx/hal/FrameBufferAllocator.hpp</label>
        <link refid="_frame_buffer_allocator_8hpp"/>
        <childnode refid="1386" relation="include">
        </childnode>
      </node>
      <node id="1376">
        <label>touchgfx/events/GestureEvent.hpp</label>
        <link refid="_gesture_event_8hpp"/>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1375">
        <label>touchgfx/events/DragEvent.hpp</label>
        <link refid="_drag_event_8hpp"/>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1380">
        <label>touchgfx/Bitmap.hpp</label>
        <link refid="_bitmap_8hpp"/>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1383">
        <label>touchgfx/Unicode.hpp</label>
        <link refid="_unicode_8hpp"/>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1393">
        <label>touchgfx/hal/Atomic.hpp</label>
        <link refid="_atomic_8hpp"/>
      </node>
      <node id="1369">
        <label>touchgfx/widgets/Widget.hpp</label>
        <link refid="_widget_8hpp"/>
        <childnode refid="1362" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
      </node>
      <node id="1374">
        <label>touchgfx/Event.hpp</label>
        <link refid="_event_8hpp"/>
      </node>
      <node id="1382">
        <label>touchgfx/Font.hpp</label>
        <link refid="_font_8hpp"/>
        <childnode refid="1383" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1370">
        <label>touchgfx/Drawable.hpp</label>
        <link refid="_drawable_8hpp"/>
        <childnode refid="1371" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1378">
        <label>touchgfx/lcd/LCD.hpp</label>
        <link refid="_l_c_d_8hpp"/>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
      </node>
      <node id="1388">
        <label>stdio.h</label>
      </node>
      <node id="1390">
        <label>touchgfx/hal/HAL.hpp</label>
        <link refid="_h_a_l_8hpp"/>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1405">
        <label>touchgfx/containers/progress_indicators/LineProgress.hpp</label>
        <link refid="_line_progress_8hpp"/>
      </node>
      <node id="1404">
        <label>touchgfx/widgets/canvas/Line.hpp</label>
        <link refid="_line_8hpp"/>
        <childnode refid="1405" relation="include">
        </childnode>
      </node>
      <node id="1406">
        <label>touchgfx/widgets/canvas/Shape.hpp</label>
        <link refid="_shape_8hpp"/>
      </node>
      <node id="1400">
        <label>touchgfx/canvas_widget_renderer/Rasterizer.hpp</label>
        <link refid="_rasterizer_8hpp"/>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
      </node>
      <node id="1401">
        <label>touchgfx/widgets/canvas/Canvas.hpp</label>
        <link refid="_canvas_8hpp"/>
        <childnode refid="1402" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
      </node>
      <node id="1403">
        <label>touchgfx/containers/progress_indicators/CircleProgress.hpp</label>
        <link refid="_circle_progress_8hpp"/>
      </node>
      <node id="1407">
        <label>touchgfx/widgets/canvas/CanvasWidget.hpp</label>
        <link refid="_canvas_widget_8hpp"/>
        <childnode refid="1408" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
      </node>
      <node id="1408">
        <label>touchgfx/widgets/canvas/AbstractShape.hpp</label>
        <link refid="_abstract_shape_8hpp"/>
        <childnode refid="1406" relation="include">
        </childnode>
      </node>
      <node id="1402">
        <label>touchgfx/widgets/canvas/Circle.hpp</label>
        <link refid="_circle_8hpp"/>
        <childnode refid="1403" relation="include">
        </childnode>
      </node>
      <node id="1409">
        <label>touchgfx/widgets/canvas/CWRUtil.hpp</label>
        <link refid="_c_w_r_util_8hpp"/>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>Declares the touchgfx::Rasterizer class. </para>
    </briefdescription>
    <detaileddescription>
<para>Used internally by CanvasWidgetRenderer. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>RASTERIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RASTERIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_outline_8hpp" kindref="compound">touchgfx/canvas_widget_renderer/Outline.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_rasterizer_8hpp" kindref="compound">touchgfx/canvas_widget_renderer/Rasterizer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_renderer_8hpp" kindref="compound">touchgfx/canvas_widget_renderer/Renderer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_scanline_8hpp" kindref="compound">touchgfx/canvas_widget_renderer/Scanline.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetouchgfx" kindref="compound">touchgfx</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="keyword">class<sp/></highlight><highlight class="normal">Rasterizer</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POLY_BASE_SHIFT<sp/>=<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POLY_BASE_SIZE<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>POLY_BASE_SHIFT,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POLY_BASE_MASK<sp/>=<sp/>POLY_BASE_SIZE<sp/>-<sp/>1<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AA_SHIFT<sp/>=<sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AA_NUM<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>AA_SHIFT,<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AA_MASK<sp/>=<sp/>AA_NUM<sp/>-<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AA_2NUM<sp/>=<sp/>AA_NUM<sp/>*<sp/>2,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AA_2MASK<sp/>=<sp/>AA_2NUM<sp/>-<sp/>1<sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FillingRule</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILL_NON_ZERO,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILL_EVEN_ODD<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Rasterizer()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fillingRule(FILL_NON_ZERO)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline.reset();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillingRule(FillingRule<sp/>fillingRule)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fillingRule<sp/>=<sp/>fillingRule;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveTo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIMULATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outline.wasOutlineTooComplex())</highlight></codeline>
<codeline lineno="112"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline.moveTo(x,<sp/>y);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lineTo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIMULATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outline.wasOutlineTooComplex())</highlight></codeline>
<codeline lineno="128"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline.lineTo(x,<sp/>y);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>calculateAlpha(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cover<sp/>=<sp/>area<sp/>&gt;&gt;<sp/>(Rasterizer::POLY_BASE_SHIFT<sp/>*<sp/>2<sp/>+<sp/>1<sp/>-<sp/>AA_SHIFT);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cover<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>=<sp/>-cover;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillingRule<sp/>==<sp/>FILL_EVEN_ODD)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>&amp;=<sp/>AA_2MASK;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cover<sp/>&gt;<sp/>AA_NUM)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>=<sp/>AA_2NUM<sp/>-<sp/>cover;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cover<sp/>&gt;<sp/>AA_MASK)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>=<sp/>AA_MASK;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cover;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Renderer&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>render(Renderer&amp;<sp/>r)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cell*<sp/>cells<sp/>=<sp/>outline.getCells();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numCells<sp/>=<sp/>outline.getNumCells();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numCells<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>enough<sp/>memory<sp/>allocated,<sp/>the<sp/>outline<sp/>will<sp/>look<sp/>wrong.<sp/>Do<sp/>not<sp/>proceed<sp/>with<sp/>the<sp/>drawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline.wasOutlineTooComplex())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cover;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline.reset();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cell*<sp/>curCell<sp/>=<sp/>cells++;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCells--;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cell*<sp/>startCell<sp/>=<sp/>curCell;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord<sp/>=<sp/>curCell-&gt;packedCoord();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>curCell-&gt;x;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>curCell-&gt;y;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>startCell-&gt;area;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>+=<sp/>startCell-&gt;cover;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//accumulate<sp/>all<sp/>start<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(numCells--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curCell<sp/>=<sp/>cells++;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curCell-&gt;packedCoord()<sp/>!=<sp/>coord)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>curCell-&gt;area;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cover<sp/>+=<sp/>curCell-&gt;cover;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>calculateAlpha((cover<sp/>&lt;&lt;<sp/>(Rasterizer::POLY_BASE_SHIFT<sp/>+<sp/>1))<sp/>-<sp/>area);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline.isReady(y))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.render(scanline);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline.resetSpans();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline.addCell(x,<sp/>y,<sp/>alpha);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numCells<sp/>==<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(-1))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curCell-&gt;x<sp/>&gt;<sp/>x)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>calculateAlpha(cover<sp/>&lt;&lt;<sp/>(Rasterizer::POLY_BASE_SHIFT<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline.isReady(y))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.render(scanline);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline.resetSpans();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline.addSpan(x,<sp/>y,<sp/>curCell-&gt;x<sp/>-<sp/>x,<sp/>alpha);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline.getNumSpans())</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.render(scanline);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxRenderY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline.setMaxRenderY(y);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasOutlineTooComplex()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outline.wasOutlineTooComplex();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Rasterizer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rasterizer&amp;);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rasterizer&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rasterizer&amp;);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>Outline<sp/>outline;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>Scanline<sp/>scanline;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>FillingRule<sp/>fillingRule;<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>touchgfx</highlight></codeline>
<codeline lineno="309"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RASTERIZER_HPP</highlight></codeline>
    </programlisting>
    <location file="touchgfx/canvas_widget_renderer/Rasterizer.hpp"/>
  </compounddef>
</doxygen>
