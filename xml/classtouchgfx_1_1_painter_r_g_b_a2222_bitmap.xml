<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::PainterRGBA2222Bitmap</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222" prot="public" virt="non-virtual">AbstractPainterRGBA2222</basecompoundref>
    <includes local="no">PainterRGBA2222Bitmap.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1ab90f53fbe007c65f80d83ece2352f49a" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref></type>
        <definition>Bitmap bitmap</definition>
        <argsstring></argsstring>
        <name>bitmap</name>
        <briefdescription>
<para>The bitmap to be used when painting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="68" column="1" bodyfile="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a6177842f1cf981c4df6200da3c68980b" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect bitmapRectToFrameBuffer</definition>
        <argsstring></argsstring>
        <name>bitmapRectToFrameBuffer</name>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> rectangle translated to framebuffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="69" column="1" bodyfile="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1aad3f85326bebd00ff8df32139635766e" prot="protected" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* bitmapRGBA2222Pointer</definition>
        <argsstring></argsstring>
        <name>bitmapRGBA2222Pointer</name>
        <briefdescription>
<para>Pointer to the bitmap (RGBA2222) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="66" column="1" bodyfile="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a26cfcaf90523269bc55329b8a599cd8c" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t painterAlpha</definition>
        <argsstring></argsstring>
        <name>painterAlpha</name>
        <briefdescription>
<para>The alpha to use if no alpha data is present in the given bitmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="71" column="1" bodyfile="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a302926ead4ee8a161627575d2666a7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getAlpha</definition>
        <argsstring>() const</argsstring>
        <name>getAlpha</name>
        <briefdescription>
<para>Gets the current alpha value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current alpha value.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a2e0420f68fa01ef7219a0bc2aa792169" kindref="member">setAlpha</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a597447ebea0b81133bc56ed5e506addc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PainterRGBA2222Bitmap</definition>
        <argsstring>(const Bitmap &amp;bmp=Bitmap(BITMAP_INVALID), uint8_t alpha=255)</argsstring>
        <name>PainterRGBA2222Bitmap</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> &amp;</type>
          <declname>bmp</declname>
          <defval><ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>(<ref refid="namespacetouchgfx_1ad3c4ba097ae03087134eacd89fb7103a" kindref="member">BITMAP_INVALID</ref>)</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap" kindref="compound">PainterRGBA2222Bitmap</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bmp</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The bitmap, default is <ref refid="namespacetouchgfx_1ad3c4ba097ae03087134eacd89fb7103a" kindref="member">BITMAP_INVALID</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) the alpha, default is 255 i.e. solid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a8441245669080e102adac555a07830ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void render</definition>
        <argsstring>(uint8_t *ptr, int x, int xAdjust, int y, unsigned count, const uint8_t *covers)</argsstring>
        <name>render</name>
        <reimplements refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a8441245669080e102adac555a07830ea">render</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xAdjust</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>covers</declname>
        </param>
        <briefdescription>
<para>Paint a designated part of the RenderingBuffer with respect to the amount of coverage of each pixel given by the parameter covers. </para>
        </briefdescription>
        <detaileddescription>
<para>The cover is the alpha for each pixel, which is what makes it possible to have smooth anti-aliased edges on the shapes drawn with <ref refid="classtouchgfx_1_1_canvas_widget_renderer" kindref="compound">CanvasWidgetRenderer</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the row in the RenderingBuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xAdjust</parametername>
</parameternamelist>
<parameterdescription>
<para>The minor adjustment of x (used when a pixel is smaller than a byte to specify that the <emphasis>ptr</emphasis> should have been advanced &quot;xAdjust&quot; pixels futher into the byte). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pixels to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covers</parametername>
</parameternamelist>
<parameterdescription>
<para>The coverage in of each pixel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The implementation of <ref refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a8441245669080e102adac555a07830ea" kindref="member">render()</ref> in the <ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> classes is a generic (i.e. slow) implementation that should be completely implemented in subclasses of <ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> for better performance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a2e0420f68fa01ef7219a0bc2aa792169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setAlpha</definition>
        <argsstring>(uint8_t alpha)</argsstring>
        <name>setAlpha</name>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Sets an alpha value for the bitmap. </para>
        </briefdescription>
        <detaileddescription>
<para>If the image contains an alpha channel, this alpha value is combined with the alpha in the bitmap to produce the final alpha value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha value to use if there is no alpha channel in the bitmap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1aaa522381f576704a44f66c71f63a5c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBitmap</definition>
        <argsstring>(const Bitmap &amp;bmp)</argsstring>
        <name>setBitmap</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <briefdescription>
<para>Sets a bitmap to be used when drawing the <ref refid="classtouchgfx_1_1_canvas_widget" kindref="compound">CanvasWidget</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bmp</parametername>
</parameternamelist>
<parameterdescription>
<para>The bitmap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="40" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a51910f125f1da3e5e47a57708f0a932e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool renderInit</definition>
        <argsstring>()</argsstring>
        <name>renderInit</name>
        <reimplements refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a51910f125f1da3e5e47a57708f0a932e">renderInit</reimplements>
        <briefdescription>
<para>Initialize rendering of a single scan line of pixels for the render. </para>
        </briefdescription>
        <detaileddescription>
<para>If renderInit returns false, the scanline will not be rendered.</para>
<para><simplesect kind="return"><para>true if it succeeds, false if it fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a4c19bd631f876ccfea12d1b9e5b05778" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool renderNext</definition>
        <argsstring>(uint8_t &amp;red, uint8_t &amp;green, uint8_t &amp;blue, uint8_t &amp;alpha)</argsstring>
        <name>renderNext</name>
        <reimplements refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a55afc07a1bb1885299785f1e0516885c">renderNext</reimplements>
        <param>
          <type>uint8_t &amp;</type>
          <declname>red</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>green</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Get the color of the next pixel in the scan line to blend into the framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">red</parametername>
</parameternamelist>
<parameterdescription>
<para>The red. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">green</parametername>
</parameternamelist>
<parameterdescription>
<para>The green. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">blue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the pixel should be painted, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap" kindref="compound">PainterRGBA2222Bitmap</ref> will take the color for a given point in the shape from a bitmap. </para>
    </briefdescription>
    <detaileddescription>
<para>Please be aware, the the bitmap is used by the <ref refid="classtouchgfx_1_1_canvas_widget_renderer" kindref="compound">CanvasWidgetRenderer</ref> (not <ref refid="classtouchgfx_1_1_shape" kindref="compound">Shape</ref>), so any rotation you might specify for a <ref refid="classtouchgfx_1_1_canvas" kindref="compound">Canvas</ref> <ref refid="classtouchgfx_1_1_widget" kindref="compound">Widget</ref> (e.g. <ref refid="classtouchgfx_1_1_shape" kindref="compound">Shape</ref>) is not applied to the bitmap as CWR is not aware of this rotation.</para>
<para><simplesect kind="see"><para><ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1266">
        <label>AbstractPainter</label>
        <link refid="classtouchgfx_1_1_abstract_painter"/>
      </node>
      <node id="1264">
        <label>PainterRGBA2222Bitmap</label>
        <link refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap"/>
        <childnode refid="1265" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1265">
        <label>AbstractPainterRGBA2222</label>
        <link refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222"/>
        <childnode refid="1266" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1270">
        <label>Rect</label>
        <link refid="classtouchgfx_1_1_rect"/>
      </node>
      <node id="1269">
        <label>AbstractPainter</label>
        <link refid="classtouchgfx_1_1_abstract_painter"/>
      </node>
      <node id="1267">
        <label>PainterRGBA2222Bitmap</label>
        <link refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap"/>
        <childnode refid="1268" relation="public-inheritance">
        </childnode>
        <childnode refid="1270" relation="usage">
          <edgelabel>bitmapRectToFrameBuffer</edgelabel>
        </childnode>
        <childnode refid="1271" relation="usage">
          <edgelabel>bitmap</edgelabel>
        </childnode>
      </node>
      <node id="1271">
        <label>Bitmap</label>
        <link refid="classtouchgfx_1_1_bitmap"/>
      </node>
      <node id="1268">
        <label>AbstractPainterRGBA2222</label>
        <link refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" line="25" column="1" bodyfile="touchgfx/widgets/canvas/PainterRGBA2222Bitmap.hpp" bodystart="24" bodyend="72"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_abstract_painter_1aa4f80084e6ff903500fe2febda5f2f41" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>AbstractPainter</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a59762642cd13e848875d5cc0bdf3432c" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>AbstractPainterRGBA2222</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a290754e533a9f126030de238db59494a" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>areaOffsetX</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1aee5f795da3f83f1f63af9d0c0acb75d2" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>areaOffsetY</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1ab90f53fbe007c65f80d83ece2352f49a" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>bitmap</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a6177842f1cf981c4df6200da3c68980b" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>bitmapRectToFrameBuffer</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1aad3f85326bebd00ff8df32139635766e" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>bitmapRGBA2222Pointer</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a90f2b5c86d316ef720ac9c414caf7582" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>compatibleFramebuffer</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a64f7b27f87296e4ca5cc2d60ee3303b0" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>currentX</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1af649605bffa9661bfdf81cb40fcbccbd" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>currentY</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a302926ead4ee8a161627575d2666a7f2" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>getAlpha</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a7f74f016de617471a03f48ec357dfcbc" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>mixColors</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1a7a1044374807c6f7f32b82e57b7f1212" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>mixColors</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a26cfcaf90523269bc55329b8a599cd8c" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>painterAlpha</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a597447ebea0b81133bc56ed5e506addc" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>PainterRGBA2222Bitmap</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a8441245669080e102adac555a07830ea" prot="public" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>render</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a51910f125f1da3e5e47a57708f0a932e" prot="protected" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>renderInit</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a4c19bd631f876ccfea12d1b9e5b05778" prot="protected" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>renderNext</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1aa80373a9a53a7bf76cde8b231ba081ce" prot="protected" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>renderPixel</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1a2e0420f68fa01ef7219a0bc2aa792169" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>setAlpha</name></member>
      <member refid="classtouchgfx_1_1_painter_r_g_b_a2222_bitmap_1aaa522381f576704a44f66c71f63a5c9b" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>setBitmap</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a5d2eaea5211939c699e009b61e4372af" prot="public" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>setOffset</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a03f9d48d2592bf9ef9644992ae82e545" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>setWidgetAlpha</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1ac77f8cef6ca6a25c3fa9e7f6fb1274cb" prot="protected" virt="non-virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>widgetAlpha</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a212a3772cf31ed3710dca0baea1ae436" prot="public" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>~AbstractPainter</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_r_g_b_a2222_1aca8bfd4ad8a79f24c1ac6f7ad0086f2e" prot="public" virt="virtual"><scope>touchgfx::PainterRGBA2222Bitmap</scope><name>~AbstractPainterRGBA2222</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
