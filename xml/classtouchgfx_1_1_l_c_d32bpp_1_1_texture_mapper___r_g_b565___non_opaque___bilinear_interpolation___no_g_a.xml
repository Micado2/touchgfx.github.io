<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a" kind="class" language="C++" prot="private">
    <compoundname>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</compoundname>
    <basecompoundref prot="public" virt="non-virtual">LCD32bpp::DrawTextureMapScanLineBase32</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1ab2182346858447906df97b78f1bd50fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void drawTextureMapScanLineSubdivisions</definition>
        <argsstring>(int subdivisions, const int widthModLength, int pixelsToDraw, const int affineLength, float oneOverZRight, float UOverZRight, float VOverZRight, fixed16_16 U, fixed16_16 V, fixed16_16 deltaU, fixed16_16 deltaV, float ULeft, float VLeft, float URight, float VRight, float ZRight, const DrawingSurface &amp;dest, const int destX, const int destY, const int16_t bitmapWidth, const int16_t bitmapHeight, const TextureSurface &amp;texture, uint8_t alpha, const float dOneOverZdXAff, const float dUOverZdXAff, const float dVOverZdXAff)</argsstring>
        <name>drawTextureMapScanLineSubdivisions</name>
        <param>
          <type>int</type>
          <declname>subdivisions</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>widthModLength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pixelsToDraw</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>affineLength</declname>
        </param>
        <param>
          <type>float</type>
          <declname>oneOverZRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>UOverZRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VOverZRight</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>V</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>deltaU</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a62c78b672c5381c87b38200ab84a31f5" kindref="member">fixed16_16</ref></type>
          <declname>deltaV</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ULeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VLeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>URight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>VRight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ZRight</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_drawing_surface" kindref="compound">DrawingSurface</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>destX</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>destY</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapHeight</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_texture_surface" kindref="compound">TextureSurface</ref> &amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dOneOverZdXAff</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dUOverZdXAff</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dVOverZdXAff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD32bpp.hpp" line="767" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1afca7fab2adae861662af4a99b339352b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FORCE_INLINE_FUNCTION void</type>
        <definition>FORCE_INLINE_FUNCTION void writePixel</definition>
        <argsstring>(uint32_t *const destBits, const uint16_t *const textureBits, const uint8_t *alphaBits, const int16_t bitmapWidth, const int UInt, const int VInt, const uint8_t UFrac, const uint8_t VFrac)</argsstring>
        <name>writePixel</name>
        <param>
          <type>uint32_t *const</type>
          <declname>destBits</declname>
        </param>
        <param>
          <type>const uint16_t *const</type>
          <declname>textureBits</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>alphaBits</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>UInt</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>VInt</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>UFrac</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>VFrac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD32bpp.hpp" line="770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1aac91fe31c84666928246b415d31aa177" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writePixelOnEdge</definition>
        <argsstring>(uint32_t *const destBits, const uint16_t *const textureBits, const uint8_t *alphaBits, const int16_t bitmapWidth, const int16_t bitmapHeight, const int UInt, const int VInt, const uint8_t UFrac, const uint8_t VFrac)</argsstring>
        <name>writePixelOnEdge</name>
        <param>
          <type>uint32_t *const</type>
          <declname>destBits</declname>
        </param>
        <param>
          <type>const uint16_t *const</type>
          <declname>textureBits</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>alphaBits</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapWidth</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>bitmapHeight</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>UInt</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>VInt</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>UFrac</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>VFrac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="platform/driver/lcd/LCD32bpp.hpp" line="771" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2328">
        <label>LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</label>
        <childnode refid="2329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2329">
        <label>DrawTextureMapScanLineBase32</label>
        <childnode refid="2330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2330">
        <label>DrawTextureMapScanLineBase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2331">
        <label>LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</label>
        <childnode refid="2332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2332">
        <label>DrawTextureMapScanLineBase32</label>
        <childnode refid="2333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2333">
        <label>DrawTextureMapScanLineBase</label>
      </node>
    </collaborationgraph>
    <location file="platform/driver/lcd/LCD32bpp.hpp" line="765" column="1" bodyfile="platform/driver/lcd/LCD32bpp.hpp" bodystart="764" bodyend="772"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1ab2182346858447906df97b78f1bd50fe" prot="public" virt="virtual"><scope>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</scope><name>drawTextureMapScanLineSubdivisions</name></member>
      <member refid="classtouchgfx_1_1_l_c_d32bpp_1_1_draw_texture_map_scan_line_base32_1ac5f8021e47386be50e39011e87d81d42" prot="protected" virt="non-virtual"><scope>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</scope><name>overrunCheckBilinearInterpolation</name></member>
      <member refid="classtouchgfx_1_1_l_c_d32bpp_1_1_draw_texture_map_scan_line_base32_1a398a0b20afe5ee3072ceee5a2e21c505" prot="protected" virt="non-virtual"><scope>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</scope><name>overrunCheckNearestNeighbor</name></member>
      <member refid="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1afca7fab2adae861662af4a99b339352b" prot="private" virt="non-virtual"><scope>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</scope><name>writePixel</name></member>
      <member refid="classtouchgfx_1_1_l_c_d32bpp_1_1_texture_mapper___r_g_b565___non_opaque___bilinear_interpolation___no_g_a_1aac91fe31c84666928246b415d31aa177" prot="private" virt="non-virtual"><scope>touchgfx::LCD32bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA</scope><name>writePixelOnEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
