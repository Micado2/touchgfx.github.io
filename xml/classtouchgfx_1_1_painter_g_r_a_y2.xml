<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_painter_g_r_a_y2" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::PainterGRAY2</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2" prot="public" virt="non-virtual">AbstractPainterGRAY2</basecompoundref>
    <includes local="no">PainterGRAY2.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_g_r_a_y2_1a26cfcaf90523269bc55329b8a599cd8c" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t painterAlpha</definition>
        <argsstring></argsstring>
        <name>painterAlpha</name>
        <briefdescription>
<para>The alpha value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="69" column="1" bodyfile="touchgfx/widgets/canvas/PainterGRAY2.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_painter_g_r_a_y2_1aa7f69e5b73260dec0436f66bee535003" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t painterGray</definition>
        <argsstring></argsstring>
        <name>painterGray</name>
        <briefdescription>
<para>The gray color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="68" column="1" bodyfile="touchgfx/widgets/canvas/PainterGRAY2.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a302926ead4ee8a161627575d2666a7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getAlpha</definition>
        <argsstring>() const</argsstring>
        <name>getAlpha</name>
        <briefdescription>
<para>Gets the current alpha value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current alpha value.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_painter_g_r_a_y2_1a2e0420f68fa01ef7219a0bc2aa792169" kindref="member">setAlpha</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1aeac6531763a7b698f2c7e99c2466e384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtouchgfx_1_1colortype" kindref="compound">colortype</ref></type>
        <definition>colortype getColor</definition>
        <argsstring>() const</argsstring>
        <name>getColor</name>
        <briefdescription>
<para>Gets the current color. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The color. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a10cd4bb38dedb33b5f40d529282e5114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PainterGRAY2</definition>
        <argsstring>(colortype color=0, uint8_t alpha=255)</argsstring>
        <name>PainterGRAY2</name>
        <param>
          <type><ref refid="structtouchgfx_1_1colortype" kindref="compound">colortype</ref></type>
          <declname>color</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classtouchgfx_1_1_painter_g_r_a_y2" kindref="compound">PainterGRAY2</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) the color, default is black. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) the alpha, default is 255 i.e. solid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a8441245669080e102adac555a07830ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void render</definition>
        <argsstring>(uint8_t *ptr, int x, int xAdjust, int y, unsigned count, const uint8_t *covers)</argsstring>
        <name>render</name>
        <reimplements refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1a8441245669080e102adac555a07830ea">render</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xAdjust</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>covers</declname>
        </param>
        <briefdescription>
<para>Paint a designated part of the RenderingBuffer with respect to the amount of coverage of each pixel given by the parameter covers. </para>
        </briefdescription>
        <detaileddescription>
<para>The cover is the alpha for each pixel, which is what makes it possible to have smooth anti-aliased edges on the shapes drawn with <ref refid="classtouchgfx_1_1_canvas_widget_renderer" kindref="compound">CanvasWidgetRenderer</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the row in the RenderingBuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xAdjust</parametername>
</parameternamelist>
<parameterdescription>
<para>The minor adjustment of x (used when a pixel is smaller than a byte to specify that the <emphasis>ptr</emphasis> should have been advanced &quot;xAdjust&quot; pixels futher into the byte). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pixels to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covers</parametername>
</parameternamelist>
<parameterdescription>
<para>The coverage in of each pixel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The implementation of <ref refid="classtouchgfx_1_1_painter_g_r_a_y2_1a8441245669080e102adac555a07830ea" kindref="member">render()</ref> in the <ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> classes is a generic (i.e. slow) implementation that should be completely implemented in subclasses of <ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> for better performance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a2e0420f68fa01ef7219a0bc2aa792169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setAlpha</definition>
        <argsstring>(uint8_t alpha)</argsstring>
        <name>setAlpha</name>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Sets an alpha value for the painter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha value to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a6fa35251b48a056943566ac2a23ea4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setColor</definition>
        <argsstring>(colortype color, uint8_t alpha=255)</argsstring>
        <name>setColor</name>
        <param>
          <type><ref refid="structtouchgfx_1_1colortype" kindref="compound">colortype</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Sets color and alpha to use when drawing the <ref refid="classtouchgfx_1_1_canvas_widget" kindref="compound">CanvasWidget</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>The color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) the alpha, default is 255 i.e. solid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtouchgfx_1_1_painter_g_r_a_y2_1a6b15552869521bdba4a51fbbce476de6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool renderNext</definition>
        <argsstring>(uint8_t &amp;gray, uint8_t &amp;alpha)</argsstring>
        <name>renderNext</name>
        <reimplements refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1a1d835d5c124a608ac7b6073502ad5201">renderNext</reimplements>
        <param>
          <type>uint8_t &amp;</type>
          <declname>gray</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Get the color of the next pixel in the scan line to blend into the framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">gray</parametername>
</parameternamelist>
<parameterdescription>
<para>The gray color (0-3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the pixel should be painted, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classtouchgfx_1_1_painter_g_r_a_y2" kindref="compound">PainterGRAY2</ref> class allows a shape to be filled with a given color and alpha value. </para>
    </briefdescription>
    <detaileddescription>
<para>This allows transparent, anti-aliased elements to be drawn.</para>
<para><simplesect kind="see"><para><ref refid="classtouchgfx_1_1_abstract_painter" kindref="compound">AbstractPainter</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1184">
        <label>AbstractPainterGRAY2</label>
        <link refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2"/>
        <childnode refid="1185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1183">
        <label>PainterGRAY2</label>
        <link refid="classtouchgfx_1_1_painter_g_r_a_y2"/>
        <childnode refid="1184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1185">
        <label>AbstractPainter</label>
        <link refid="classtouchgfx_1_1_abstract_painter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1187">
        <label>AbstractPainterGRAY2</label>
        <link refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2"/>
        <childnode refid="1188" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1186">
        <label>PainterGRAY2</label>
        <link refid="classtouchgfx_1_1_painter_g_r_a_y2"/>
        <childnode refid="1187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1188">
        <label>AbstractPainter</label>
        <link refid="classtouchgfx_1_1_abstract_painter"/>
      </node>
    </collaborationgraph>
    <location file="touchgfx/widgets/canvas/PainterGRAY2.hpp" line="22" column="1" bodyfile="touchgfx/widgets/canvas/PainterGRAY2.hpp" bodystart="21" bodyend="70"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_abstract_painter_1aa4f80084e6ff903500fe2febda5f2f41" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>AbstractPainter</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1acebe4cd29873acf11b540ac7f33de334" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>AbstractPainterGRAY2</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a290754e533a9f126030de238db59494a" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>areaOffsetX</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1aee5f795da3f83f1f63af9d0c0acb75d2" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>areaOffsetY</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a90f2b5c86d316ef720ac9c414caf7582" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>compatibleFramebuffer</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1a64f7b27f87296e4ca5cc2d60ee3303b0" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>currentX</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1af649605bffa9661bfdf81cb40fcbccbd" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>currentY</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a302926ead4ee8a161627575d2666a7f2" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>getAlpha</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1aeac6531763a7b698f2c7e99c2466e384" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>getColor</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a26cfcaf90523269bc55329b8a599cd8c" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>painterAlpha</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1aa7f69e5b73260dec0436f66bee535003" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>painterGray</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a10cd4bb38dedb33b5f40d529282e5114" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>PainterGRAY2</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a8441245669080e102adac555a07830ea" prot="public" virt="virtual"><scope>touchgfx::PainterGRAY2</scope><name>render</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1a51910f125f1da3e5e47a57708f0a932e" prot="protected" virt="virtual"><scope>touchgfx::PainterGRAY2</scope><name>renderInit</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a6b15552869521bdba4a51fbbce476de6" prot="protected" virt="virtual"><scope>touchgfx::PainterGRAY2</scope><name>renderNext</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_g_r_a_y2_1a300ce6e9ffa06ba9e6fa6db020809d4f" prot="protected" virt="virtual"><scope>touchgfx::PainterGRAY2</scope><name>renderPixel</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a2e0420f68fa01ef7219a0bc2aa792169" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>setAlpha</name></member>
      <member refid="classtouchgfx_1_1_painter_g_r_a_y2_1a6fa35251b48a056943566ac2a23ea4cb" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>setColor</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a5d2eaea5211939c699e009b61e4372af" prot="public" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>setOffset</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a03f9d48d2592bf9ef9644992ae82e545" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>setWidgetAlpha</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1ac77f8cef6ca6a25c3fa9e7f6fb1274cb" prot="protected" virt="non-virtual"><scope>touchgfx::PainterGRAY2</scope><name>widgetAlpha</name></member>
      <member refid="classtouchgfx_1_1_abstract_painter_1a212a3772cf31ed3710dca0baea1ae436" prot="public" virt="virtual"><scope>touchgfx::PainterGRAY2</scope><name>~AbstractPainter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
