<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_pixel_data_widget" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::PixelDataWidget</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_widget" prot="public" virt="non-virtual">Widget</basecompoundref>
    <includes local="no">PixelDataWidget.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_pixel_data_widget_1acf5bb76caa419c0fa231dbd66c881084" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
<para>The Alpha for this widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="63" column="1" bodyfile="touchgfx/widgets/PixelDataWidget.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_pixel_data_widget_1a56ed84df35de10bdb65e72b184309497" prot="protected" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
<para>The buffer where the pixels are copied from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="61" column="1" bodyfile="touchgfx/widgets/PixelDataWidget.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_pixel_data_widget_1a6499284a8ca88c8b295478a33330c66d" prot="protected" static="no" mutable="no">
        <type><ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" kindref="member">Bitmap::BitmapFormat</ref></type>
        <definition>Bitmap::BitmapFormat format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
<para>The pixel format for the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="62" column="1" bodyfile="touchgfx/widgets/PixelDataWidget.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a1277d4bddd51dbc604de265fb70ccbfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void draw</definition>
        <argsstring>(const Rect &amp;invalidatedArea) const</argsstring>
        <name>draw</name>
        <reimplements refid="classtouchgfx_1_1_drawable_1a7e4c58d8817f4119459b70ec52c38ef4">draw</reimplements>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>invalidatedArea</declname>
        </param>
        <briefdescription>
<para>Draw this drawable. </para>
        </briefdescription>
        <detaileddescription>
<para>It is a requirement that the draw implementation does not draw outside the region specified by invalidatedArea.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invalidatedArea</parametername>
</parameternamelist>
<parameterdescription>
<para>The sub-region of this drawable that needs to be redrawn, expressed in coordinates relative to its parent (e.g. for a complete redraw, invalidatedArea will be (0, 0, width, height). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a302926ead4ee8a161627575d2666a7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getAlpha</definition>
        <argsstring>() const</argsstring>
        <name>getAlpha</name>
        <briefdescription>
<para>Gets the current alpha value of the widget. </para>
        </briefdescription>
        <detaileddescription>
<para>The alpha value is in range 255 (solid) to 0 (invisible).</para>
<para><simplesect kind="return"><para>The current alpha value.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_pixel_data_widget_1a40b4eaf63ab7df1422b403a5a384a0b3" kindref="member">setAlpha</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a4dcdd780e93cc783a2ceeda00c6f3b51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>virtual Rect getSolidRect</definition>
        <argsstring>() const</argsstring>
        <name>getSolidRect</name>
        <reimplements refid="classtouchgfx_1_1_drawable_1ae7cd27bb574d3b85bd0ce5ce99e555ba">getSolidRect</reimplements>
        <briefdescription>
<para>Get (the largest possible) rectangle that is guaranteed to be solid (opaque). </para>
        </briefdescription>
        <detaileddescription>
<para>This information is important, as any <ref refid="classtouchgfx_1_1_drawable" kindref="compound">Drawable</ref> underneath the solid area does not need to be drawn.</para>
<para><simplesect kind="return"><para>The solid rectangle part of the <ref refid="classtouchgfx_1_1_drawable" kindref="compound">Drawable</ref>.</para>
</simplesect>
<simplesect kind="note"><para>The rectangle returned must be relative to upper left corner of the <ref refid="classtouchgfx_1_1_drawable" kindref="compound">Drawable</ref>, meaning that a completely solid widget should return the full size <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref>(0, 0, <ref refid="classtouchgfx_1_1_drawable_1acae58162aaca6fc174416550f76668e7" kindref="member">getWidth()</ref>, <ref refid="classtouchgfx_1_1_drawable_1ad00483821e06fe4d0d70222de4135d30" kindref="member">getHeight()</ref>). If no area can be guaranteed to be solid, an empty Rect(0, 0, 0, 0) must be returned. Failing to return the correct rectangle may result in errors on the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1ac8e56989c12ee07f0157313b74ad852c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PixelDataWidget</definition>
        <argsstring>()</argsstring>
        <name>PixelDataWidget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a40b4eaf63ab7df1422b403a5a384a0b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setAlpha</definition>
        <argsstring>(uint8_t newAlpha)</argsstring>
        <name>setAlpha</name>
        <param>
          <type>uint8_t</type>
          <declname>newAlpha</declname>
        </param>
        <briefdescription>
<para>Sets the opacity (alpha value). </para>
        </briefdescription>
        <detaileddescription>
<para>This can be used to fade it away by gradually decreasing the alpha value from 255 (solid) to 0 (invisible).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The new alpha value. 255=solid, 0=invisible.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_pixel_data_widget_1a302926ead4ee8a161627575d2666a7f2" kindref="member">getAlpha</ref></para>
</simplesect>
<simplesect kind="note"><para>The user code must call <ref refid="classtouchgfx_1_1_drawable_1a2800b4c18c63e9e7b1f85a74ce6b80c3" kindref="member">invalidate()</ref> in order to update the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a0ded5fbabd2190f43f3465038436fc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBitmapFormat</definition>
        <argsstring>(Bitmap::BitmapFormat format)</argsstring>
        <name>setBitmapFormat</name>
        <param>
          <type><ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" kindref="member">Bitmap::BitmapFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Set the format of the pixel data. </para>
        </briefdescription>
        <detaileddescription>
<para>The supported formats depend on the display type. For example grayscale displays do not support color images.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Describes the format to use when reading the pixel data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_pixel_data_widget_1a5e27f79e6a0688a0b9ba846bdd27af8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setPixelData</definition>
        <argsstring>(uint8_t *const data)</argsstring>
        <name>setPixelData</name>
        <param>
          <type>uint8_t *const</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the pixel data to display. </para>
        </briefdescription>
        <detaileddescription>
<para>The given pointer must contain WIDTH x HEIGHT x BYTES_PER_PIXEL bytes of addressable image data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref> data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_pixel_data_widget_1a0ded5fbabd2190f43f3465038436fc7a" kindref="member">setBitmapFormat</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/widgets/PixelDataWidget.hpp" line="40" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A widget for displaying a buffer of pixel data. </para>
    </briefdescription>
    <detaileddescription>
<para>This can also be though of as a dynamic bitmap where the dimensions of the bitmap is the same as the dimensions of the widget and the actual bitmap data can be set and updated dynamically. The size of the buffer must match the number of bytes required for the widget calculated as WIDTH x HEIGHT x BYTES_PER_PIXEL. If the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> is 16 bit per pixel the buffer must hold 2 bytes for each pixel. If the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref> is 24 bit the buffer must hold 3 bytes for each pixel. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1279">
        <label>Widget</label>
        <link refid="classtouchgfx_1_1_widget"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1280">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
      </node>
      <node id="1278">
        <label>PixelDataWidget</label>
        <link refid="classtouchgfx_1_1_pixel_data_widget"/>
        <childnode refid="1279" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1282">
        <label>Widget</label>
        <link refid="classtouchgfx_1_1_widget"/>
        <childnode refid="1283" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1284">
        <label>Rect</label>
        <link refid="classtouchgfx_1_1_rect"/>
      </node>
      <node id="1283">
        <label>Drawable</label>
        <link refid="classtouchgfx_1_1_drawable"/>
        <childnode refid="1284" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="1283" relation="usage">
          <edgelabel>nextSibling</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="1281">
        <label>PixelDataWidget</label>
        <link refid="classtouchgfx_1_1_pixel_data_widget"/>
        <childnode refid="1282" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="touchgfx/widgets/PixelDataWidget.hpp" line="24" column="1" bodyfile="touchgfx/widgets/PixelDataWidget.hpp" bodystart="23" bodyend="64"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1acf5bb76caa419c0fa231dbd66c881084" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>alpha</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a56ed84df35de10bdb65e72b184309497" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>buffer</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae2d939b2a9c253f0fb3bae3ec7be4e2f" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>childGeometryChanged</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a1277d4bddd51dbc604de265fb70ccbfd" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>draw</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9cf3a85fa7554475fa42c97985bda6df" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>Drawable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4a009ec2b654351679a0124e9055abdc" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>drawToDynamicBitmap</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a6499284a8ca88c8b295478a33330c66d" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>format</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa7737d9d49d7f55ec9bde8f2c9751b1d" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getAbsoluteRect</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a302926ead4ee8a161627575d2666a7f2" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getAlpha</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ad00483821e06fe4d0d70222de4135d30" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getHeight</name></member>
      <member refid="classtouchgfx_1_1_widget_1a6bc8e89dc7f879221e9862fb27dc726f" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>getLastChild</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a61c9b2bf703c49a6d238d354ddcaedb3" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getNextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a013e065d4d9a10dbfa0ddee9a35582a3" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getParent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af23a5bb7d473e16363a449c497586be3" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getRect</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a4dcdd780e93cc783a2ceeda00c6f3b51" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>getSolidRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4783dfe657ff1b7a33261bda8c4b4266" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>getSolidRectAbsolute</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a83b8847f583b63e60aa4bf778261ddd7" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>getVisibleRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1acae58162aaca6fc174416550f76668e7" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac071e9b7ccf37179df7d29c6778b664c" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a26752e6cff4607d0eec8768ef6d9032a" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>getY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a7f1524b90bc90e5f6cf7ee47aae12123" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>handleClickEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a06ae1946b2124cc94e26cfe18728debf" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>handleDragEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a4db4945ecbc2303bf860e082409b8029" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>handleGestureEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1af635cee0f186c3d0fcea60bac14355" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>handleTickEvent</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2800b4c18c63e9e7b1f85a74ce6b80c3" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>invalidate</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a130cf6e1bf2b9f04f48e659758fa75e2" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>invalidateRect</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a01c717b9abc98d48673b79d691c2d28a" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>isTouchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9d8a6cfb13917785c143e74d40e4e2be" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>isVisible</name></member>
      <member refid="classtouchgfx_1_1_drawable_1af3590480070e2cf91580976f322d2c5e" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>moveRelative</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aadc5abfad4d2fcc331cf8de8713dc00e" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>moveTo</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0da4a00c3fbdea5740e52c7e04316c65" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>nextSibling</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ab77c13cde2b01107dcbc5c2b584d422f" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>parent</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1ac8e56989c12ee07f0157313b74ad852c" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>PixelDataWidget</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a2a955ddc316d002f566598f340eb2af9" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>rect</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a40b4eaf63ab7df1422b403a5a384a0b3" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>setAlpha</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a0ded5fbabd2190f43f3465038436fc7a" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>setBitmapFormat</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a47a6312407603de99247bb802dbd8a48" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setHeight</name></member>
      <member refid="classtouchgfx_1_1_pixel_data_widget_1a5e27f79e6a0688a0b9ba846bdd27af8d" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>setPixelData</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ac218c371450d8ad2bed3e1b07965a41a" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setPosition</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae4c38eadb852b153850ea7ded1f50a19" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>setTouchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a71639c6634c5dcf6d1bb21b8b1b61f5b" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>setVisible</name></member>
      <member refid="classtouchgfx_1_1_drawable_1ae74a37f71d23440fc8b0466ad8ecfe4b" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setWidth</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a9f6db7f34a74e991fc446fffb5703a53" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setX</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6c86659dc1e7355c207e9c0aa18af167" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setXY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a1b08d48e7e23a046f09e63089bc82bc1" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>setY</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a0d014de134cb9b9c1c361fcd726a5f34" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>touchable</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a48c1d14ac943dbfa4935ea39db950608" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>translateRectToAbsolute</name></member>
      <member refid="classtouchgfx_1_1_drawable_1aa54a57ae048476d840caf6d4d2c47aa3" prot="protected" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>visible</name></member>
      <member refid="classtouchgfx_1_1_widget_1a4aecdb998b8b28b278843eaa1644998b" prot="public" virt="non-virtual"><scope>touchgfx::PixelDataWidget</scope><name>Widget</name></member>
      <member refid="classtouchgfx_1_1_drawable_1a6bb040a11ffc2bd641283cc0bc0d1346" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>~Drawable</name></member>
      <member refid="classtouchgfx_1_1_widget_1af0ef273e47acd5ce75366b6b7a51057f" prot="public" virt="virtual"><scope>touchgfx::PixelDataWidget</scope><name>~Widget</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
