<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_bitmap" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::Bitmap</compoundname>
    <includes local="no">Bitmap.hpp</includes>
    <innerclass refid="structtouchgfx_1_1_bitmap_1_1_bitmap_data" prot="public">touchgfx::Bitmap::BitmapData</innerclass>
    <innerclass refid="structtouchgfx_1_1_bitmap_1_1_cache_table_entry" prot="public">touchgfx::Bitmap::CacheTableEntry</innerclass>
    <innerclass refid="structtouchgfx_1_1_bitmap_1_1_dynamic_bitmap_data" prot="public">touchgfx::Bitmap::DynamicBitmapData</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" prot="public" static="no" strong="no">
        <type></type>
        <name>BitmapFormat</name>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a183737a1f19f772782bc5e24cfd662e7" prot="public">
          <name>RGB565</name>
          <briefdescription>
<para>16-bit, 5 bits for red, 6 bits for green, 5 bits for blue. No alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55acbcf87c79628b8c7fed02f39f7cbd15f" prot="public">
          <name>RGB888</name>
          <briefdescription>
<para>24-bit, 8 bits for each of red, green and blue. No alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55af540c373a71dee269827b0d12026de80" prot="public">
          <name>ARGB8888</name>
          <briefdescription>
<para>32-bit, 8 bits for each of red, green, blue and alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55adf5c2c2ac9b8451bc03c0b0d2623d22e" prot="public">
          <name>BW</name>
          <briefdescription>
<para>1-bit, black / white. No alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ac3590d17701152cb9478afa51623db6f" prot="public">
          <name>BW_RLE</name>
          <briefdescription>
<para>1-bit, black / white. No alpha channel. <ref refid="classtouchgfx_1_1_image" kindref="compound">Image</ref> is compressed with horizontal RLE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a2ce058c1757ec891294a6fdab0fad2c9" prot="public">
          <name>GRAY2</name>
          <briefdescription>
<para>2-bit grayscale </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55adf854bacf81e593ca4eca9df13fb99c3" prot="public">
          <name>GRAY4</name>
          <briefdescription>
<para>4-bit grayscale </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55add5c6a3f73d1878ce5c054974ab2562b" prot="public">
          <name>ARGB2222</name>
          <briefdescription>
<para>8-bit color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a5a7085352a1fe5e4ffde365bd0b461ae" prot="public">
          <name>ABGR2222</name>
          <briefdescription>
<para>8-bit color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a6fddcb6a1db9c9d4b9c4a1a9ee27f409" prot="public">
          <name>RGBA2222</name>
          <briefdescription>
<para>8-bit color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ac0c2138f62b4f4fd00bdbf97c6c6ffd9" prot="public">
          <name>BGRA2222</name>
          <briefdescription>
<para>8-bit color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a988c6b7b40715f5dab652ccf24aa3d10" prot="public">
          <name>L8</name>
          <briefdescription>
<para>8-bit indexed color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ada06582608e19a3f2438f54eeb0bcad5" prot="public">
          <name>A4</name>
          <briefdescription>
<para>4-bit alpha level </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Data of a bitmap can be stored in the following formats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="46" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="45" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0f" prot="public" static="no" strong="no">
        <type></type>
        <name>ClutFormat</name>
        <enumvalue id="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fac5f8d736cb296a577b83474bd312a3b2" prot="public">
          <name>CLUT_FORMAT_L8_ARGB8888</name>
          <briefdescription>
<para>32-bit, 8 bits for each of red, green, blue and alpha </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fa697d98ec40a4797d071250258395ea4b" prot="public">
          <name>CLUT_FORMAT_L8_RGB888</name>
          <briefdescription>
<para>24-bit, 8 bits for each of red, green and blue. No per pixel alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fa99d1b799a681ee7178ade8ecf52e4680" prot="public">
          <name>CLUT_FORMAT_L8_RGB565</name>
          <briefdescription>
<para>16-bit, 5 bits for red, 6 bits for green, 5 bits for blue. No per pixel alpha channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="classtouchgfx_1_1_color" kindref="compound">Color</ref> data of a clut can be stored in the following formats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="38" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="37" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1ac2f4b81bf02533ef2903efadadeadac2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
        <definition>BitmapId bitmapId</definition>
        <argsstring></argsstring>
        <name>bitmapId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="442" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1aa00f3b7f60cf5fb7a9d2539196b49a94" prot="private" static="yes" mutable="no">
        <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref> *</type>
        <definition>BitmapId* allocationTable</definition>
        <argsstring></argsstring>
        <name>allocationTable</name>
        <briefdescription>
<para>Order of allocations in cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="446" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a55e84e5426bbd827c695daffeadbafde" prot="private" static="yes" mutable="no">
        <type>const <ref refid="structtouchgfx_1_1_bitmap_1_1_bitmap_data" kindref="compound">BitmapData</ref> *</type>
        <definition>const BitmapData* bitmaps</definition>
        <argsstring></argsstring>
        <name>bitmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="443" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a9a845bd0dbffb4e61a8280c2b3502b9d" prot="private" static="yes" mutable="no">
        <type><ref refid="structtouchgfx_1_1_bitmap_1_1_cache_table_entry" kindref="compound">CacheTableEntry</ref> *</type>
        <definition>CacheTableEntry* cacheTable</definition>
        <argsstring></argsstring>
        <name>cacheTable</name>
        <briefdescription>
<para>Address of allocation point cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="445" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a31c1033df1f801be66902f9535e86445" prot="private" static="yes" mutable="no">
        <type><ref refid="structtouchgfx_1_1_bitmap_1_1_dynamic_bitmap_data" kindref="compound">DynamicBitmapData</ref> *</type>
        <definition>DynamicBitmapData* dynBitmaps</definition>
        <argsstring></argsstring>
        <name>dynBitmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="444" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a77298ae472ae35e30d2ef42139bada7b" prot="private" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t memoryRemaining</definition>
        <argsstring></argsstring>
        <name>memoryRemaining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="449" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a6e12df60e6b4863e858a6583333da100" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t nextAllocationIndex</definition>
        <argsstring></argsstring>
        <name>nextAllocationIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="448" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a1c8bce548e2590f16a3cc6d9d0917b23" prot="private" static="yes" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* nextFreeData</definition>
        <argsstring></argsstring>
        <name>nextFreeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="447" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a267f327befdc9061cb8fdfe001277351" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t numberOfBitmaps</definition>
        <argsstring></argsstring>
        <name>numberOfBitmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="451" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a1c6e18de91e123baaa15442c5932ed7f" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t numberOfDynamicBitmaps</definition>
        <argsstring></argsstring>
        <name>numberOfDynamicBitmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="452" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a538280a699c2c8b9bc0f8e8427fc515f" prot="private" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t totalMemory</definition>
        <argsstring></argsstring>
        <name>totalMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="450" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_bitmap_1a2658a7bcda2eb2cc288f514a09ea9524" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t uncachedCount</definition>
        <argsstring></argsstring>
        <name>uncachedCount</name>
        <briefdescription>
<para>Uncached images, sort of ... </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="453" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a770d238b04c15f1e4dbfd0af57bfb9d6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bitmap</definition>
        <argsstring>(const BitmapId id=BITMAP_INVALID)</argsstring>
        <name>Bitmap</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
          <defval><ref refid="namespacetouchgfx_1ad3c4ba097ae03087134eacd89fb7103a" kindref="member">BITMAP_INVALID</ref></defval>
        </param>
        <briefdescription>
<para>Creates and binds a <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> instance to the corresponding entry in the <ref refid="structtouchgfx_1_1_bitmap_1_1_bitmap_data" kindref="compound">BitmapData</ref> array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The unique bitmap identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="110" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1abec1c22115b35c6b7c4a06518b8fa031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* getAlphaData</definition>
        <argsstring>() const</argsstring>
        <name>getAlphaData</name>
        <briefdescription>
<para>Gets a pointer to the alpha/extra data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the extra data</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_bitmap_1ab46c1bfade86388591fe95c79feb5280" kindref="member">getExtraData</ref></para>
</simplesect>
<simplesect kind="note"><para>If this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is cached, it will return the cached version of alpha data for this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classtouchgfx_1_1_bitmap_1ab46c1bfade86388591fe95c79feb5280" kindref="member">getExtraData()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1aa0d3bc10cca379462c238251a8276f18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* getData</definition>
        <argsstring>() const</argsstring>
        <name>getData</name>
        <briefdescription>
<para>Gets a pointer to the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the raw <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data.</para>
</simplesect>
<simplesect kind="note"><para>If this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is cached, it will return the cached version of <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1ab46c1bfade86388591fe95c79feb5280" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* getExtraData</definition>
        <argsstring>() const</argsstring>
        <name>getExtraData</name>
        <briefdescription>
<para>Gets a pointer to the extra (alpha) data, if present in the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>For images stored in L8 format, a pointer to the CLUT will be returned. For non-opaque RGB565 images, a pointer to the alpha channel will be returned.</para>
<para><simplesect kind="return"><para>A pointer to the raw alpha channel data or CLUT. If no alpha channel or CLUT exist for the given <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>, 0 is returned.</para>
</simplesect>
<simplesect kind="note"><para>If this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is cached, it will return the cached version of alpha data for this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a9b4dcecd682ddcacfcb2d3e2069601a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" kindref="member">BitmapFormat</ref></type>
        <definition>BitmapFormat getFormat</definition>
        <argsstring>() const</argsstring>
        <name>getFormat</name>
        <briefdescription>
<para>Gets the format of how the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is stored. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The format of how the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data is stored. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1abfb142e1f2af246d74d97aeb0e272f2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <briefdescription>
<para>Gets the height of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> in pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> height in pixels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1ae0e55eb0de5be05ca3816dc18a17555b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
        <definition>BitmapId getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
<para>Gets the id of this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The id of this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="120" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a97bf58597e84a86861d4beaa5207b34d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect getRect</definition>
        <argsstring>() const</argsstring>
        <name>getRect</name>
        <briefdescription>
<para>Gets the rectangle describing the dimensions of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> describing the dimensions of this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="188" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a6921396b83728ccbed1b881ce2b9ad82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect getSolidRect</definition>
        <argsstring>() const</argsstring>
        <name>getSolidRect</name>
        <briefdescription>
<para>Gets the largest solid, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>not transparent, rectangle in the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>.</para>
<para><simplesect kind="return"><para>The maximum solid rectangle of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a25c4cc9ce83d79e30d9ae42a082aefd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <briefdescription>
<para>Gets the width of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> in pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> width in pixels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a647321024928a6edcc1909dfaf638603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasTransparentPixels</definition>
        <argsstring>() const</argsstring>
        <name>hasTransparentPixels</name>
        <briefdescription>
<para>Query if this object has transparent pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if this bitmap has transparent pixels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a367a216f05f6029f05d5002eebe8f859" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isAlphaPerPixel</definition>
        <argsstring>() const</argsstring>
        <name>isAlphaPerPixel</name>
        <briefdescription>
<para>Query if this object has an alpha channel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the bitmap contains an alpha channel (an alpha value for each pixel) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="198" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="198" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a60f66ebef38073d427f131aee7759cbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Bitmap &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The bitmap to compare with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this bitmap has a different id than the other bitmap.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Simply compare the BitmapId of the bitmaps using <ref refid="classtouchgfx_1_1_bitmap_1ae0e55eb0de5be05ca3816dc18a17555b" kindref="member">getId()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="398" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a61f2c4ffee553e6ea21a0a01321c3bde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Bitmap &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The bitmap to compare with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this bitmap has the same id as the other bitmap.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Simply compare the BitmapId of the bitmaps using <ref refid="classtouchgfx_1_1_bitmap_1ae0e55eb0de5be05ca3816dc18a17555b" kindref="member">getId()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="384" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="384" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a6c61debf04d6761f37daa6550108b63d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cache</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>cache</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Cache this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> into unused RAM in the bitmap cache. </para>
        </briefdescription>
        <detaileddescription>
<para>A memory region large enough to hold this bitmap must be configured and a large enough part of it must be available. Caching of a bitmap may involve a defragmentation of the bitmap cache.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> to cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if caching went well, false otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_bitmap_1a88e786003ba7f69bceb078c0506bac8f" kindref="member">registerBitmapDatabase</ref>, <ref refid="classtouchgfx_1_1_bitmap_1a3c727026c9168435f4a56136655e305d" kindref="member">compactCache</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1aca4ced32fe539517e2dfec3fbab4d57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cacheAll</definition>
        <argsstring>()</argsstring>
        <name>cacheAll</name>
        <briefdescription>
<para>Cache all bitmaps from the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> Database into RAM. </para>
        </briefdescription>
        <detaileddescription>
<para>A memory region large enough to hold all bitmaps must be configured.</para>
<para><simplesect kind="return"><para>True if all bitmaps where cached.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_bitmap_1a6c61debf04d6761f37daa6550108b63d" kindref="member">cache</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a088f3f5a7cd58cf5ab3379e646b12d15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* cacheGetAddress</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>cacheGetAddress</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get address of cache buffer for this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> in cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address if <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> was found, zero otherwise.</para>
</simplesect>
<simplesect kind="note"><para>The address is only valid until next <ref refid="classtouchgfx_1_1_bitmap_1a6c61debf04d6761f37daa6550108b63d" kindref="member">Bitmap::cache()</ref> call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1ada24ac003cab09482acec9811eeb7dd1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cacheIsCached</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>cacheIsCached</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is cached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is cached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a065bdfd5c510ae510fb3895e2c2bba3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cacheRemoveBitmap</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>cacheRemoveBitmap</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove this <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> from the RAM cache. </para>
        </briefdescription>
        <detaileddescription>
<para>The bitmap will be removed from the RAM cache. Unless the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is otherwise stored in (slow) RAM it can not be drawn anymore and must be cached again before use. The RAM freed can be used for caching of another bitmap.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> to cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> was found and removed, false otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_bitmap_1a88e786003ba7f69bceb078c0506bac8f" kindref="member">registerBitmapDatabase</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1acafaf2f3a6e955545b27332e1c4094ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cacheReplaceBitmap</definition>
        <argsstring>(BitmapId out, BitmapId in)</argsstring>
        <name>cacheReplaceBitmap</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Replace a <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> in RAM with another <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The Bitmaps must have same size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> to remove from the cache. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> to cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the replacement went well, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1abd122721555d92ed987b2dd0f6d19e54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void clearCache</definition>
        <argsstring>()</argsstring>
        <name>clearCache</name>
        <briefdescription>
<para>Clears the cached bitmaps from RAM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a3c727026c9168435f4a56136655e305d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compactCache</definition>
        <argsstring>()</argsstring>
        <name>compactCache</name>
        <briefdescription>
<para>Compact the bitmap cache to get continuous free memory on top. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is called by <ref refid="classtouchgfx_1_1_bitmap_1a6c61debf04d6761f37daa6550108b63d" kindref="member">Bitmap::cache</ref> when required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a7cc4d56e853b3123f1f17ce182eb311e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dynamicBitmapAddSolidRect</definition>
        <argsstring>(BitmapId id, const Rect &amp;solidRect)</argsstring>
        <name>dynamicBitmapAddSolidRect</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>solidRect</declname>
        </param>
        <briefdescription>
<para>Updates the solid rectangle of a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> to include the given rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para>Only relevant for ARGB8888 bitmap and 8bpp bitmap formats, as these formats include an alpha channel. The solid part of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is drawn faster than the transparent parts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>solidRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The solid rectangle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if it succeeds, false if it fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a865553a2b9939d9c10401a85d9513aa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
        <definition>static BitmapId dynamicBitmapCreate</definition>
        <argsstring>(const uint16_t width, const uint16_t height, BitmapFormat format, ClutFormat clutFormat=CLUT_FORMAT_L8_ARGB8888)</argsstring>
        <name>dynamicBitmapCreate</name>
        <param>
          <type>const uint16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" kindref="member">BitmapFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0f" kindref="member">ClutFormat</ref></type>
          <declname>clutFormat</declname>
          <defval><ref refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fac5f8d736cb296a577b83474bd312a3b2" kindref="member">CLUT_FORMAT_L8_ARGB8888</ref></defval>
        </param>
        <briefdescription>
<para>Create a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The clutFormat parameter is ignored for bitmaps not in L8 format. Creation of a new dynamic bitmap may cause existing dynamic bitmaps to be moved in memory. Do not rely on bitmap memory addresses of dynamic bitmaps obtained from <ref refid="classtouchgfx_1_1_bitmap_1a13cf0a0c691f3b2162f09b29068a2237" kindref="member">dynamicBitmapGetAddress()</ref> to be valid across calls to <ref refid="classtouchgfx_1_1_bitmap_1a865553a2b9939d9c10401a85d9513aa4" kindref="member">dynamicBitmapCreate()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> format of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clutFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) <ref refid="classtouchgfx_1_1_color" kindref="compound">Color</ref> lookup table format of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>BitmapId of the new <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> or <ref refid="namespacetouchgfx_1ad3c4ba097ae03087134eacd89fb7103a" kindref="member">BITMAP_INVALID</ref> if cache memory is full.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="structtouchgfx_1_1_bitmap_1_1_dynamic_bitmap_data" kindref="compound">DynamicBitmapData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a5f2d541d2830c2b53ec903e694f77466" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dynamicBitmapDelete</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>dynamicBitmapDelete</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Delete a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The BitmapId of the dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if it succeeds, false if it fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a13cf0a0c691f3b2162f09b29068a2237" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* dynamicBitmapGetAddress</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>dynamicBitmapGetAddress</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get the address of the dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data. </para>
        </briefdescription>
        <detaileddescription>
<para>It is important that the address of a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is not stored elsewhere as a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> may be moved in memory when other bitmaps are added and removed. Only store the BitmapId and ask for the address of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data when needed. The address of a dynamic bitmap may change when other dynamic bitmaps are added and removed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The BitmapId of the dynamic bitmap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else an uint8_t*.</para>
</simplesect>
<simplesect kind="note"><para>Never keep the address of dynamic images, only store the BitmapId as that will not change. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a18eae9d87c66df2eaf8586698fa97af3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dynamicBitmapSetSolidRect</definition>
        <argsstring>(BitmapId id, const Rect &amp;solidRect)</argsstring>
        <name>dynamicBitmapSetSolidRect</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>solidRect</declname>
        </param>
        <briefdescription>
<para>Set the solid rectangle of a dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Only relevant for ARGB8888 <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> and 8bpp <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> formats, as these formats include an alpha channel. The solid part of the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> is drawn faster than the transparent parts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>solidRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The solid rectangle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if it succeeds, false if it fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a73956f5b68789d3b473677576cd44a8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* getCacheTopAddress</definition>
        <argsstring>()</argsstring>
        <name>getCacheTopAddress</name>
        <briefdescription>
<para>Gets the address of the first unused memory in the cache. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be used in advanced application to reduce power consumption of external RAM by turning off unused RAM.</para>
<para><simplesect kind="return"><para>Returns the highest used address in the cache. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="426" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="426" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a88e786003ba7f69bceb078c0506bac8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void registerBitmapDatabase</definition>
        <argsstring>(const BitmapData *data, const uint16_t n, uint16_t *cachep=0, uint32_t csize=0, uint32_t numberOfDynamicBitmaps=0)</argsstring>
        <name>registerBitmapDatabase</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_bitmap_1_1_bitmap_data" kindref="compound">BitmapData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>cachep</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>csize</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numberOfDynamicBitmaps</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Registers an array of bitmaps. </para>
        </briefdescription>
        <detaileddescription>
<para>All <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> instances are bound to this database. This function is called automatically from <ref refid="namespacetouchgfx_1ac9f45e65d261580744b315b168aa520c" kindref="member">HAL::touchgfx_generic_init()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the <ref refid="structtouchgfx_1_1_bitmap_1_1_bitmap_data" kindref="compound">BitmapData</ref> storage array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bitmaps in the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cachep</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Pointer to memory region in which bitmap data can be cached. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csize</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Size of cache memory region in bytes (0 if unused) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfDynamicBitmaps</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Number of dynamic bitmaps to be allowed in the cache. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a10b6fb35a49b98fedd48859c590f89ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void removeCache</definition>
        <argsstring>()</argsstring>
        <name>removeCache</name>
        <briefdescription>
<para>Removes the <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> cache. </para>
        </briefdescription>
        <detaileddescription>
<para>The memory can hereafter be used for other purposes. All dynamic <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> IDs are invalid after this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a38ece2ea73e45bbad3221234ad5c5005" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void setCache</definition>
        <argsstring>(uint16_t *cachep, uint32_t csize, uint32_t numberOfDynamicBitmaps=0)</argsstring>
        <name>setCache</name>
        <param>
          <type>uint16_t *</type>
          <declname>cachep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>csize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numberOfDynamicBitmaps</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Register a memory region in which <ref refid="classtouchgfx_1_1_bitmap" kindref="compound">Bitmap</ref> data can be cached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cachep</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to memory region in which bitmap data can be cached. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of cache memory region in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfDynamicBitmaps</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Number of dynamic bitmaps to be allowed in the cache. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="412" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a118a15be72ac453267ec4c4a712b61e8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool copyBitmapToCache</definition>
        <argsstring>(BitmapId id, uint8_t *const dst)</argsstring>
        <name>copyBitmapToCache</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_bitmap_1a220c23fc85fea5391d483c6e146aab77" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t getSizeOfBitmap</definition>
        <argsstring>(BitmapId id)</argsstring>
        <name>getSizeOfBitmap</name>
        <param>
          <type><ref refid="namespacetouchgfx_1a3923435f6df64396b2203d60ddfa89e4" kindref="member">BitmapId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Bitmap.hpp" line="438" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides a proxy object for a bitmap image stored in the application specific bitmap database. </para>
    </briefdescription>
    <detaileddescription>
<para>The proxy provides access to the raw bitmap data as well as metadata. </para>
    </detaileddescription>
    <location file="touchgfx/Bitmap.hpp" line="34" column="1" bodyfile="touchgfx/Bitmap.hpp" bodystart="33" bodyend="454"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ada06582608e19a3f2438f54eeb0bcad5" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>A4</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a5a7085352a1fe5e4ffde365bd0b461ae" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>ABGR2222</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1aa00f3b7f60cf5fb7a9d2539196b49a94" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>allocationTable</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55add5c6a3f73d1878ce5c054974ab2562b" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>ARGB2222</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55af540c373a71dee269827b0d12026de80" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>ARGB8888</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ac0c2138f62b4f4fd00bdbf97c6c6ffd9" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>BGRA2222</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a770d238b04c15f1e4dbfd0af57bfb9d6" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>Bitmap</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>BitmapFormat</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ac2f4b81bf02533ef2903efadadeadac2" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>bitmapId</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a55e84e5426bbd827c695daffeadbafde" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>bitmaps</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55adf5c2c2ac9b8451bc03c0b0d2623d22e" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>BW</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55ac3590d17701152cb9478afa51623db6f" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>BW_RLE</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a6c61debf04d6761f37daa6550108b63d" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1aca4ced32fe539517e2dfec3fbab4d57e" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheAll</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a088f3f5a7cd58cf5ab3379e646b12d15" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheGetAddress</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ada24ac003cab09482acec9811eeb7dd1" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheIsCached</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a065bdfd5c510ae510fb3895e2c2bba3d" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheRemoveBitmap</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1acafaf2f3a6e955545b27332e1c4094ae" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheReplaceBitmap</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a9a845bd0dbffb4e61a8280c2b3502b9d" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>cacheTable</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1abd122721555d92ed987b2dd0f6d19e54" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>clearCache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fac5f8d736cb296a577b83474bd312a3b2" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>CLUT_FORMAT_L8_ARGB8888</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fa99d1b799a681ee7178ade8ecf52e4680" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>CLUT_FORMAT_L8_RGB565</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0fa697d98ec40a4797d071250258395ea4b" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>CLUT_FORMAT_L8_RGB888</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ae6e94ed35a41bf65a7ea6193084d8d0f" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>ClutFormat</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a3c727026c9168435f4a56136655e305d" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>compactCache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a118a15be72ac453267ec4c4a712b61e8" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>copyBitmapToCache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a7cc4d56e853b3123f1f17ce182eb311e" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynamicBitmapAddSolidRect</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a865553a2b9939d9c10401a85d9513aa4" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynamicBitmapCreate</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a5f2d541d2830c2b53ec903e694f77466" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynamicBitmapDelete</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a13cf0a0c691f3b2162f09b29068a2237" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynamicBitmapGetAddress</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a18eae9d87c66df2eaf8586698fa97af3" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynamicBitmapSetSolidRect</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a31c1033df1f801be66902f9535e86445" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>dynBitmaps</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1abec1c22115b35c6b7c4a06518b8fa031" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getAlphaData</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a73956f5b68789d3b473677576cd44a8d" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getCacheTopAddress</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1aa0d3bc10cca379462c238251a8276f18" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getData</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ab46c1bfade86388591fe95c79feb5280" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getExtraData</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a9b4dcecd682ddcacfcb2d3e2069601a5" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getFormat</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1abfb142e1f2af246d74d97aeb0e272f2f" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getHeight</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1ae0e55eb0de5be05ca3816dc18a17555b" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getId</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a97bf58597e84a86861d4beaa5207b34d" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getRect</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a220c23fc85fea5391d483c6e146aab77" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getSizeOfBitmap</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a6921396b83728ccbed1b881ce2b9ad82" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getSolidRect</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a25c4cc9ce83d79e30d9ae42a082aefd9" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>getWidth</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a2ce058c1757ec891294a6fdab0fad2c9" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>GRAY2</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55adf854bacf81e593ca4eca9df13fb99c3" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>GRAY4</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a647321024928a6edcc1909dfaf638603" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>hasTransparentPixels</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a367a216f05f6029f05d5002eebe8f859" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>isAlphaPerPixel</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a988c6b7b40715f5dab652ccf24aa3d10" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>L8</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a77298ae472ae35e30d2ef42139bada7b" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>memoryRemaining</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a6e12df60e6b4863e858a6583333da100" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>nextAllocationIndex</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a1c8bce548e2590f16a3cc6d9d0917b23" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>nextFreeData</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a267f327befdc9061cb8fdfe001277351" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>numberOfBitmaps</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a1c6e18de91e123baaa15442c5932ed7f" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>numberOfDynamicBitmaps</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a60f66ebef38073d427f131aee7759cbf" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>operator!=</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a61f2c4ffee553e6ea21a0a01321c3bde" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>operator==</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a88e786003ba7f69bceb078c0506bac8f" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>registerBitmapDatabase</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a10b6fb35a49b98fedd48859c590f89ee" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>removeCache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a183737a1f19f772782bc5e24cfd662e7" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>RGB565</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55acbcf87c79628b8c7fed02f39f7cbd15f" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>RGB888</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a23d1a7c7cf0f6da45ca389904e644d55a6fddcb6a1db9c9d4b9c4a1a9ee27f409" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>RGBA2222</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a38ece2ea73e45bbad3221234ad5c5005" prot="public" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>setCache</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a538280a699c2c8b9bc0f8e8427fc515f" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>totalMemory</name></member>
      <member refid="classtouchgfx_1_1_bitmap_1a2658a7bcda2eb2cc288f514a09ea9524" prot="private" virt="non-virtual"><scope>touchgfx::Bitmap</scope><name>uncachedCount</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
