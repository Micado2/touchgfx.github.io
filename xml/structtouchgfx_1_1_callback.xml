<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structtouchgfx_1_1_callback" kind="struct" language="C++" prot="public">
    <compoundname>touchgfx::Callback</compoundname>
    <basecompoundref refid="classtouchgfx_1_1_generic_callback" prot="public" virt="non-virtual">touchgfx::GenericCallback&lt; T1, T2, T3 &gt;</basecompoundref>
    <includes local="no">Callback.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>dest_type</declname>
        <defname>dest_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T1</declname>
        <defname>T1</defname>
        <defval>void</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>T2</declname>
        <defname>T2</defname>
        <defval>void</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>T3</declname>
        <defname>T3</defname>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structtouchgfx_1_1_callback_1a77c56c96147ae6052e751694b338172b" prot="private" static="no" mutable="no">
        <type>void(dest_type::*</type>
        <definition>void(dest_type::* pmemfun_3) (T1, T2, T3)</definition>
        <argsstring>)(T1, T2, T3)</argsstring>
        <name>pmemfun_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="256" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtouchgfx_1_1_callback_1a81a1373e822a9234934c2a5d80e5014a" prot="private" static="no" mutable="no">
        <type>dest_type *</type>
        <definition>dest_type* pobject</definition>
        <argsstring></argsstring>
        <name>pobject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="255" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtouchgfx_1_1_callback_1ad41772d01c7dc962d82d392d04e3c5b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Callback</definition>
        <argsstring>()</argsstring>
        <name>Callback</name>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="209" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structtouchgfx_1_1_callback_1af6cb636cd231c67491f483d5e067ab91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Callback</definition>
        <argsstring>(dest_type *pobject, void(dest_type::*pmemfun_3)(T1, T2, T3))</argsstring>
        <name>Callback</name>
        <param>
          <type>dest_type *</type>
          <declname>pobject</declname>
        </param>
        <param>
          <type>void(dest_type::*)(T1, T2, T3)</type>
          <declname>pmemfun_3</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> with an object and a pointer to the member function in that object to call. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> with an object and a pointer to the member function in that object to call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pobject</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the object on which the function should be called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pmemfun_3</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of member function. This is the version where function takes three arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="225" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="structtouchgfx_1_1_callback_1a85b834a6a9833b14d09c79513e5659bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void execute</definition>
        <argsstring>(T1 t1, T2 t2, T3 t3)</argsstring>
        <name>execute</name>
        <reimplements refid="classtouchgfx_1_1_generic_callback_1ad38d4f33764a05acff473fe7b45ad328">execute</reimplements>
        <param>
          <type>T1</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
<para>Calls the member function. </para>
        </briefdescription>
        <detaileddescription>
<para>Do not call execute unless <ref refid="structtouchgfx_1_1_callback_1a39663c885a33e68077c40e35140c205f" kindref="member">isValid()</ref> returns true (ie. a pointer to the object and the function has been set).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para>This value will be passed as the first argument in the function call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t2</parametername>
</parameternamelist>
<parameterdescription>
<para>This value will be passed as the second argument in the function call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t3</parametername>
</parameternamelist>
<parameterdescription>
<para>This value will be passed as the third argument in the function call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="239" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structtouchgfx_1_1_callback_1a39663c885a33e68077c40e35140c205f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <reimplements refid="classtouchgfx_1_1_generic_callback_1a84d80615491ecea423f99490445b73ae">isValid</reimplements>
        <briefdescription>
<para>Function to check whether the <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> has been initialized with values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true If the callback is valid (i.e. safe to call execute). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Callback.hpp" line="249" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="249" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> is basically a wrapper of a pointer-to-member-function. </para>
    </briefdescription>
    <detaileddescription>
<para>It is used for registering callbacks between widgets. For instance, a <ref refid="classtouchgfx_1_1_button" kindref="compound">Button</ref> can be configured to call a member function when it is clicked.</para>
<para>The class is templated in order to provide the class type of the object in which the member function resides, and the argument types of the function to call.</para>
<para>The <ref refid="structtouchgfx_1_1_callback" kindref="compound">Callback</ref> class exists in four versions, for supporting member functions with 0, 1, 2 or 3 arguments. The compiler will infer which type to use automatically.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>dest_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the class in which the member function resides. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T1</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the first argument in the member function, or void if none. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T2</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the second argument in the member function, or void if none. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the third argument in the member function, or void if none.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The member function to call must return void. The function can have zero, one, two or three arguments of any type. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="352">
        <label>GenericCallback&lt; T1, T2, T3 &gt;</label>
        <link refid="classtouchgfx_1_1_generic_callback"/>
      </node>
      <node id="351">
        <label>Callback&lt; dest_type, T1, T2, T3 &gt;</label>
        <link refid="structtouchgfx_1_1_callback"/>
        <childnode refid="352" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="354">
        <label>GenericCallback&lt; T1, T2, T3 &gt;</label>
        <link refid="classtouchgfx_1_1_generic_callback"/>
      </node>
      <node id="353">
        <label>Callback&lt; dest_type, T1, T2, T3 &gt;</label>
        <link refid="structtouchgfx_1_1_callback"/>
        <childnode refid="354" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="touchgfx/Callback.hpp" line="207" column="1" bodyfile="touchgfx/Callback.hpp" bodystart="206" bodyend="257"/>
    <listofallmembers>
      <member refid="structtouchgfx_1_1_callback_1ad41772d01c7dc962d82d392d04e3c5b5" prot="public" virt="non-virtual"><scope>touchgfx::Callback</scope><name>Callback</name></member>
      <member refid="structtouchgfx_1_1_callback_1af6cb636cd231c67491f483d5e067ab91" prot="public" virt="non-virtual"><scope>touchgfx::Callback</scope><name>Callback</name></member>
      <member refid="structtouchgfx_1_1_callback_1a85b834a6a9833b14d09c79513e5659bb" prot="public" virt="virtual"><scope>touchgfx::Callback</scope><name>execute</name></member>
      <member refid="structtouchgfx_1_1_callback_1a39663c885a33e68077c40e35140c205f" prot="public" virt="virtual"><scope>touchgfx::Callback</scope><name>isValid</name></member>
      <member refid="structtouchgfx_1_1_callback_1a77c56c96147ae6052e751694b338172b" prot="private" virt="non-virtual"><scope>touchgfx::Callback</scope><name>pmemfun_3</name></member>
      <member refid="structtouchgfx_1_1_callback_1a81a1373e822a9234934c2a5d80e5014a" prot="private" virt="non-virtual"><scope>touchgfx::Callback</scope><name>pobject</name></member>
      <member refid="classtouchgfx_1_1_generic_callback_1a415e22032e9f1abad04ac86ad1c6f615" prot="public" virt="virtual"><scope>touchgfx::Callback</scope><name>~GenericCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
