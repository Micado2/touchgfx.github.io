<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_utils_8hpp" kind="file" language="C++">
    <compoundname>Utils.hpp</compoundname>
    <includes local="no">stdarg.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="_bitmap_8hpp" local="no">touchgfx/Bitmap.hpp</includes>
    <includes refid="_types_8hpp" local="no">touchgfx/hal/Types.hpp</includes>
    <includedby refid="_drawable_8hpp" local="no">touchgfx/Drawable.hpp</includedby>
    <includedby refid="_frame_buffer_allocator_8hpp" local="no">touchgfx/hal/FrameBufferAllocator.hpp</includedby>
    <includedby refid="_l_c_d_8hpp" local="no">touchgfx/lcd/LCD.hpp</includedby>
    <incdepgraph>
      <node id="286">
        <label>stdarg.h</label>
      </node>
      <node id="287">
        <label>windows.h</label>
      </node>
      <node id="285">
        <label>touchgfx/Utils.hpp</label>
        <link refid="_utils_8hpp"/>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetouchgfx">touchgfx</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="_utils_8hpp_1a8e7fb0198a4a66423e593787bc2177c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void touchgfx_enable_stdio</definition>
        <argsstring>()</argsstring>
        <name>touchgfx_enable_stdio</name>
        <briefdescription>
<para>Ensure there is a console window to print to and read from. </para>
        </briefdescription>
        <detaileddescription>
<para>The console window is used to print to using touchgfx_printf(), printf() or std::cout, and read from using e.g. fgets() or std::cin. Alternatively, instead of using printf(), simply use touchgfx_printf() which will ensure there is a console to write to. After the first call to touchgfx_printf(), it will also be possible to read from stdin.</para>
<para><simplesect kind="see"><para>touchgfx_printf</para>
</simplesect>
<simplesect kind="note"><para>This function is called automatically from HALSDL2::sdl_init(). It is therefore no longer necessary to call this function from user code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Utils.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_utils_8hpp_1a38c99c961f08d37187da9ce658d2b64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void touchgfx_printf</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>touchgfx_printf</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>TouchGFX printf that will only work on simulators. </para>
        </briefdescription>
        <detaileddescription>
<para>On Windows systems, a new console window will be created where the output is printed. On Linux systems, output will be sent to /var/log/syslog. For target systems, calls to touchgfx_printf() will be removed and will not cause any use of memory. Unlike printf(), touchfgx_printf() does not return number of characters written.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Describes the format to use, see printf(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable arguments providing additional information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>touchgfx_enable_stdio </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/Utils.hpp" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Declares various helper functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SIMULATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__linux__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;touchgfx/Bitmap.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;touchgfx/hal/Types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SIMULATOR)<sp/>&amp;&amp;<sp/>!defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>touchgfx_enable_stdio();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>touchgfx_enable_stdio()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SIMULATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>touchgfx_printf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>touchgfx_printf(format,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetouchgfx" kindref="compound">touchgfx</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetouchgfx_1acf0eb29ab5799003b29406ae2ffa08ff" kindref="member">memset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>uint8_t<sp/>c,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="namespacetouchgfx_1ad59e90505ec56c2331c99dffd08b686c" kindref="member">RenderingVariant</ref><sp/><ref refid="namespacetouchgfx_1a97c066a7eff2a0f94f0caa59b3c99774" kindref="member">lookupNearestNeighborRenderVariant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Bitmap&amp;<sp/>bitmap);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="namespacetouchgfx_1ad59e90505ec56c2331c99dffd08b686c" kindref="member">RenderingVariant</ref><sp/><ref refid="namespacetouchgfx_1ab9fe3338e9a34bc45218c5fd202d29dd" kindref="member">lookupBilinearRenderVariant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Bitmap&amp;<sp/>bitmap);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">T<sp/><ref refid="namespacetouchgfx_1a869b95e7df114093b0cbb0056baedf9c" kindref="member">abs</ref>(T<sp/>d)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-d;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">T<sp/><ref refid="namespacetouchgfx_1a59c06314a1c4a83698403edf6c3423e0" kindref="member">gcd</ref>(T<sp/>a,<sp/>T<sp/>b)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>%=<sp/>a;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>%=<sp/>b;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">int32_t<sp/><ref refid="namespacetouchgfx_1ab91dc48422fd4abb18201e52e4c331d8" kindref="member">clz</ref>(int32_t<sp/>x);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">int32_t<sp/><ref refid="namespacetouchgfx_1a68ac725a2e6c1d44ee47ac8a672827c4" kindref="member">muldiv</ref>(int32_t<sp/>factor1,<sp/>int32_t<sp/>factor2,<sp/>int32_t<sp/>divisor,<sp/>int32_t&amp;<sp/>remainder);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>touchgfx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>UTILS_HPP</highlight></codeline>
    </programlisting>
    <location file="touchgfx/Utils.hpp"/>
  </compounddef>
</doxygen>
