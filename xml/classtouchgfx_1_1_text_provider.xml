<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_text_provider" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::TextProvider</compoundname>
    <includes local="no">TextProvider.hpp</includes>
    <innerclass refid="classtouchgfx_1_1_text_provider_1_1circular_buffer" prot="private">touchgfx::TextProvider::circularBuffer</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtouchgfx_1_1_text_provider_1ac24fa209d8896b1f715f0e8e6bf477ab" prot="private" static="no">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref>(TextProvider::*</type>
        <definition>typedef Unicode::UnicodeChar(TextProvider::* UnicodeConverterFunctionPointer) (const TextDirection direction)</definition>
        <argsstring>)(const TextDirection direction)</argsstring>
        <name>UnicodeConverterFunctionPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="239" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtouchgfx_1_1_text_provider_1aa79e27121bd0b5e55436d8c800f98100" prot="private" static="no">
        <type>void(TextProvider::*</type>
        <definition>typedef void(TextProvider::* UnicodeConverterInitFunctionPointer) ()</definition>
        <argsstring>)()</argsstring>
        <name>UnicodeConverterInitFunctionPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="238" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1afec2979f2a18d3abf4d57028b5078daf" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t MAX_32BIT_INTEGER_DIGITS</definition>
        <argsstring></argsstring>
        <name>MAX_32BIT_INTEGER_DIGITS</name>
        <initializer>= 33U</initializer>
        <briefdescription>
<para>Max number of digits used for the text representation of a 32 bit integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="27" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1aa610a242a465bc1022ff875a8a10de9e" prot="private" static="no" mutable="no">
        <type>const uint16_t *</type>
        <definition>const uint16_t* fontGsubTable</definition>
        <argsstring></argsstring>
        <name>fontGsubTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="232" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1aea1579be397902c9cbe440461ad59c6f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>const Unicode::UnicodeChar* format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="143" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a0fda28c87b0ed9fe51646899a5c196e3" prot="private" static="no" mutable="no">
        <type>va_list</type>
        <definition>va_list formatArgs</definition>
        <argsstring></argsstring>
        <name>formatArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="144" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a2732f8440c424fa2ee27571129e78949" prot="private" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t glyphPosBottom</definition>
        <argsstring></argsstring>
        <name>glyphPosBottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="256" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a9bc484a17287da57d58e5b3276d88252" prot="private" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t glyphPosLeft</definition>
        <argsstring></argsstring>
        <name>glyphPosLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="257" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a8d365ddde50093d62e704860c86e25b1" prot="private" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t glyphPosTop</definition>
        <argsstring></argsstring>
        <name>glyphPosTop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="255" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a8cdbb188ea94eb7d085ac3645bce4f83" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isContextualBeginning</definition>
        <argsstring></argsstring>
        <name>isContextualBeginning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="259" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a3094075627b54bc6bd104e508a701601" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isWritingWildcard</definition>
        <argsstring></argsstring>
        <name>isWritingWildcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="146" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a29cfc1028f06824acfcfa8f6bfc86dfb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lastGlyphIsAccent</definition>
        <argsstring></argsstring>
        <name>lastGlyphIsAccent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="260" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a8f4048c9168eb9d32a7b6320d9b6b96a" prot="private" static="no" mutable="no">
        <type><ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref></type>
        <definition>GlyphNode modifiedGlyph</definition>
        <argsstring></argsstring>
        <name>modifiedGlyph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="254" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a6db77dded325dc53dfe9c439812a131a" prot="private" static="no" mutable="no">
        <type>circularBuffer&lt; NUM_NEXT_CHARS &gt;</type>
        <definition>circularBuffer&lt;NUM_NEXT_CHARS&gt; nextCharacters</definition>
        <argsstring></argsstring>
        <name>nextCharacters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="228" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1af19aac432175fce1babd97473c673a48" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>const Unicode::UnicodeChar* original_format_string</definition>
        <argsstring></argsstring>
        <name>original_format_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="142" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a8ec4171646bec4a0eaf663ef9eef9fd0" prot="private" static="no" mutable="no">
        <type>circularBuffer&lt; NUM_PREV_CHARS &gt;</type>
        <definition>circularBuffer&lt;NUM_PREV_CHARS&gt; prevCharacters</definition>
        <argsstring></argsstring>
        <name>prevCharacters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="227" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1afaa86ec7ad6f73ca24b201b6f3bcee07" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>const Unicode::UnicodeChar* substringPointer</definition>
        <argsstring></argsstring>
        <name>substringPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="145" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a2fe9180ee36c19fb02160315d0edea58" prot="private" static="no" mutable="no">
        <type>circularBuffer&lt; NUM_XTRA_CHARS &gt;</type>
        <definition>circularBuffer&lt;NUM_XTRA_CHARS&gt; xtraCharacters</definition>
        <argsstring></argsstring>
        <name>xtraCharacters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="229" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1ac5553e7fde8f9d76efbe0a25fe8f28a4" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms0621_063a[][4]</definition>
        <argsstring>[][4]</argsstring>
        <name>contextualForms0621_063a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="264" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a40969ca70ccc56f891bc09310d80eabf" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms0641_064a[][4]</definition>
        <argsstring>[][4]</argsstring>
        <name>contextualForms0641_064a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="265" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1aac534cd70cb26ac53786607da2b33014" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms06XX[][5]</definition>
        <argsstring>[][5]</argsstring>
        <name>contextualForms06XX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="266" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a99f7e3a2cd6814b40a0d6aac5d193a47" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms2Long[][5]</definition>
        <argsstring>[][5]</argsstring>
        <name>contextualForms2Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="263" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a90b210b77a54e59570af4b7b80d7e784" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms3Long[][5]</definition>
        <argsstring>[][5]</argsstring>
        <name>contextualForms3Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="262" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1aff5cf672279450add2afcedeeff87b70" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>const Unicode::UnicodeChar contextualForms4Long[][5]</definition>
        <argsstring>[][5]</argsstring>
        <name>contextualForms4Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="261" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a0130f1604dab04d5c5ecc77f0e0d89a5" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int NUM_NEXT_CHARS</definition>
        <argsstring></argsstring>
        <name>NUM_NEXT_CHARS</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="225" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1a552b06ba9ac85a22a46bbe1f31b46576" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int NUM_PREV_CHARS</definition>
        <argsstring></argsstring>
        <name>NUM_PREV_CHARS</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="224" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1ab181fa2a055eee637bf39b1a56ac1e2a" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int NUM_XTRA_CHARS</definition>
        <argsstring></argsstring>
        <name>NUM_XTRA_CHARS</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="226" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1af4ea4b222a723455e3009fab1ff80468" prot="private" static="yes" mutable="no">
        <type>UnicodeConverterFunctionPointer</type>
        <definition>UnicodeConverterFunctionPointer unicodeConverterFunction</definition>
        <argsstring></argsstring>
        <name>unicodeConverterFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="241" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtouchgfx_1_1_text_provider_1ae6ae8cff8d19a962d86535e04ab243a3" prot="private" static="yes" mutable="no">
        <type>UnicodeConverterInitFunctionPointer</type>
        <definition>UnicodeConverterInitFunctionPointer unicodeConverterInitFunction</definition>
        <argsstring></argsstring>
        <name>unicodeConverterInitFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="240" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getNextChar</definition>
        <argsstring>()</argsstring>
        <name>getNextChar</name>
        <briefdescription>
<para>Gets the next character. </para>
        </briefdescription>
        <detaileddescription>
<para>For Arabic and Thai, it is important to use the getNextLigature instead.</para>
<para><simplesect kind="return"><para>The next character of the expanded string or 0 if end of string is reached.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">TextProvider::getNextLigature</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getNextLigature</definition>
        <argsstring>(TextDirection direction)</argsstring>
        <name>getNextLigature</name>
        <param>
          <type><ref refid="namespacetouchgfx_1abe2c7387a9ed6f7c793179053f152743" kindref="member">TextDirection</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Gets the next ligature. </para>
        </briefdescription>
        <detaileddescription>
<para>For most languages this is simply the next <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> character from the buffer, but e.g. Arabic has different ligatures for each character. Thai character placement might also depend on previous characters. It is recommended to use getNextLigature with font and glyph parameters to ensure coming glyphs in a text are placed correctly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next character of the expanded string or 0 if end of string is reached.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">TextProvider::getNextChar</ref></para>
</simplesect>
<simplesect kind="note"><para>Functions <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> and <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> will advance through the same buffer and mixing the use of those functions is not recommended and may cause undesired results. Instead create two TextProviders and user <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> on one and <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> on the other. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a6a13275fa7ad3d29f740f1b00953f4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getNextLigature</definition>
        <argsstring>(TextDirection direction, const Font *font, const GlyphNode *&amp;glyph)</argsstring>
        <name>getNextLigature</name>
        <param>
          <type><ref refid="namespacetouchgfx_1abe2c7387a9ed6f7c793179053f152743" kindref="member">TextDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_font" kindref="compound">Font</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *&amp;</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
<para>Gets the next ligature. </para>
        </briefdescription>
        <detaileddescription>
<para>For most languages this is simply the next <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> character from the buffer, but e.g. Arabic has different ligatures for each character.</para>
<para>Also gets a glyph for the ligature in a font. For non-Thai Unicodes, this is identical to using <ref refid="classtouchgfx_1_1_font_1a5f7aec9358d43d39cc9a54b6a294d148" kindref="member">Font::getGlyph()</ref>, but for Thai characters where diacritics glyphs are not always placed at the same relative position, an adjusted <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> will be generated with correct relative X/Y coordinates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>The font. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">glyph</parametername>
</parameternamelist>
<parameterdescription>
<para>The glyph.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next character of the expanded string or 0 if end of string i reached.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">TextProvider::getNextChar</ref>, <ref refid="classtouchgfx_1_1_font_1a5f7aec9358d43d39cc9a54b6a294d148" kindref="member">Font::getGlyph</ref></para>
</simplesect>
<simplesect kind="note"><para>Functions <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> and <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> will advance through the same buffer and mixing the use of those functions is not recommended and may cause undesired results. Instead create two TextProviders and user <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> on one and <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> on the other. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a50b5d1ef6765751d3bfc8464651285d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getNextLigature</definition>
        <argsstring>(TextDirection direction, const Font *font, const GlyphNode *&amp;glyph, const uint8_t *&amp;pixelData, uint8_t &amp;bitsPerPixel)</argsstring>
        <name>getNextLigature</name>
        <param>
          <type><ref refid="namespacetouchgfx_1abe2c7387a9ed6f7c793179053f152743" kindref="member">TextDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_font" kindref="compound">Font</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *&amp;</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>const uint8_t *&amp;</type>
          <declname>pixelData</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>bitsPerPixel</declname>
        </param>
        <briefdescription>
<para>Gets the next ligature. </para>
        </briefdescription>
        <detaileddescription>
<para>For most languages this is simply the next <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> character from the buffer, but e.g. Arabic has different ligatures for each character.</para>
<para>Also gets a glyph for the ligature in a font. For non-Thai Unicodes, this is identical to using <ref refid="classtouchgfx_1_1_font_1a5f7aec9358d43d39cc9a54b6a294d148" kindref="member">Font::getGlyph()</ref>, but for Thai characters where diacritics glyphs are not always placed at the same relative position, an adjusted <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> will be generated with correct relative X/Y coordinates.</para>
<para>Furthermore a pointer to the glyph data and the bit depth of the font are returned in parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>The font. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">glyph</parametername>
</parameternamelist>
<parameterdescription>
<para>The glyph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pixelData</parametername>
</parameternamelist>
<parameterdescription>
<para>Information describing the pixel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bitsPerPixel</parametername>
</parameternamelist>
<parameterdescription>
<para>The bits per pixel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next character of the expanded string or 0 if end of string is reached.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">TextProvider::getNextChar</ref>, <ref refid="classtouchgfx_1_1_font_1a5f7aec9358d43d39cc9a54b6a294d148" kindref="member">Font::getGlyph</ref></para>
</simplesect>
<simplesect kind="note"><para>Functions <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> and <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> will advance through the same buffer and mixing the use of those functions is not recommended and may cause undesired results. Instead create two TextProviders and user <ref refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" kindref="member">getNextChar()</ref> on one and <ref refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" kindref="member">getNextLigature()</ref> on the other. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a10ee411d76a9c7f43475ae6419e8264b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize</definition>
        <argsstring>(const Unicode::UnicodeChar *stringFormat, va_list pArg, const uint16_t *gsubTable=0)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
          <declname>stringFormat</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>pArg</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>gsubTable</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initializes the <ref refid="classtouchgfx_1_1_text_provider" kindref="compound">TextProvider</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each &apos;\2&apos; character in the format is replaced by one UnicodeChar* argument from pArg.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stringFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Format arguments in the form of a va_list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gsubTable</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Pointer to GSUB table with <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> substitution rules. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1af9c4b21fefd632ab5d6019dff66e7001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize</definition>
        <argsstring>(const Unicode::UnicodeChar *stringFormat, const uint16_t *gsubTable=0,...)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
          <declname>stringFormat</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>gsubTable</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Initializes the <ref refid="classtouchgfx_1_1_text_provider" kindref="compound">TextProvider</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each &apos;\2&apos; character in the format is replaced by one UnicodeChar* argument from pArg.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stringFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gsubTable</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Pointer to GSUB table with <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> substitution rules. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable arguments providing additional information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a408da1897d2fe83fe90106705264ac98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TextProvider</definition>
        <argsstring>()</argsstring>
        <name>TextProvider</name>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classtouchgfx_1_1_text_provider" kindref="compound">TextProvider</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The user must call <ref refid="classtouchgfx_1_1_text_provider_1a10ee411d76a9c7f43475ae6419e8264b" kindref="member">initialize()</ref> before characters can be provided. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a5a869f1ec0dd5faace3287f9ea803f2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
        <definition>const GlyphNode* adjustArabicGlyph</definition>
        <argsstring>(const Font *font, const GlyphNode *glyph, Unicode::UnicodeChar originalUnicode)</argsstring>
        <name>adjustArabicGlyph</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_font" kindref="compound">Font</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>originalUnicode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a4d1163750d68e328a6f4d158365412f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
        <definition>const GlyphNode* adjustHindiGlyph</definition>
        <argsstring>(const GlyphNode *glyph)</argsstring>
        <name>adjustHindiGlyph</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1af66429d01048d622fb51c8954937873a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
        <definition>const GlyphNode* adjustThaiGlyph</definition>
        <argsstring>(const Font *font, const GlyphNode *glyph)</argsstring>
        <name>adjustThaiGlyph</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_font" kindref="compound">Font</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a19153e1dbe741f4d4c28916b61f9ea31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool applyGsubRules</definition>
        <argsstring>(const uint16_t *nextTableEntry, const Unicode::UnicodeChar key)</argsstring>
        <name>applyGsubRules</name>
        <param>
          <type>const uint16_t *</type>
          <declname>nextTableEntry</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a248111a204ec386e45bd3fc74094d4e8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>const Unicode::UnicodeChar* binarySearch</definition>
        <argsstring>(uint16_t key, const Unicode::UnicodeChar contextualFormTable[][5], int maxIndex) const</argsstring>
        <name>binarySearch</name>
        <param>
          <type>uint16_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>contextualFormTable</declname>
          <array>[][5]</array>
        </param>
        <param>
          <type>int</type>
          <declname>maxIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a9fabb4d7b6cb5d7751d2f76edd0151af" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
        <definition>const Unicode::UnicodeChar* contextualFormForChar</definition>
        <argsstring>(const Unicode::UnicodeChar currChar) const</argsstring>
        <name>contextualFormForChar</name>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>currChar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1ab40aac11c1ed5394a08e8b7e8faab5dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fillInputBuffer</definition>
        <argsstring>()</argsstring>
        <name>fillInputBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a8839ddb678d2dd58caec444e814e3959" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar getNextCharInternal</definition>
        <argsstring>()</argsstring>
        <name>getNextCharInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a41c2c5c3a4f40c4ebf20a5367dbcba2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gsubRuleMatch</definition>
        <argsstring>(const uint16_t *tableEntry, uint16_t backtrack, uint16_t input, uint16_t lookahead)</argsstring>
        <name>gsubRuleMatch</name>
        <param>
          <type>const uint16_t *</type>
          <declname>tableEntry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>backtrack</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lookahead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a94fb518755b6830b5997be806e5262c8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t gsubTableBinarySearch</definition>
        <argsstring>(const uint16_t numEntries, const uint16_t *unicodeLookupTable, const Unicode::UnicodeChar key) const</argsstring>
        <name>gsubTableBinarySearch</name>
        <param>
          <type>const uint16_t</type>
          <declname>numEntries</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>unicodeLookupTable</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1af769a798f67b26941bf55b2a89e0b73b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeInternal</definition>
        <argsstring>()</argsstring>
        <name>initializeInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1abf979cd2d4016103ae7ddff690d7ee00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void replaceInputCharacters</definition>
        <argsstring>(uint16_t existingNumChars, uint16_t newNumChars, const Unicode::UnicodeChar *newChars)</argsstring>
        <name>replaceInputCharacters</name>
        <param>
          <type>uint16_t</type>
          <declname>existingNumChars</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>newNumChars</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref> *</type>
          <declname>newChars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a50edef271236cc2a86fefeded23f0518" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void substituteGlyphs</definition>
        <argsstring>()</argsstring>
        <name>substituteGlyphs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1af2d3a4278ff13b85fa56ddf362e7f9ca" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
        <definition>const GlyphNode* thaiLookupGlyph</definition>
        <argsstring>(const GlyphNode *glyph, const Font *font, Unicode::UnicodeChar unicode) const</argsstring>
        <name>thaiLookupGlyph</name>
        <param>
          <type>const <ref refid="structtouchgfx_1_1_glyph_node" kindref="compound">GlyphNode</ref> *</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_font" kindref="compound">Font</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
          <declname>unicode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a051e99e5ebd9a2de12ff5385bba1be00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtouchgfx_1_1_unicode_1a8288baea3c463411f70776b30b04605d" kindref="member">Unicode::UnicodeChar</ref></type>
        <definition>Unicode::UnicodeChar unicodeConverter</definition>
        <argsstring>(const TextDirection direction)</argsstring>
        <name>unicodeConverter</name>
        <param>
          <type>const <ref refid="namespacetouchgfx_1abe2c7387a9ed6f7c793179053f152743" kindref="member">TextDirection</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_text_provider_1a58aaad9356797246d541f72a2ba31f85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicodeConverterInit</definition>
        <argsstring>()</argsstring>
        <name>unicodeConverterInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/TextProvider.hpp" line="244" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classtouchgfx_1_1_text_provider" kindref="compound">TextProvider</ref> is used in drawing basic strings and strings with one or two wildcards. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classtouchgfx_1_1_text_provider" kindref="compound">TextProvider</ref> enables wildcard expansion of the string at the time it is written to the <ref refid="classtouchgfx_1_1_l_c_d" kindref="compound">LCD</ref>.</para>
<para>Wildcards specified as &lt;placeholder&gt; are converted to <ref refid="classtouchgfx_1_1_unicode" kindref="compound">Unicode</ref> value 2 by the text converter tool, and the placeholders are automatically expanded with the specified wildcard buffers at runtime. </para>
    </detaileddescription>
    <location file="touchgfx/TextProvider.hpp" line="25" column="1" bodyfile="touchgfx/TextProvider.hpp" bodystart="24" bodyend="267"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_text_provider_1a5a869f1ec0dd5faace3287f9ea803f2f" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>adjustArabicGlyph</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a4d1163750d68e328a6f4d158365412f0" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>adjustHindiGlyph</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af66429d01048d622fb51c8954937873a" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>adjustThaiGlyph</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a19153e1dbe741f4d4c28916b61f9ea31" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>applyGsubRules</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a248111a204ec386e45bd3fc74094d4e8" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>binarySearch</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a9fabb4d7b6cb5d7751d2f76edd0151af" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualFormForChar</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ac5553e7fde8f9d76efbe0a25fe8f28a4" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms0621_063a</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a40969ca70ccc56f891bc09310d80eabf" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms0641_064a</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1aac534cd70cb26ac53786607da2b33014" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms06XX</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a99f7e3a2cd6814b40a0d6aac5d193a47" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms2Long</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a90b210b77a54e59570af4b7b80d7e784" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms3Long</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1aff5cf672279450add2afcedeeff87b70" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>contextualForms4Long</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ab40aac11c1ed5394a08e8b7e8faab5dc" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>fillInputBuffer</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1aa610a242a465bc1022ff875a8a10de9e" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>fontGsubTable</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1aea1579be397902c9cbe440461ad59c6f" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>format</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a0fda28c87b0ed9fe51646899a5c196e3" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>formatArgs</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a3a02923518733c616b40f13d04082c7d" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>getNextChar</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a8839ddb678d2dd58caec444e814e3959" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>getNextCharInternal</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ab36ea3eb2e53cc0058da800ed3f6d666" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>getNextLigature</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a6a13275fa7ad3d29f740f1b00953f4a2" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>getNextLigature</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a50b5d1ef6765751d3bfc8464651285d4" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>getNextLigature</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a2732f8440c424fa2ee27571129e78949" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>glyphPosBottom</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a9bc484a17287da57d58e5b3276d88252" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>glyphPosLeft</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a8d365ddde50093d62e704860c86e25b1" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>glyphPosTop</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a41c2c5c3a4f40c4ebf20a5367dbcba2b" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>gsubRuleMatch</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a94fb518755b6830b5997be806e5262c8" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>gsubTableBinarySearch</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a10ee411d76a9c7f43475ae6419e8264b" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>initialize</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af9c4b21fefd632ab5d6019dff66e7001" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>initialize</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af769a798f67b26941bf55b2a89e0b73b" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>initializeInternal</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a8cdbb188ea94eb7d085ac3645bce4f83" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>isContextualBeginning</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a3094075627b54bc6bd104e508a701601" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>isWritingWildcard</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a29cfc1028f06824acfcfa8f6bfc86dfb" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>lastGlyphIsAccent</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1afec2979f2a18d3abf4d57028b5078daf" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>MAX_32BIT_INTEGER_DIGITS</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a8f4048c9168eb9d32a7b6320d9b6b96a" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>modifiedGlyph</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a6db77dded325dc53dfe9c439812a131a" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>nextCharacters</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a0130f1604dab04d5c5ecc77f0e0d89a5" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>NUM_NEXT_CHARS</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a552b06ba9ac85a22a46bbe1f31b46576" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>NUM_PREV_CHARS</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ab181fa2a055eee637bf39b1a56ac1e2a" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>NUM_XTRA_CHARS</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af19aac432175fce1babd97473c673a48" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>original_format_string</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a8ec4171646bec4a0eaf663ef9eef9fd0" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>prevCharacters</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1abf979cd2d4016103ae7ddff690d7ee00" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>replaceInputCharacters</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a50edef271236cc2a86fefeded23f0518" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>substituteGlyphs</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1afaa86ec7ad6f73ca24b201b6f3bcee07" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>substringPointer</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a408da1897d2fe83fe90106705264ac98" prot="public" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>TextProvider</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af2d3a4278ff13b85fa56ddf362e7f9ca" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>thaiLookupGlyph</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a051e99e5ebd9a2de12ff5385bba1be00" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>unicodeConverter</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1af4ea4b222a723455e3009fab1ff80468" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>unicodeConverterFunction</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ac24fa209d8896b1f715f0e8e6bf477ab" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>UnicodeConverterFunctionPointer</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a58aaad9356797246d541f72a2ba31f85" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>unicodeConverterInit</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1ae6ae8cff8d19a962d86535e04ab243a3" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>unicodeConverterInitFunction</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1aa79e27121bd0b5e55436d8c800f98100" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>UnicodeConverterInitFunctionPointer</name></member>
      <member refid="classtouchgfx_1_1_text_provider_1a2fe9180ee36c19fb02160315d0edea58" prot="private" virt="non-virtual"><scope>touchgfx::TextProvider</scope><name>xtraCharacters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
