<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classtouchgfx_1_1_u_i_event_listener" kind="class" language="C++" prot="public">
    <compoundname>touchgfx::UIEventListener</compoundname>
    <derivedcompoundref refid="classtouchgfx_1_1_application" prot="public" virt="non-virtual">Application</derivedcompoundref>
    <includes local="no">UIEventListener.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1a046dadb316d2687b1ce6b7ec081116ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handleClickEvent</definition>
        <argsstring>(const ClickEvent &amp;event)</argsstring>
        <name>handleClickEvent</name>
        <reimplementedby refid="classtouchgfx_1_1_application_1a7f1524b90bc90e5f6cf7ee47aae12123">handleClickEvent</reimplementedby>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_click_event" kindref="compound">ClickEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>This handler is invoked when a mouse click or display touch event has been detected by the system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="33" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1ada662e4d76cd97bfd582579fbb88f90f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handleDragEvent</definition>
        <argsstring>(const DragEvent &amp;event)</argsstring>
        <name>handleDragEvent</name>
        <reimplementedby refid="classtouchgfx_1_1_application_1a06ae1946b2124cc94e26cfe18728debf">handleDragEvent</reimplementedby>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_drag_event" kindref="compound">DragEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>This handler is invoked when a drag event has been detected by the system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="42" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1a5d6483291e6a4aa5283750bf9ef1fc20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handleGestureEvent</definition>
        <argsstring>(const GestureEvent &amp;event)</argsstring>
        <name>handleGestureEvent</name>
        <reimplementedby refid="classtouchgfx_1_1_application_1a4db4945ecbc2303bf860e082409b8029">handleGestureEvent</reimplementedby>
        <param>
          <type>const <ref refid="classtouchgfx_1_1_gesture_event" kindref="compound">GestureEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>This handler is invoked when a gesture event has been detected by the system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="51" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1a73066ed0ba854ea765ef3abac92ff615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handleKeyEvent</definition>
        <argsstring>(uint8_t c)</argsstring>
        <name>handleKeyEvent</name>
        <reimplementedby refid="classtouchgfx_1_1_application_1a73066ed0ba854ea765ef3abac92ff615">handleKeyEvent</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>This handler is invoked when a key (or button) event has been detected by the system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The key or button pressed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="60" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1af54ae20b14a651b98e1980b39fb4fd39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handlePendingScreenTransition</definition>
        <argsstring>()</argsstring>
        <name>handlePendingScreenTransition</name>
        <reimplementedby refid="classtouchgfx_1_1_m_v_p_application_1af54ae20b14a651b98e1980b39fb4fd39">handlePendingScreenTransition</reimplementedby>
        <reimplementedby refid="classtouchgfx_1_1_application_1af54ae20b14a651b98e1980b39fb4fd39">handlePendingScreenTransition</reimplementedby>
        <briefdescription>
<para>This handler is invoked when a change screen event is pending. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="73" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1a1af635cee0f186c3d0fcea60bac14355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void handleTickEvent</definition>
        <argsstring>()</argsstring>
        <name>handleTickEvent</name>
        <reimplementedby refid="classtouchgfx_1_1_application_1a1af635cee0f186c3d0fcea60bac14355">handleTickEvent</reimplementedby>
        <briefdescription>
<para>This handler is invoked when a system tick event has been generated. </para>
        </briefdescription>
        <detaileddescription>
<para>The system tick period is configured in the <ref refid="classtouchgfx_1_1_h_a_l" kindref="compound">HAL</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="68" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtouchgfx_1_1_u_i_event_listener_1a3565666b0e1e01fc33464b4852acce16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~UIEventListener</definition>
        <argsstring>()</argsstring>
        <name>~UIEventListener</name>
        <briefdescription>
<para>Finalizes an instance of the <ref refid="classtouchgfx_1_1_u_i_event_listener" kindref="compound">UIEventListener</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="touchgfx/UIEventListener.hpp" line="78" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class declares a handler interface for user interface events, i.e. </para>
    </briefdescription>
    <detaileddescription>
<para>events generated by the users interaction with the device. With the exception of the system timer tick, all other system events, which are not related to the user interface device peripherals (display, keys etc.) are not part of this interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2619">
        <label>MVPApplication</label>
        <link refid="classtouchgfx_1_1_m_v_p_application"/>
        <childnode refid="2618" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2617">
        <label>UIEventListener</label>
        <link refid="classtouchgfx_1_1_u_i_event_listener"/>
      </node>
      <node id="2618">
        <label>Application</label>
        <link refid="classtouchgfx_1_1_application"/>
        <childnode refid="2617" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="touchgfx/UIEventListener.hpp" line="25" column="1" bodyfile="touchgfx/UIEventListener.hpp" bodystart="24" bodyend="81"/>
    <listofallmembers>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1a046dadb316d2687b1ce6b7ec081116ee" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handleClickEvent</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1ada662e4d76cd97bfd582579fbb88f90f" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handleDragEvent</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1a5d6483291e6a4aa5283750bf9ef1fc20" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handleGestureEvent</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1a73066ed0ba854ea765ef3abac92ff615" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handleKeyEvent</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1af54ae20b14a651b98e1980b39fb4fd39" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handlePendingScreenTransition</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1a1af635cee0f186c3d0fcea60bac14355" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>handleTickEvent</name></member>
      <member refid="classtouchgfx_1_1_u_i_event_listener_1a3565666b0e1e01fc33464b4852acce16" prot="public" virt="virtual"><scope>touchgfx::UIEventListener</scope><name>~UIEventListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
