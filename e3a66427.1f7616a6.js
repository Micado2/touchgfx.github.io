(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{208:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return s})),i.d(t,"metadata",(function(){return l})),i.d(t,"rightToc",(function(){return c})),i.d(t,"default",(function(){return h}));var a=i(1),r=i(9),o=(i(0),i(227)),n=i(228),s={id:"before-selection-of-hardware",title:"Before Selection of Hardware"},l={id:"Development/HardwareSelection/before-selection-of-hardware",title:"Before Selection of Hardware",description:"import Figure from '@site/components/Figure';\r",source:"@site/docs\\Development\\HardwareSelection\\before-selection-of-hardware.mdx",permalink:"/docs/Development/HardwareSelection/before-selection-of-hardware",sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/Development/HardwareSelection/hardware-selection-introduction"},next:{title:"MCU",permalink:"/docs/Development/HardwareSelection/HardwareComponents/hardware-selection-mcu"}},c=[{value:"Framebuffer",id:"framebuffer",children:[{value:"Resolution",id:"resolution",children:[]},{value:"Color Depth",id:"color-depth",children:[]},{value:"Framebuffer Size Calculation",id:"framebuffer-size-calculation",children:[]}]},{value:"Animation Fidelity",id:"animation-fidelity",children:[]},{value:"Display",id:"display",children:[{value:"Size",id:"size",children:[]},{value:"Type",id:"type",children:[]}]},{value:"Physical Requirements",id:"physical-requirements",children:[]},{value:"FPS",id:"fps",children:[]}],p={rightToc:c},u="wrapper";function h(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(o.b)(u,Object(a.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The purpose of this section is to give some pointers to what considerations should be accounted for before deciding upon hardware. Every product is different and as such has different criteria and requirements, so let the following serve as a source of inspiration for what questions you should ask yourself before making a decision."),Object(o.b)("h2",{id:"framebuffer"},"Framebuffer"),Object(o.b)("h3",{id:"resolution"},"Resolution"),Object(o.b)("p",null,"Higher display resolution equals to having more pixel data to transfer when a frame needs to be updated. This in turn means that more memory is required to fit the resulting framebuffer, while also increasing the need for higher throughput of essential components such as RAM, display interface and the MCU. "),Object(o.b)(n.a,{imageSource:"/img/Development/HardwareSelection/before-selection-of-hardware/display-resolution.png",caption:"Display resolution examples",noShadow:!0,width:"600",mdxType:"Figure"}),Object(o.b)("p",null,"Pixel density should also be considered, as a larger display size warrants a higher resolution to be perceived as sharp."),Object(o.b)("p",null,"Some of the questions you should ask yourself when picking a resolution for your application is:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Are you going to be using a lot of small text in your application?")," Large blocks of small text are usually a lot more readable on higher resolution displays due to greater pixel density."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Are you generally going to be showing a lot of different elements on a screen at a time?")," Higher resolutions give more screen real-estate for more complex UIs.")),Object(o.b)("h3",{id:"color-depth"},"Color Depth"),Object(o.b)("p",null,"Color depth (or bits per pixel) dictates the amount of information which can be stored per pixel in an image, which thereby means how many different colors you are able to assign to a single pixel. "),Object(o.b)(n.a,{imageSource:"/img/Development/HardwareSelection/before-selection-of-hardware/color-depth-examples.png",caption:"4, 8 and 24-bit color depth",noShadow:!0,mdxType:"Figure"}),Object(o.b)("p",null,"Displaying complex images with a lot of nuances in color demands a higher color depth to be as close to the source image as possible, while different dithering algorithms use varying amount of MCU power to try and mimmick the source material as much as possible on lower color depths. As such, the color depth has an impact on the amount of memory"),Object(o.b)("p",null,"Some of the questions you should ask yourself when picking a color depth for your application is:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Will you be showing complex real-life images in your application such as landscapes, cities etc.?")," If this is a requirement, a higher color depth is adviced for higher quality."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Do you need to show shadows in your application and how high quality can you live with?")," Higher color depth allows for higher quality shadows. "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Is greyscale colors perhaps all you really need to convey what your application needs?")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"What is most important - functionality or looks?")," Often finding the right balance between the two will result in the best application both user and cost-wise.")),Object(o.b)("h3",{id:"framebuffer-size-calculation"},"Framebuffer Size Calculation"),Object(o.b)("p",null,"A framebuffer is the location where pixel data is stored and transferred to the display. The size of the framebuffer is important as a larger size calls for a higher throughput on RAM and display interface. "),Object(o.b)("p",null,"The size in bytes of a framebuffer is calculated by: "),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"display width * display height * (bits per pixel / 8)")),Object(o.b)("p",null,"As an example, an 800x480 application with a color depth of 16bpp would need a framebuffer allocated with a size of:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"800 * 480 * (16 / 8) = 768 kilobytes")),Object(o.b)("p",null,"So when you decide on a resolution and color depth, be sure you have enough RAM to support it.  "),Object(o.b)("h2",{id:"animation-fidelity"},"Animation Fidelity"),Object(o.b)("p",null,"GUI products range from:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Small QVGA resolutions running a simple black and white 1 bit application"),Object(o.b)("li",{parentName:"ul"},"WQVGA resolutions running 16 bit applications with fullscreen transitions, bitmap rotations"),Object(o.b)("li",{parentName:"ul"},"XGA resolutions, 24 bits color applications with smaller animations."),Object(o.b)("li",{parentName:"ul"},"Etc.  ")),Object(o.b)("p",null,"If the need is to run fluent animations with full screen transitions, bitmap scaling, and alpha blending, one must also take in to account different interface speeds on the memory, microcontroller and display. On the contrary, if the need is a very simple UI, where Bill of Materials (BOM) is extremely important, great consideration should be given to the animation fidelity as these are some of the more demanding operations in TouchGFX."),Object(o.b)(n.a,{imageSource:"/img/Development/HardwareSelection/before-selection-of-hardware/animations.gif",caption:"Animations",width:"480",mdxType:"Figure"}),Object(o.b)("h2",{id:"display"},"Display"),Object(o.b)("h3",{id:"size"},"Size"),Object(o.b)("p",null,"The physical size of the display is also important to consider. Larger displays are generally easier to operate and easier to give precise touch commands, but also require a larger resolution to be easy on the eyes, thus impacting the need for more memory and throughput. "),Object(o.b)("h3",{id:"type"},"Type"),Object(o.b)("p",null,"There are two main types of displays:"),Object(o.b)("h4",{id:"capacitive"},"Capacitive"),Object(o.b)("p",null,"Capacitive displays have much higher touch sensitivity which is important if the application requires more advanced touch operations such as dragging, swiping etc. and is also the most used in modern devices due to this fact."),Object(o.b)("p",null,"However, they are also more expensive and cannot be operated with gloves, so if this is important, perhaps resistive is the solution."),Object(o.b)("h4",{id:"resistive"},"Resistive"),Object(o.b)("p",null,"This cheaper alternative is much less sensitive and has poor visibility in sunlight, but can be operated with gloves and is generally more resistant."),Object(o.b)("p",null,"So if all your touch operations consist of simple button presses, perhaps a resistive display is enough."),Object(o.b)("h2",{id:"physical-requirements"},"Physical Requirements"),Object(o.b)("p",null,"Physical requirements of a product will vary greatly and can have an impact on the hardware chosen. Home appliances will have other requirements to harzardous industrial usage and therefore, some of the questions you should ask yourself when unveiling the physical limitations could be:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Is your product required to be very small?")," An example could be a smart watch, which will have a limited size, thus impacting both cost and options for a lot of the hardware components. Perhaps you decide to limit the fidelity of the UI to push down costs."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Is your product going to be subject to extreme temperatures?")," Capacitive displays can generally underperform during extraordinary heat or extraordinary cold. So perhaps if you're installing your product in for example cold storage, a resistive display will be a better user experience."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Does your product need to be very resistant to outdoor environmental factors such as water or dust?")," Resistive displays are much more resistant compared to capacitive."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Is visibility in high sunlight important?")," Capacitive displays have much better visibility in sunlight compared to resistive.")),Object(o.b)("h2",{id:"fps"},"FPS"),Object(o.b)("p",null,"A higher and stable Frames Per Second (FPS) count is preferable since this makes an application seem much smoother, but sometimes FPS can be sacrificed to lower costs."),Object(o.b)("p",null,"An example could be an application without animations and instant transitions. In this scenario, a high FPS count might be negligible since the perceived smoothness is hard to spot. This means you can probably cut costs on hardware components."),Object(o.b)("p",null,"But having a pretty and smooth application with a lot of flashy animations can also be a huge selling point depending on the targeted user segment, so as with anything related to hardware selection, it is all about compromises."),Object(o.b)("p",null,"The figures below paint a very generalised picture of the impact of some different parameters. To select the right hardware, these parameters need to be considered."),Object(o.b)(n.a,{imageSource:"/img/Development/HardwareSelection/before-selection-of-hardware/fps-figures.png",caption:"The impact on FPS of different parameters",noShadow:!0,mdxType:"Figure"}))}h.isMDXComponent=!0},227:function(e,t,i){"use strict";i.d(t,"a",(function(){return u})),i.d(t,"b",(function(){return m}));var a=i(0),r=i.n(a);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,r=function(e,t){if(null==e)return{};var i,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):s({},t,{},e)),i},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var i=e.components,a=e.mdxType,o=e.originalType,n=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(i),h=a,b=u["".concat(n,".").concat(h)]||u[h]||d[h]||o;return i?r.a.createElement(b,s({ref:t},c,{components:i})):r.a.createElement(b,s({ref:t},c))}));function m(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=i.length,n=new Array(o);n[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:a,n[1]=s;for(var c=2;c<o;c++)n[c]=i[c];return r.a.createElement.apply(null,n)}return r.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"},228:function(e,t,i){"use strict";var a=i(5),r=i(0),o=i.n(r),n=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props.noShadow||!1,t=this.props.width,i=this.props.height;return e?o.a.createElement("div",{class:"figure noshadow"},o.a.createElement("a",{href:this.props.imageSource,target:"_blank"},o.a.createElement("img",{width:t,height:i,src:this.props.imageSource})),o.a.createElement("p",null,this.props.caption)):o.a.createElement("div",{class:"figure"},o.a.createElement("a",{href:this.props.imageSource,target:"_blank"},o.a.createElement("img",{width:t,height:i,src:this.props.imageSource})),o.a.createElement("p",null,this.props.caption))},t}(r.Component);t.a=n}}]);