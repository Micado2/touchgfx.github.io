(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{170:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(261)),o=n(262),l=n(272),c=n(273),b={id:"04-enable-external-ram",title:"4. External RAM",sidebar_label:"4. External RAM"},s={id:"development/board-bring-up/how-to/04-enable-external-ram",title:"4. External RAM",description:"import Figure from '@site/components/Figure';",source:"@site/docs\\development\\board-bring-up\\how-to\\04-enable-external-ram.mdx",permalink:"/docs/development/board-bring-up/how-to/04-enable-external-ram",sidebar_label:"4. External RAM",sidebar:"docs",previous:{title:"3. Framebuffer in internal RAM",permalink:"/docs/development/board-bring-up/how-to/03-display-internal"},next:{title:"5. Framebuffer in external RAM",permalink:"/docs/development/board-bring-up/how-to/05-display-external"}},d=[{value:"Motivation",id:"motivation",children:[]},{value:"Goal",id:"goal",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Do",id:"do",children:[{value:"Further configuration",id:"further-configuration",children:[]},{value:"Testing the RAM",id:"testing-the-ram",children:[]}]},{value:"Verification",id:"verification",children:[]}],m={rightToc:d},u="wrapper";function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)(u,Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"motivation"},"Motivation"),Object(i.b)("p",null,"In this step we will enable the external SDRAM. External RAM is often\nrequired in graphical applications as the framebuffer is too big\nto fit into the internal RAM in many resolutions. Some applications use two or three\nframebuffers, making external RAM even more a necessity."),Object(i.b)(l.a,{mdxType:"Note"},"Skip this step if external RAM is not relevant for your board bring up."),Object(i.b)("p",null,"When the framebuffer is to be placed in external RAM it is important\nthat we ensure that the external RAM"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Can be read and written."),Object(i.b)("li",{parentName:"ul"},"Runs at desired (typically maximum) speed.")),Object(i.b)("h2",{id:"goal"},"Goal"),Object(i.b)("p",null,"The goal in this section is to enable the external RAM and read and\nwrite data from it."),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"The following are the prerequisites for this step:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Information about the RAM, typically a datasheet"),Object(i.b)("li",{parentName:"ul"},"Information about the connections between the mcu and the external RAM")),Object(i.b)("h2",{id:"do"},"Do"),Object(i.b)("p",null,"The external SDRAM controller is configured in CubeMX under Connectivity -> FMC -> SDRAM1:"),Object(i.b)(o.a,{imageSource:"/img/development/board-bring-up/external-ram/cubemx-01.png",caption:"Configuring SDRAM",noShadow:!1,width:"600",mdxType:"Figure"}),Object(i.b)("p",null,'The AHB clock (HCLK) is reference clock for the FMC memory\ncontroller. Check the clock frequency under "Clock Configuration" and\nuse that to calculate the various SDRAM clock cycles.'),Object(i.b)("p",null,"Remember to configure all the GPIOs used for the SDRAM:"),Object(i.b)(o.a,{imageSource:"/img/development/board-bring-up/external-ram/cubemx-02.png",caption:"Configuring SDRAM GPIO",noShadow:!1,width:"600",mdxType:"Figure"}),Object(i.b)("h3",{id:"further-configuration"},"Further configuration"),Object(i.b)("p",null,"For some RAM chips it is necessary to do additional device specific\nconfiguration. This cannot be configured in CubeMX, but must be done\nin the C code. The Cube HAL contains functions to send commands to the\ndevice. Here is an example:"),Object(i.b)(c.a,{mdxType:"CodeHeader"},"main.c"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"FMC_SDRAM_CommandTypeDef Command;\n\n/* Step 1: Configure a clock configuration enable command */\nCommand.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;\nCommand.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;\nCommand.AutoRefreshNumber      = 1;\nCommand.ModeRegisterDefinition = 0;\n\n/* Send the command */\nHAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);\n")),Object(i.b)("h3",{id:"testing-the-ram"},"Testing the RAM"),Object(i.b)("p",null,"After configuring the external RAM it is important to test it. We\nshould test at least the following:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"RAM is visible in the debugger"),Object(i.b)("li",{parentName:"ul"},"RAM is readable and writeable in the whole range"),Object(i.b)("li",{parentName:"ul"},"Performance is as expected")),Object(i.b)("p",null,"The memory controller uses a fixed address mapping of external\nmemories based on their type. Check the datasheet for your\nmicrocontroller for the addresses. SDRAM is typically mapped to\n0xC0000000 (bank1) or 0xD0000000 (bank2)."),Object(i.b)("h4",{id:"test-ram-is-visible-in-the-debugger"},"Test RAM is visible in the debugger."),Object(i.b)("p",null,"The first test when the RAM is enabled is to access it from the\ndebugger. This will easily show if you can read and write to the\nmemory. Just open a memory viewer on the address:"),Object(i.b)(o.a,{imageSource:"/img/development/board-bring-up/external-ram/iar-01.png",caption:"Testing memory in Bank2 at 0xD0000000 in the debugger",noShadow:!1,width:"600",mdxType:"Figure"}),Object(i.b)("h4",{id:"ram-is-readable-and-writeable-in-the-whole-range"},"RAM is readable and writeable in the whole range"),Object(i.b)("p",null,"The next test is to write small programs to write more data to the\nexternal memory. Preferably test the whole memory. Here is a starting\npoint:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"uint32_t *externalRAM = 0xC000000;\nconst uint32_t size = 1000;\n\n//write external RAM\nfor(int i = 0; i < size; i++)\n{\n    externalRAM[i] = i;\n}\n")),Object(i.b)("p",null,"Now check the memory again in the debugger. This can reveal some types\nof error. For example if some of the address pins are not connected or\nexchanged. This will show up. You should also try with different value\npatterns. Writing low numbers like 0, 1, 2, 3, will not reveal if some\nof the data pins are bad."),Object(i.b)("p",null,"We can also read the memory with a little program:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),'uint32_t *externalRAM = 0xC000000;\nconst uint32_t size = 1000;\n\n//read external RAM\nfor(int i = 0; i < size; i++)\n{\n    ASSERT(externalRAM[i] == i, "external RAM not as expected");\n}\n')),Object(i.b)("p",null,"Remember that a test like this will not tell if the addresses are\nincorrect."),Object(i.b)("p",null,"Test all memory cells. Either by running a longer loop, or by changing\nthe starting address."),Object(i.b)("h4",{id:"performance-is-as-expected"},"Performance is as expected"),Object(i.b)("p",null,"We need now to test the performance of the external RAM. The\nperformance is important when the framebuffer is in external memory. A\nslow memory will degrade the graphics performance of your system."),Object(i.b)("p",null,"Test the speed of reading, writing, and modifying the ram. Typically\ngraphics application copies a lot of data from one memory to\nanother. There will be a lot of writing to the framebuffer during draw\noperations, and a lot of reading when transmitting to the display. We\ncan mimic that in our test programs:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"volatile uint32_t *externalRAM = 0xC000000;\nuint32_t sourcedata[10000];\nconst uint32_t size = 10000;\n\nint begin = HAL_GetTick();\n//write external RAM\nfor(int i = 0; i < size; i++)\n{\n    externalRAM[i] = sourcedata[i];\n}\nint end = HAL_GetTick();\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"int begin = HAL_GetTick();\n//Read external RAM\nfor(int i = 0; i < size; i++)\n{\n    sourcedata[i] = externalRAM[i];\n}\nint end = HAL_GetTick();\n")),Object(i.b)("p",null,"Graphics software reads and writes data in the framebuffer when\ne.g. blending an image on a background."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"//Time modifying external RAM\nint begin = HAL_GetTick();\nfor(int i = 0; i < size; i++)\n{\n    externalRAM[i] += 2;\n}\nint end = HAL_GetTick();\n")),Object(i.b)("p",null,"Depending on your memory speed and the accuracy you would like, you may\nlike to loop the tests, say 100 times, to make the results more reliable."),Object(i.b)("p",null,"If the external RAM is clocked too fast it can result in incorrect\nvalues during read or write operations. This can be difficult to see\nwith these simpler tests, but will be visible on the display."),Object(i.b)("h2",{id:"verification"},"Verification"),Object(i.b)("p",null,"Here are the verification points for this section:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Verification Point"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Rationale"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"External RAM is readable"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"External RAM can be used for framebuffer location")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"External RAM writable"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"External RAM can be used for framebuffer location")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"External RAM Performance"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Graphics performance is acceptable with framebuffer in external RAM")))))}p.isMDXComponent=!0},272:function(e,t,n){"use strict";var a=n(5),r=n(0),i=n.n(r),o=n(265),l=i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},i.a.createElement("path",{"fill-rule":"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})),c=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return i.a.createElement(o.a,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:l},this.props.children)},t}(r.Component);t.a=c}}]);