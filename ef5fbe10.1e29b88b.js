(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{483:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return d}));var i=a(1),n=a(9),c=(a(0),a(508)),r=(a(511),a(525),a(515),a(524),a(514),a(516),a(510),a(513)),o={id:"dynamic-bitmaps",title:"Dynamic Bitmaps"},p={id:"development/ui-development/touchgfx-engine-features/dynamic-bitmaps",title:"Dynamic Bitmaps",description:"This section explains how to use Dynamic Bitmaps. Recall that standard\r",source:"@site/docs\\development\\ui-development\\touchgfx-engine-features\\dynamic-bitmaps.mdx",permalink:"/docs/development/ui-development/touchgfx-engine-features/dynamic-bitmaps",sidebar:"docs",previous:{title:"Canvas Widgets",permalink:"/docs/development/ui-development/touchgfx-engine-features/canvas-widgets"},next:{title:"Binary Fonts",permalink:"/docs/development/ui-development/touchgfx-engine-features/using-binary-fonts"}},s=[{value:"Dynamic Bitmap Configuration",id:"dynamic-bitmap-configuration",children:[]},{value:"Using a Dynamic Bitmap Example",id:"using-a-dynamic-bitmap-example",children:[]},{value:"Dynamic Bitmap Operations",id:"dynamic-bitmap-operations",children:[{value:"Creating a Dynamic Bitmap",id:"creating-a-dynamic-bitmap",children:[]},{value:"Deleting a Dynamic Bitmap",id:"deleting-a-dynamic-bitmap",children:[]},{value:"Get the address of the pixels in a Dynamic Bitmap",id:"get-the-address-of-the-pixels-in-a-dynamic-bitmap",children:[]},{value:"Set the solid area of a Dynamic Bitmap",id:"set-the-solid-area-of-a-dynamic-bitmap",children:[]}]}],m={rightToc:s},l="wrapper";function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)(l,Object(i.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This section explains how to use Dynamic Bitmaps. Recall that standard\nbitmaps are compiled into the application and therefore must be\navailable at compile time. The bitmaps are converted from e.g. PNG\nfiles and stored in an internal format together with size and format\ninformation."),Object(c.b)("p",null,"It is also possible to create a bitmap in RAM at runtime. This is\ncalled a ",Object(c.b)("em",{parentName:"p"},"dynamic bitmap"),". A dynamic bitmap can be used just as the\nstatic bitmaps that are compiled into the application. This means that\nyou can use a dynamic bitmap with e.g. the Image and Button widgets."),Object(c.b)("h2",{id:"dynamic-bitmap-configuration"},"Dynamic Bitmap Configuration"),Object(c.b)("p",null,"When you create a dynamic bitmap the RAM for the pixels is allocated from\nthe bitmap cache. You must therefore configure a bitmap cache before\nyou can create dynamic bitmaps."),Object(c.b)("p",null,"See the article on ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/development/ui-development/touchgfx-engine-features/caching-bitmaps"}),"bitmap caching"),"\nfor configuration instructions."),Object(c.b)("p",null,"It is required to define the maximum number of Dynamic Bitmaps used in\nyour application. This maximum is passed to TouchGFX together with the\nbitmap cache address and size. Here we configure a bitmap cache with\nup to 4 dynamic bitmaps:"),Object(c.b)(r.a,{mdxType:"CodeHeader"},"BoardConfiguration.cpp (extract)"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp",metastring:"{4-4}","{4-4}":!0}),"// Place cache start address in SDRAM at address 0xC0008000;\nuint16_t* cacheStartAddr = (uint16_t*)0xC0008000;\nuint32_t cacheSize = 0x300000; //3 MB, as example\nHAL& hal = touchgfx_generic_init<STM32F4HAL>(dma, display, tc, DISPLAY_WIDTH, DISPLAY_HEIGHT, cacheStartAddr, cacheSize, 4);\n")),Object(c.b)("h2",{id:"using-a-dynamic-bitmap-example"},"Using a Dynamic Bitmap Example"),Object(c.b)("p",null,"To use the dynamic bitmap we need a widget to show it. So insert an\nImage widget in the view (in code or in the Designer):"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp",metastring:"{4-4}","{4-4}":!0}),"class TemplateView : public View\n{\nprivate:\n    Image image;\n}\n")),Object(c.b)("p",null,"Create the dynamic bitmap in setupScreen. Here we use the 16bpp format\nRGB565. If your framebuffer is e.g 24 bit use RGB888. To create a\ntransparent bitmap, use the format ARGB8888:"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp",metastring:"{5-6}","{5-6}":!0}),"void TemplateView::setupScreen()\n{\n    BitmapId bmpId;\n\n    //Create (16bit) dynamic bitmap of size 100x150\n    const int width = 100;\n    const int height = 150;\n    bmpId = Bitmap::dynamicBitmapCreate(100, 150, Bitmap::RGB565);\n\n    //set all pixels white\n    if (bmpId != BITMAP_INVALID)\n    {\n       memset(Bitmap::dynamicBitmapGetAddress(bmpId), 0xFF, width*height*2);\n    }\n\n    //Make Image widget show the dynamic bitmap\n    image.setBitmap(Bitmap(bmpId));\n\n    //Position image and add to View\n    image.setXY(20, 20);\n    add(image);\n    ...\n}\n")),Object(c.b)("p",null,"If you want to load your image from a file you can replace the call to memset with your loader code. See the article ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/development/ui-development/scenarios/loading-images-at-runtime"}),"Loading Images At Runtime")),Object(c.b)("h2",{id:"dynamic-bitmap-operations"},"Dynamic Bitmap Operations"),Object(c.b)("p",null,"The dynamic bitmap operations are all placed in the Bitmap class."),Object(c.b)("h3",{id:"creating-a-dynamic-bitmap"},"Creating a Dynamic Bitmap"),Object(c.b)("p",null,"The following method creates a dynamic bitmap with the width, height\nand bitmap format specified. The bitmap is only created if enough\nunused memory is available. The method returns BITMAP_INVALID if the\nbitmap was not created."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"static BitmapId Bitmap::dynamicBitmapCreate(const uint16_t width, const uint16_t height, BitmapFormat format)\n")),Object(c.b)("h3",{id:"deleting-a-dynamic-bitmap"},"Deleting a Dynamic Bitmap"),Object(c.b)("p",null,"This method deletes a dynamic bitmap."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"static bool Bitmap::dynamicBitmapDelete(BitmapId id)\n")),Object(c.b)("h3",{id:"get-the-address-of-the-pixels-in-a-dynamic-bitmap"},"Get the address of the pixels in a Dynamic Bitmap"),Object(c.b)("p",null,"The following method returns the address of the dynamic bitmap. This\nmethod is used by file loaders to copy image data into the bitmap."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"static uint8_t* dynamicBitmapGetAddress(BitmapId id)\n")),Object(c.b)("h3",{id:"set-the-solid-area-of-a-dynamic-bitmap"},"Set the solid area of a Dynamic Bitmap"),Object(c.b)("p",null,"The following method sets the solid rectangle of a dynamic bitmap."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-cpp"}),"static bool dynamicBitmapSetSolidRect(BitmapId id, const Rect& solidRect)\n")),Object(c.b)("p",null,'Read more about the "solid area" concept in the ',Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/development/ui-development/touchgfx-engine-features/custom-widgets#solid-area"}),"Custom Widgets"),"\narticle."),Object(c.b)("p",null,"By default the solid area is set to be the whole bitmap for\nnon-transparent formats like RGB565 and RGB888.\nIt is set to empty for transparent formats like ARGB8888."))}d.isMDXComponent=!0},509:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e="highlight highlight-"+this.props.type;return(c.a.createElement("div",{class:e},c.a.createElement("div",{class:"highlight-heading"},c.a.createElement("h5",null,c.a.createElement("div",{class:"highlight-icon"},this.props.icon),this.props.header)),c.a.createElement("div",{class:"highlight-content"},this.props.children)))},t}(n.Component);t.a=r},511:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props.noShadow||!1,t=this.props.width,a=this.props.height;return e?c.a.createElement("div",{class:"figure noshadow"},c.a.createElement("a",{href:this.props.imageSource,target:"_blank"},c.a.createElement("img",{width:t,height:a,src:this.props.imageSource})),c.a.createElement("p",null,this.props.caption)):c.a.createElement("div",{class:"figure"},c.a.createElement("a",{href:this.props.imageSource,target:"_blank"},c.a.createElement("img",{width:t,height:a,src:this.props.imageSource})),c.a.createElement("p",null,this.props.caption))},t}(n.Component);t.a=r},513:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement("div",{class:"code-header"},c.a.createElement("div",null,c.a.createElement("h5",null,this.props.children)))},t}(n.Component);t.a=r},514:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=a(509),o=c.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},c.a.createElement("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement(r.a,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:o},this.props.children)},t}(n.Component);t.a=p},515:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=a(509),o=c.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},c.a.createElement("path",{"fill-rule":"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement(r.a,{color:"var(--highlight-color-tip)",header:"Tip",type:"tip",icon:o},this.props.children)},t}(n.Component);t.a=p},516:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement("code",null,this.props.text)},t}(n.Component);t.a=r},524:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=a(509),o=c.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},c.a.createElement("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement(r.a,{color:"var(--highlight-color-try)",header:"Things to try",type:"try",icon:o},this.props.children)},t}(n.Component);t.a=p},525:function(e,t,a){"use strict";var i=a(5),n=a(0),c=a.n(n),r=a(509),o=c.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},c.a.createElement("path",{"fill-rule":"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return c.a.createElement(r.a,{color:"var(--highlight-color-caution)",header:"Caution",type:"caution",icon:o},this.props.children)},t}(n.Component);t.a=p}}]);