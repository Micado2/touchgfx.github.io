(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{177:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return b}));var r=a(1),n=a(9),o=(a(0),a(237)),i=a(240),c=a(248),l=a(242),s={id:"hardware-selection-mcu",title:"MCU"},d={id:"Development/HardwareSelection/HardwareComponents/hardware-selection-mcu",title:"MCU",description:"import Figure from '@site/components/Figure';\r",source:"@site/docs\\Development\\HardwareSelection\\HardwareComponents\\mcu.mdx",permalink:"/docs/Development/HardwareSelection/HardwareComponents/hardware-selection-mcu",sidebar:"docs",previous:{title:"Before Selection of Hardware",permalink:"/docs/Development/HardwareSelection/before-selection-of-hardware"},next:{title:"Display",permalink:"/docs/Development/HardwareSelection/HardwareComponents/hardware-selection-display"}},p=[{value:"Cortex\xae-M Cores",id:"cortex-m-cores",children:[]},{value:"Frequency",id:"frequency",children:[]},{value:"Embedded Hardware Acceleration Features",id:"embedded-hardware-acceleration-features",children:[{value:"Chrom-ART (DMA2D)",id:"chrom-art-dma2d",children:[]},{value:"JPEG Hardware codec",id:"jpeg-hardware-codec",children:[]},{value:"Chrom-GRC (GFXMMU)",id:"chrom-grc-gfxmmu",children:[]}]},{value:"Internal Flash",id:"internal-flash",children:[]},{value:"Internal RAM",id:"internal-ram",children:[]},{value:"LCD Controller",id:"lcd-controller",children:[]},{value:"Packages &amp; I/O",id:"packages--io",children:[]},{value:"Memory Interfacing",id:"memory-interfacing",children:[]},{value:"Price",id:"price",children:[]},{value:"Bus Architecture",id:"bus-architecture",children:[]}],h={rightToc:p},m="wrapper";function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)(m,Object(r.a)({},h,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Microcontroller Unit (MCU) is at the core of any embedded solution and there are a wide variety of options in both costs and features. This page will go through the different variance points of the MCU and what parameters should be considered when deciding on which STM32 MCU you should select for your individual GUI driven application."),Object(o.b)("p",null,"The performance of a graphic applications depends on several points:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The used core"),Object(o.b)("li",{parentName:"ul"},"The system frequency"),Object(o.b)("li",{parentName:"ul"},"The availability of graphics accelerators integrated in the MCU"),Object(o.b)("li",{parentName:"ul"},"The size of the RAM allocated to the application"),Object(o.b)("li",{parentName:"ul"},"The size of the flash memory."),Object(o.b)("li",{parentName:"ul"},"the execution of the application from an internal or external memory"),Object(o.b)("li",{parentName:"ul"},"The availability of a Cache memory in the system.")),Object(o.b)(i.a,{imageSource:"/img/Development/HardwareSelection/mcu/en_stm32_graphic.png",caption:"STM32 MCU",noShadow:!0,width:"600",mdxType:"Figure"}),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"For a more complete overview of all product lines, peripherals, prices etc., ",Object(o.b)(l.a,{to:"https://www.st.com/en/development-tools/st-mcu-finder.html",mdxType:"Link"},"the ST MCU Finder is available here"),".")),Object(o.b)("h2",{id:"cortex-m-cores"},"Cortex\xae-M Cores"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"}," Cortex\xae-M0+ ")," is characterized by the simple architecture and low price of STM32 products using ",Object(o.b)("strong",{parentName:"p"}," Cortex\xae-M0+ "),".\nThe Cortex-M0+ highly recommended for the low power applications, static graphic applications and using fewer resources and an acceptable resolution quality (QVGA)"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"}," Cortex\xae-M4 ")," contains more functionalities than that of the ",Object(o.b)("strong",{parentName:"p"}," M0+ ")," and mainly acceleration of calculation.\n",Object(o.b)("strong",{parentName:"p"}," Cortex\xae-M4 ")," has a DSP instructions set and has a single precision FPU unit\nThese instruction sets rid the CPU of enormous software computation and increase the speed of calculates thus the possibility of targetting a screen with a higher resolution and a sharper image quality."),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"}," Cortex\xae-M7 "),", certainly with a more complex architecture but in addition to a DSP instruction set, comes with a more efficient FPU unit with double precision and a level1 cache memory up to ",Object(o.b)("strong",{parentName:"p"}," 16KB ")," for data and instruction.\nThe cache memory gives the possibility of having data and instructions close to the calculation unit in order to optimize the fetch time."),Object(o.b)(i.a,{imageSource:"/img/Development/HardwareSelection/mcu/CortexM_Features.png",caption:"Cortex-M cores comparaison",noShadow:!0,width:"700",mdxType:"Figure"}),Object(o.b)("h4",{id:"level-1-cache"},"Level 1 Cache:"),Object(o.b)("p",null,"The STM32H7 and STM32F7 families include up to ",Object(o.b)("strong",{parentName:"p"}," 16 Kbytes ")," of L1-Cache both for instructions and data.\nAn L1-Cache stores a set of data or instruction near to the CPU, so the CPU does not have to keep feetching the same data that is repeatedly used."),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"Refer to AN4839 application note for more information:, ",Object(o.b)(l.a,{to:"https://www.st.com/content/ccc/resource/technical/document/application_note/group0/08/dd/25/9c/4d/83/43/12/DM00272913/files/DM00272913.pdf/jcr:content/translations/en.DM00272913.pdf",mdxType:"Link"},"Level 1 Cache"),".")),Object(o.b)("h4",{id:"dual-core"},"dual core"),Object(o.b)("p",null,"The STM32H7 series includes dual-core line:\nArm\xae Cortex\xae-M7 and Cortex\xae-M4 cores can respectively run up to 480 MHz and 240 MHz enabling more processing and application partitioning. Dual-core STM32H7 product lines are available with an embedded SMPS for improved dynamic power efficiency"),Object(o.b)("p",null,"The second Cortex\xae-M4 can offload a heavy calculation to allow the M7 core for the drawing/graphic operations."),Object(o.b)("h2",{id:"frequency"},"Frequency"),Object(o.b)("p",null,"The system frequency has a major impact on the final result of a graphical application in terms of screen refresh,fluidity of screens and animations.\nIn fact, the system frequency impacts the number of data that will be transferred from an internal or external memory to the LCD framebuffer.\nThe higher the system frequency, the greater the number of data to be transferred. Also, having higher system frecency, complex algorithms and calculation can be targeted."),Object(o.b)("p",null,"Having a graphical application with a smooth transition between frames, sliding and a smooth animation requires an MCU with a higher system frequency"),Object(o.b)("p",null,"The system frequency of the STM32 product is up to ",Object(o.b)("strong",{parentName:"p"}," 480MHz "),"  "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"}," Example of CPU Cycle calculation using with STM32H7 product ")),Object(o.b)("p",null,"CPU Cycle = 1/SystemClock = 1/480MHz= ",Object(o.b)("strong",{parentName:"p"}," ~0.02\u03bcs ")),Object(o.b)("p",null,"==> Impact of the higher frequency on power consumption ???"),Object(o.b)("h2",{id:"embedded-hardware-acceleration-features"},"Embedded Hardware Acceleration Features"),Object(o.b)("h3",{id:"chrom-art-dma2d"},"Chrom-ART (DMA2D)"),Object(o.b)("p",null,"The chrom-ART accelerator integrated in many STM32 platforms is able to manipulate and transfer images without CPU load.\nColor filling or images copying operations, blending and/or pixel format convertion, the chrom-ART have tha capability to accelerate the majority of the graphic operations."),Object(o.b)("p",null,"In addition, the capability to convert from ",Object(o.b)("strong",{parentName:"p"}," YCbCr ")," format to ",Object(o.b)("strong",{parentName:"p"}," RGB ")," format is added with STM32H7 products to the chrom-ART peripheral.\nThis feature, combined with the jpeg hardware codec can totaly offload the CPU for the encode and decode jpeg images.   "),Object(o.b)("p",null,"The Chrom-ART peripheral is available with high perfomance STM32 families. "),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"Refer to AN4943 application note for more information:, ",Object(o.b)(l.a,{to:"https://www.st.com/content/ccc/resource/technical/document/application_note/group0/17/82/73/f8/b8/8a/47/c7/DM00338361/files/DM00338361.pdf/jcr:content/translations/en.DM00338361.pdf",mdxType:"Link"},"Chrom-ART Hardware acceleration"),".")),Object(o.b)("h3",{id:"jpeg-hardware-codec"},"JPEG Hardware codec"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"}," STM32H7 ")," and ",Object(o.b)("strong",{parentName:"p"}," STM32F7 ")," families provides a hardware jpeg codec peripheral to perform JPEG encode and decode operations.\nThis feature can be important if the UI application need to parse a video files (.AVI) to redirect the image decoding to tha hardware codec.\nAlso, the images can be stored in Jpeg format and decoded in runtime to save flash memory."),Object(o.b)(i.a,{imageSource:"/img/Development/HardwareSelection/mcu/JPEG_Codec_acceleration.png",caption:"Hardware JPEG codec performance",noShadow:!0,width:"500",mdxType:"Figure"}),Object(o.b)("p",null,"Thanks to the new fonctionality added in the chrom-ART peripheral embedded in STM32H7 products, the convertion of the YCbCr to RGB pixel format is done by hardware and allow to reduce conciderabely the CPU load."),Object(o.b)(i.a,{imageSource:"/img/Development/HardwareSelection/mcu/Chrom-ART_acceleration.png",caption:"Hardware JPEG codec performance",noShadow:!0,width:"500",mdxType:"Figure"}),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"Refer to AN4996 application note for more information:, ",Object(o.b)(l.a,{to:"https://www.st.com/content/ccc/resource/technical/document/application_note/group0/a5/9d/22/46/61/6d/4a/ab/DM00356635/files/DM00356635.pdf/jcr:content/translations/en.DM00356635.pdf",mdxType:"Link"},"Hardware JPEG codec"),".")),Object(o.b)("h3",{id:"chrom-grc-gfxmmu"},"Chrom-GRC (GFXMMU)"),Object(o.b)("p",null,"If the chosen LCD will be a rounded one, it's recommanded to choose an STM32 product providing Chrom-GRC peripheral to optimse the memory allocated to the framebuffers.\nThe Chrom-GRC reduce the memory requirement for the framebuffers by ",Object(o.b)("strong",{parentName:"p"}," 20% "),"."),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"Refer to AN5051 application note for more information:, ",Object(o.b)(l.a,{to:"https://www.st.com/content/ccc/resource/technical/document/application_note/group0/74/21/86/42/af/d5/4f/58/DM00407777/files/DM00407777.pdf/jcr:content/translations/en.DM00407777.pdf",mdxType:"Link"},"Graphic memory optimization"),".")),Object(o.b)("h2",{id:"internal-flash"},"Internal Flash"),Object(o.b)("p",null,"Enabling the graphic and using different resources to design the UI need to allocate a constante memory to store these data.\nThe size of the internal flash is very importante for the graphic application since the user choose to use only the internal flash and not an extanded external flash.\nThe access to the internal flash is up to two times of performance compared to the access to the external flash."),Object(o.b)("p",null,"The portofolio of STM32 products used for graphic aaplications is between ",Object(o.b)("strong",{parentName:"p"}," 32Kbytes ")," and ",Object(o.b)("strong",{parentName:"p"}," 2Mbytes ")," of internal flash memory "),Object(o.b)("h2",{id:"internal-ram"},"Internal RAM"),Object(o.b)("p",null,"The size of the internal RAM "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The memory needed for TouchGFX library. (TouchGFX requires between 10 and 30Kbytes)"),Object(o.b)("li",{parentName:"ul"},"The memory needed for the LCD framebuffers.")),Object(o.b)("p",null,"Depending on the chosen LCD interface, the LCD framebuffers can be placed in the RAM memory.\nWith DPI or DSI interfaces, we can calculate the RAM memory needed for the LCD framebuffer."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Color Depth : 16bits"),Object(o.b)("li",{parentName:"ul"},"Resolution  : 480x272")),Object(o.b)("p",null,"Size of 1 LCD framebuffer = ",Object(o.b)("strong",{parentName:"p"}," 480x272x2 ")," =  ",Object(o.b)("strong",{parentName:"p"}," 261.120 bytes ")," "),Object(o.b)("p",null,"The portofolio of STM32 products used for graphic aaplications is between ",Object(o.b)("strong",{parentName:"p"}," 36Kbytes ")," and ",Object(o.b)("strong",{parentName:"p"}," 640Kbytes ")," of internal RAM memory "),Object(o.b)("h2",{id:"lcd-controller"},"LCD Controller"),Object(o.b)("p",null,"The choice of the MCU also depends on the choice of the display interface that will be used and the resolution.\nThe 800x480 Resolution for example can only be achieved with an efficient interface in terms of data transfer speed.\nThis requires a parallel interface that directly targets the LCD framebuffer.\nAnd to further increase of the data transfer speed and minimize the number of used pins, the Display Serial Interface (DSI) interface is recommended for this type of use."),Object(o.b)(i.a,{imageSource:"/img/Development/HardwareSelection/mcu/Interfaces.png",caption:"Display Interfaces",noShadow:!0,width:"600",mdxType:"Figure"}),Object(o.b)("h2",{id:"packages--io"},"Packages & I/O"),Object(o.b)("p",null,"The number of the I/O avialble in the chosen product/package is important knowing the needed LCD controller for user application.\nWith LTDC controller, DSI or SPI."),Object(o.b)("p",null,"Refer to ",Object(o.b)("strong",{parentName:"p"}," Display ")," section for more information about the number of needed pins for each display interface."),Object(o.b)("h2",{id:"memory-interfacing"},"Memory Interfacing"),Object(o.b)("p",null,"The graphic resources in the most of cases are stored in an the external flash and the LCD framebuffer in the external RAM.\nThe STM32 products provide the flexible memory controller peripheral to interface with the SRAM, SDRAM, NOR and PSRAM memories. "),Object(o.b)("h4",{id:"flexible-memory-controller-fmc"},"Flexible Memory Controller (FMC)"),Object(o.b)("p",null,"The flexibale memory controller (FMC) has an external access speed up to ",Object(o.b)("strong",{parentName:"p"}," 100MHz "),"\nWith independent chip select for eaxh memory bank, using the FMC can control an external flash memory for the constant data and external RAM memory for the LCD framebuffer or heap extention for the graphical stack."),Object(o.b)("h4",{id:"serial-memory-interface"},"Serial memory interface"),Object(o.b)("p",null,"Depending on the STM32 product, Serial memory interface is embedded and allowing interfacing with single, double, quad, Octo, hyperBus flash memories.\nThe Serial memory interface running up to ",Object(o.b)("strong",{parentName:"p"}," 133MHz ")," and up to ",Object(o.b)("strong",{parentName:"p"}," 256Mbytes ")," as adressable space for the memory mapped mode and ",Object(o.b)("strong",{parentName:"p"}," 4Gbytes ")," for indirect mode."),Object(o.b)("p",null,"Compared to parallel interfaces, the serial memory interface permits the connection of a lower cost externa flash memory to small packages and rudcing the number of used pins since maximum only 12 pins are used."),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"Refer to AN4760 application note for more information:, ",Object(o.b)(l.a,{to:"https://www.st.com/content/ccc/resource/technical/document/application_note/group0/b0/7e/46/a8/5e/c1/48/01/DM00227538/files/DM00227538.pdf/jcr:content/translations/en.DM00227538.pdf",mdxType:"Link"},"Quad-SPI interface on STM32 microcontrollers"),".")),Object(o.b)("h4",{id:"stm32-value-lines-products"},"STM32 Value lines products"),Object(o.b)("p",null,"For prices optimisation, STM32H7 and STM32F7 platforms provides value line products with limited internal flash size.\nWith these products, the graphic resources will be stored in the external falsh. and a memory extansion need to be taken into acount for the graphical applications."),Object(o.b)("h2",{id:"price"},"Price"),Object(o.b)("p",null,"The size of the internal flash, Internal RAM, and number of pins avalaible in the package are concidered in the price of the MCU.\nDepending on the needs in term of interface, resolution, performance, the user can estimate and optimize the needed MCU."),Object(o.b)("h2",{id:"bus-architecture"},"Bus Architecture"),Object(o.b)(c.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,"See ",Object(o.b)(l.a,{to:"https://www.st.com/en/microcontrollers-microprocessors/stm32-32-bit-arm-cortex-mcus.html",mdxType:"Link"},"STM32 32-bit Arm Cortex MCUs")," for available STM32 microcontrollers.")))}b.isMDXComponent=!0}}]);