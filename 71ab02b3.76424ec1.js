(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{155:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return u}));var r=t(1),i=t(9),a=(t(0),t(215)),c={id:"Rendering",title:"Rendering"},o={id:"BasicConcepts/Rendering",title:"Rendering",description:"## TouchGFX main loop",source:"@site/docs\\BasicConcepts\\Rendering.mdx",permalink:"/docs/BasicConcepts/Rendering",sidebar:"docs",previous:{title:"Memory Usage",permalink:"/docs/BasicConcepts/MemoryUsage"},next:{title:"Alpha Blending",permalink:"/docs/BasicConcepts/AlphaBlending"}},l=[{value:"TouchGFX main loop",id:"touchgfx-main-loop",children:[{value:"Wait",id:"wait",children:[]},{value:"Update",id:"update",children:[]},{value:"Render",id:"render",children:[]}]},{value:"Indirect representation / graph",id:"indirect-representation--graph",children:[]},{value:"Two phase rendering",id:"two-phase-rendering",children:[]},{value:"Update",id:"update-1",children:[]},{value:"Racing the beam",id:"racing-the-beam",children:[]},{value:"Number of pixels...",id:"number-of-pixels",children:[]},{value:"STM32 microcontrollers",id:"stm32-microcontrollers",children:[]},{value:"Rendering cycle",id:"rendering-cycle",children:[]}],d={rightToc:l},p="wrapper";function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)(p,Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"touchgfx-main-loop"},"TouchGFX main loop"),Object(a.b)("p",null,"In pseudo code the main loop inside TouchGFX looks like"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp"}),"while(true) {\n    wait();\n    update();\n    render();\n}\n")),Object(a.b)("p",null,"The code is much more involved in the real implementation, but the pseudo code above helps in understanding the main parts of the engine."),Object(a.b)("h3",{id:"wait"},"Wait"),Object(a.b)("p",null,"TouchGFX will wait until it is required to draw a frame."),Object(a.b)("p",null,"The waiting is over when TouchGFX is informed from the outside world that it should proceed.\nTypically this information comes in the form of a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"synchronization interrupt from MCU or display"),Object(a.b)("li",{parentName:"ul"},"hardware timer interrupt")),Object(a.b)("h3",{id:"update"},"Update"),Object(a.b)("p",null,"TouchGFX samples and propagates events to the current\nTouchGFX collects events from the system.\nThe events are tick, click, drag, gesture, "),Object(a.b)("p",null,"updates the\nmodel.tick"),Object(a.b)("p",null,"All these events are handled by "),Object(a.b)("p",null,"invalidate"),Object(a.b)("h3",{id:"render"},"Render"),Object(a.b)("p",null,"At this moment a list of invalidated areas"),Object(a.b)("h2",{id:"indirect-representation--graph"},"Indirect representation / graph"),Object(a.b)("h2",{id:"two-phase-rendering"},"Two phase rendering"),Object(a.b)("h2",{id:"update-1"},"Update"),Object(a.b)("p",null,"model.tick()\nhandleTickEvent, handleClickEvent, handle"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"//pseudo code\n\n\nforeach(area in invalidatedAreas) {\n    widgets = find_widgets_in(area);\n    draw(widgets)\n}\n\nfunction draw(widgets)\n")),Object(a.b)("p",null,"for each area that needs to be redrawn.\nfind widgets in area\ndraw(widgets, area);\nconvert invalidated "),Object(a.b)("h2",{id:"racing-the-beam"},"Racing the beam"),Object(a.b)("p",null,"###TODO Write"),Object(a.b)("h2",{id:"number-of-pixels"},"Number of pixels..."),Object(a.b)("h2",{id:"stm32-microcontrollers"},"STM32 microcontrollers"),Object(a.b)("p",null,"Performance.\nPrerender is better than render."),Object(a.b)("h2",{id:"rendering-cycle"},"Rendering cycle"),Object(a.b)("p",null,"wait, events, update, render"),Object(a.b)("p",null,"This means that TouchGFX' primary concerns are"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Updating the contents of the display at 60Hz given the constraints of a STM32 microcontroller"),Object(a.b)("li",{parentName:"ul"},"Finding the right balance between quality and speed"),Object(a.b)("li",{parentName:"ul"},"Utilizing hardware to maximize availability of MCU"),Object(a.b)("li",{parentName:"ul"},"Ensuring that no ")))}u.isMDXComponent=!0},215:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=i.a.createContext({}),p=function(e){var n=i.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},u=function(e){var n=p(e.components);return i.a.createElement(d.Provider,{value:n},e.children)},s="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},h=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),s=r,h=u["".concat(c,".").concat(s)]||u[s]||b[s]||a;return t?i.a.createElement(h,o({ref:n},d,{components:t})):i.a.createElement(h,o({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=h;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[s]="string"==typeof e?e:r,c[1]=o;for(var d=2;d<a;d++)c[d]=t[d];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);