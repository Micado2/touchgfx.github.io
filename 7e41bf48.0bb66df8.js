(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{197:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return h})),a.d(t,"default",(function(){return b}));var n=a(1),o=a(9),i=(a(0),a(261)),r=(a(262),a(272)),l=(a(273),{id:"11-flash-loader",title:"11. Flash Loader",sidebar_label:"11. Flash Loader"}),s={id:"development/board-bring-up/how-to/11-flash-loader",title:"11. Flash Loader",description:"import Figure from '@site/components/Figure';",source:"@site/docs\\development\\board-bring-up\\how-to\\11-flash-loader.mdx",permalink:"/docs/development/board-bring-up/how-to/11-flash-loader",sidebar_label:"11. Flash Loader",sidebar:"docs",previous:{title:"10. Physical Buttons (optional)",permalink:"/docs/development/board-bring-up/how-to/10-physical-buttons"},next:{title:"Introduction",permalink:"/docs/development/touchgfx-hal-development/touchgfx-al-development-Introduction"}},h=[{value:"Motivation",id:"motivation",children:[]},{value:"Goal",id:"goal",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Do",id:"do",children:[{value:"Flash loader for Cube Programmer",id:"flash-loader-for-cube-programmer",children:[]},{value:"Proprietary application-based solution",id:"proprietary-application-based-solution",children:[]},{value:"Testing",id:"testing",children:[]}]},{value:"Verification",id:"verification",children:[]}],c={rightToc:h},d="wrapper";function b(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(i.b)(d,Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"motivation"},"Motivation"),Object(i.b)("p",null,"In this step we will discuss loading data to the external flash. The\ncompiler will compile the text, fonts, and images in your project and\nproduce a binary or hex files with these data. These are typically put\ninto the external flash. The internal flash is then reserved for code."),Object(i.b)("p",null,"During development we need a way to write data to the external flash,\nbut this is not necessary during runtime where we only read from the\nflash."),Object(i.b)("p",null,"Two ways are common:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Write a flashloader for Cube Programmer"),Object(i.b)("li",{parentName:"ul"},"Use a proprietary application-based solution")),Object(i.b)(r.a,{mdxType:"Note"},"Skip this step if external flash is not present"),Object(i.b)("h2",{id:"goal"},"Goal"),Object(i.b)("p",null,"The goal in this section is to provide a mechanism for loading data to\nthe external flash."),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"The following are the prerequisites for this step:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Information about the flash, typically a datasheet"),Object(i.b)("li",{parentName:"ul"},"Information about the connections between the mcu and the external flash")),Object(i.b)("h2",{id:"do"},"Do"),Object(i.b)("h3",{id:"flash-loader-for-cube-programmer"},"Flash loader for Cube Programmer"),Object(i.b)("p",null,"The STM32CubeProgrammer comes with flash loaders for the various STM32\nEvaluation kits. The flash loaders are small programs that are loaded\nto the RAM of the kits and facilitates the programming of the flash."),Object(i.b)("p",null,"The flash loader consists of two parts:\n",Object(i.b)("em",{parentName:"p"},"Configuration of the GPIOs and flash interface that are required to communicate with the flash\n"),"The flashing algorithm that knows the sequence of commands required to write in the flash"),Object(i.b)("p",null,"These parts can often be based on an existing flash loader. If you can\nfind a flash loader for the same flash that you are using, take that\nas starting point and modify the GPIO part. If you design your\nhardware by copying the flash circuit from an evaluation kit, then you\ncan use the flash loader for that kit directly. This is the\nrecommended way."),Object(i.b)("p",null,"The flash loader projects provided with ",Object(i.b)("em",{parentName:"p"},"STMCubeProgrammer")," are found\nin the installation folder, typically here:\n",Object(i.b)("em",{parentName:"p"},"C:\\Program Files\\STMicroelectronics\\STM32Cube\\STM32CubeProgrammer\\bin\\ExternalLoader")),Object(i.b)("p",null,"5 flash loaders are provided as source code projects for IAR Embedded Workbench, Keil, and TrueStudio."),Object(i.b)("h3",{id:"proprietary-application-based-solution"},"Proprietary application-based solution"),Object(i.b)("p",null,"Another solution is to include flash loading into the application itself. The\nidea is that you already have the flash configuration inside your\napplication (to be able to load from it). You then need a way of\ntransferring the new flash data to your application through an\nUART, for instance. The application receives the data stream, and\nwhen a block has been received it is written to the flash."),Object(i.b)("p",null,"The flash cannot be in memory mapped mode while this is running, so\nthe application must typically be in a special mode."),Object(i.b)("p",null,"Open source solutions for the transmission of bytes can be found on\nthe internet. The Y-modem for example provides 16-bit CRC on the data."),Object(i.b)("h3",{id:"testing"},"Testing"),Object(i.b)("p",null,"After the data has been written to the flash, test that it can be read\ncorrectly. Use the small test programs developed in the previous\nsections."),Object(i.b)("p",null,"It is adviced to test the whole flash thoroughly now, to find any bugs\nearly."),Object(i.b)("h2",{id:"verification"},"Verification"),Object(i.b)("p",null,"Here are the verification points for this section:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Verification Point"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Rationale"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Data can be flashed"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"External flash can be used for image storage")))))}b.isMDXComponent=!0},272:function(e,t,a){"use strict";var n=a(5),o=a(0),i=a.n(o),r=a(265),l=i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},i.a.createElement("path",{"fill-rule":"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})),s=function(e){function t(){return e.apply(this,arguments)||this}return Object(n.a)(t,e),t.prototype.render=function(){return i.a.createElement(r.a,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:l},this.props.children)},t}(o.Component);t.a=s}}]);