(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{151:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return g})),n.d(t,"rightToc",(function(){return h})),n.d(t,"default",(function(){return f}));var a=n(1),i=n(9),o=(n(0),n(262)),c=n(263),r=n(268),l=n(269),b=n(275),p=n(276),d=n(264),s=n(271),m=n(274),u={id:"analog-clock",title:"AnalogClock"},g={id:"development/ui-development/ui-components/miscellaneous/analog-clock",title:"AnalogClock",description:"import Figure from '@site/components/Figure'\r",source:"@site/docs\\development\\ui-development\\ui-components\\miscellaneous\\analog-clock.mdx",permalink:"/docs/development/ui-development/ui-components/miscellaneous/analog-clock",sidebar:"docs",previous:{title:"TextArea",permalink:"/docs/development/ui-development/ui-components/miscellaneous/text-area"},next:{title:"DigitalClock",permalink:"/docs/development/ui-development/ui-components/miscellaneous/digital-clock"}},h=[{value:"Widget Group",id:"widget-group",children:[]},{value:"Properties",id:"properties",children:[{value:"Time",id:"time",children:[]},{value:"Clock Hands",id:"clock-hands",children:[]},{value:"Animation",id:"animation",children:[]}]},{value:"Interactions",id:"interactions",children:[{value:"Actions",id:"actions",children:[]},{value:"Triggers",id:"triggers",children:[]}]},{value:"Performance",id:"performance",children:[]},{value:"Examples",id:"examples",children:[{value:"Generated Code",id:"generated-code",children:[]},{value:"User Code",id:"user-code",children:[]},{value:"TouchGFX Designer Examples",id:"touchgfx-designer-examples",children:[]}]},{value:"API Reference",id:"api-reference",children:[]}],O={rightToc:h},j="wrapper";function f(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)(j,Object(a.a)({},O,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"An AnalogClock is a widget that enables the display of a classic analog watch, as opposed to the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/development/ui-development/ui-components/miscellaneous/digital-clock"}),"DigitalClock")," which displays time with text. The clock uses a background image as the clock face. The hour, minute and second hands are each using an image and rotate around a configurable center."),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/widget-appearance.gif",caption:"AnalogClock running in the simulator (sped up footage)",mdxType:"Figure"}),Object(o.b)("h2",{id:"widget-group"},"Widget Group"),Object(o.b)("p",null,"The AnalogClock can be found in the Miscellaneous widget group in TouchGFX Designer."),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/widget-group.png",caption:"AnalogClock in TouchGFX Designer",mdxType:"Figure"}),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("p",null,"The properties for a AnalogClock in TouchGFX Designer."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"th"},"Property Group")),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"th"},"Property Descriptions")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Name")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Name",mdxType:"Property"})," of the widget. ",Object(o.b)(d.a,{text:"Name is the unique identifier used in TouchGFX Designer and code.",mdxType:"InlineNote"}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Location")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"X",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"Y",mdxType:"Property"})," specify the top left corner of the widget relative to its parent.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"W",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"H",mdxType:"Property"})," specify the width and height of the widget.",Object(o.b)("br",null),Object(o.b)(d.a,{text:"The size of a AnalogClock is taken from the size of the associated image and cannot be altered except by changing the image.",mdxType:"InlineNote"}),Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"Visible",mdxType:"Property"})," specifies the visibility of the widget. ",Object(o.b)(d.a,{text:"Making the widget invisible also disables interacting with the widget through the screen.",mdxType:"InlineNote"}),".")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Style")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Style",mdxType:"Property"})," specifies a predefined setup of the widget, that sets select properties to predefined values.",Object(o.b)("br",null),Object(o.b)(d.a,{text:"These styles contain images that are free to use",mdxType:"InlineNote"}),".")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Appearance")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Image",mdxType:"Property"})," specifies the image to be used as background.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"Rotation Center X",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"Rotation Center Y",mdxType:"Property"})," specifies the point at which the clock hands should rotate")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Time")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Use Am/Pm",mdxType:"Property"})," specifies if time should be in 12h or 24h format.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"Initial Time",mdxType:"Property"})," specifies the initial time the clock shows.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Clock Hands")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Clock Hands",mdxType:"Property"})," specifies which clock hands ",Object(o.b)(d.a,{text:"(Second, Minute and Hour Hand)",mdxType:"InlineNote"})," the AnalogClock should show and the order of the hands.",Object(o.b)("br",null),"Each clock hand can set a ",Object(o.b)(l.a,{name:"Hand Image",mdxType:"Property"})," and their rotation point by setting ",Object(o.b)(l.a,{name:"Rotation Position X",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"Rotation Position Y",mdxType:"Property"}),".",Object(o.b)("br",null),Object(o.b)("br",null),"The Minute and Hour Hand have the option to use sweeping hand motion by setting ",Object(o.b)(l.a,{name:"Sweeping Movement",mdxType:"Property"}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Animations")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Animate Clock Hand Movement",mdxType:"Property"})," specifies if animation of the clock hands are enabled.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"Duration",mdxType:"Property"})," specifies how long the amination is.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"Easing",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"Easing Option",mdxType:"Property"})," specify the easing equation used.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Mixins")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)(l.a,{name:"Draggable",mdxType:"Property"})," specifies if the widget is draggable at runtime.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"ClickListener",mdxType:"Property"})," specifies if the widget emits a callback when clicked.",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(l.a,{name:"MoveAnimator",mdxType:"Property"})," specifies if the widget can animate changes to ",Object(o.b)(l.a,{name:"X",mdxType:"Property"})," and ",Object(o.b)(l.a,{name:"Y",mdxType:"Property"})," values.")))),Object(o.b)("h3",{id:"time"},"Time"),Object(o.b)("p",null,"The Time property group allows the user to set the initial time of the clock widget and whether or not to use Am/Pm standard."),Object(o.b)("p",null,"Choosing Am/Pm also results in a slight code generation change. Instead of using the following function in Analog Clock to initialize the time:",Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"initializeTime24Hour(uint8_t hour, uint8_t minute, uint8_t second)")),Object(o.b)("p",null,"The following function is used when using 12-hour notation:",Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"initializeTime12Hour(uint8_t hour, uint8_t minute, uint8_t second, bool am)")),Object(o.b)("p",null,"To update the time displayed by the clock, one of the following functions can be used.",Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"setTime24Hour(uint8_t hour, uint8_t minute, uint8_t second)"),Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"setTime12Hour(uint8_t hour, uint8_t minute, uint8_t second, bool am)")),Object(o.b)("h3",{id:"clock-hands"},"Clock Hands"),Object(o.b)("p",null,"In the Clock Hands property group, the user can define which hands to use and their z-order. The hand defined first will be rendered above the others."),Object(o.b)("h4",{id:"hour-minute-and-second-hands"},"Hour, Minute and Second Hands"),Object(o.b)("p",null,"Each hand needs an image and a rotation position. The rotation position determines the point at which the defined hand image should rotate around itself."),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/analog-clock-hands-props.png",caption:"Clock hand properties",mdxType:"Figure"}),Object(o.b)("p",null,"The hour and minute hands have the ability to use ",Object(o.b)(l.a,{name:"Sweeping Movement",mdxType:"Property"}),". When this option is enabled the hand will no longer do an instantaneous jump from one position to another."),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/analog-clock-no-sweeping-movement.gif",caption:"Sweeping movement disabled",mdxType:"Figure"}),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/analog-clock-with-sweeping-movement.gif",caption:"Sweeping movement enabled",mdxType:"Figure"}),Object(o.b)("h3",{id:"animation"},"Animation"),Object(o.b)("p",null,"The animation section allows the user to define more advanced hand movement. However, if the hour and minute hand have ",Object(o.b)(l.a,{name:"Sweeping Movement",mdxType:"Property"})," enabled, they will not animate."),Object(o.b)("p",null,"In the following example the animation duration is set to '30', easing is set to 'Bounce' with 'Out' as its easing option:"),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-components/analog-clock/analog-clock-animation.gif",caption:"Example of a clock animation",mdxType:"Figure"}),Object(o.b)("h2",{id:"interactions"},"Interactions"),Object(o.b)("p",null,"The actions and triggers supported by an AnalogClock are described in the following sections."),Object(o.b)("h3",{id:"actions"},"Actions"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"th"},"Standard widget actions")),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"th"},"Description")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Move widget")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Move a widget to a new position over time.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Hide widget")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Hides a widget (sets visibility to false).")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Show widget")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Make a hidden widget visible (sets visibility to true).")))),Object(o.b)("h3",{id:"triggers"},"Triggers"),Object(o.b)("p",null,"An AnalogClock does not emit any triggers."),Object(o.b)("h2",{id:"performance"},"Performance"),Object(o.b)("p",null,"An AnalogClock consists of an ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/development/ui-development/ui-components/images/image"}),"Image")," and three ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/development/ui-development/ui-components/images/texture-mapper"}),"TextureMappers"),", which are MCU resource intensive components. Therefore, an AnalogClock is considered a demanding widget on most platforms."),Object(o.b)("p",null,"For more details on drawing performance, read the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/development/ui-development/ui-components/general-ui-component-performance"}),"General UI Component Performance")," section."),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)("h3",{id:"generated-code"},"Generated Code"),Object(o.b)("p",null,"In the generated code for the View base class we can see how TouchGFX Designer sets up an AnalogClock."),Object(o.b)(m.a,{mdxType:"CodeHeader"},"mainViewBase.cpp"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),'#include <gui_generated/main_screen/mainViewBase.hpp>\n#include "BitmapDatabase.hpp"\n\nmainViewBase::mainViewBase()\n{\n    analogClock.setXY(124, 15);\n    analogClock.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID, 116, 116);\n    analogClock.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID, 7, 67);\n    analogClock.setMinuteHandSecondCorrection(false);\n    analogClock.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID, 7, 52);\n    analogClock.setHourHandMinuteCorrection(false);\n    analogClock.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID, 3, 66);\n    analogClock.initializeTime24Hour(10, 10, 0);\n\n    add(analogClock);\n}\n\nvoid mainViewBase::setupScreen()\n{\n\n}\n')),Object(o.b)(b.a,{mdxType:"Tip"},"You can use these functions and the others available in the AnalogClock class in user code. Remember to force a redraw by calling ",Object(o.b)(p.a,{text:"analogClock.invalidate()",mdxType:"InlineCode"})," if you change the appearance of the widget."),Object(o.b)("h3",{id:"user-code"},"User Code"),Object(o.b)("p",null,"The following example shows how to setup clock movement:"),Object(o.b)(m.a,{mdxType:"CodeHeader"},"mainView.hpp"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"#ifndef MAINVIEW_HPP\n#define MAINVIEW_HPP\n\n#include <gui_generated/main_screen/mainViewBase.hpp>\n#include <gui/main_screen/mainPresenter.hpp>\n\nclass mainView : public mainViewBase\n{\npublic:\n    mainView();\n    virtual ~mainView() {}\n    virtual void setupScreen();\n    virtual void tearDownScreen();\n    virtual void handleTickEvent();\n\nprotected:\n    int tickCounter;\n    int analogHours;\n    int analogMinutes;\n    int analogSeconds;\n};\n\n#endif // MAINVIEW_HPP\n\n")),Object(o.b)(m.a,{mdxType:"CodeHeader"},"mainView.cpp"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"#include <gui/main_screen/mainView.hpp>\n\nmainView::mainView()\n{\n}\n\nvoid mainView::setupScreen()\n{\n    mainViewBase::setupScreen();\n    analogHours = analogClock.getCurrentHour();\n    analogMinutes = analogClock.getCurrentMinute();\n    analogSeconds = analogClock.getCurrentSecond();\n}\n\nvoid mainView::tearDownScreen()\n{\n    mainViewBase::tearDownScreen();\n}\n\nvoid mainView::handleTickEvent()\n{\n    tickCounter++;\n\n    if (tickCounter % 60 == 0)\n    {\n        if (++analogSeconds >= 60)\n        {\n            analogSeconds = 0;\n            if (++analogMinutes >= 60)\n            {\n                analogMinutes = 0;\n                if (++analogHours >= 24)\n                {\n                    analogHours = 0;\n                }\n            }\n        }\n\n        // Update the clocks\n        analogClock.setTime24Hour(analogHours, analogMinutes, analogSeconds);\n    }\n}\n")),Object(o.b)("h3",{id:"touchgfx-designer-examples"},"TouchGFX Designer Examples"),Object(o.b)("p",null,"To further explore the AnalogClock, try creating a new application within TouchGFX Designer with one of the following UI templates:"),Object(o.b)(c.a,{imageSource:"/img/development/ui-development/ui-templates/clock-example.png",caption:"Clock Example UI template in TouchGFX Designer",mdxType:"Figure"}),Object(o.b)("h2",{id:"api-reference"},"API Reference"),Object(o.b)(r.a,{mdxType:"FurtherReading"},Object(o.b)("li",null,Object(o.b)(s.a,{link:"classtouchgfx_1_1_analog_clock.html",mdxType:"API"},"API reference for the AnalogClock class"))))}f.isMDXComponent=!0},264:function(e,t,n){"use strict";var a=n(5),i=n(0),o=n.n(i),c=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return o.a.createElement("i",null,this.props.text)},t}(i.Component);t.a=c},269:function(e,t,n){"use strict";n(270);var a=n(5),i=n(0),o=n.n(i),c=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return o.a.createElement("i",null,this.props.name)},t}(i.Component);t.a=c},270:function(e,t,n){var a=n(25).f,i=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in i||n(11)&&a(i,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},271:function(e,t,n){"use strict";n(272);var a=n(5),i=n(0),o=n.n(i),c=n(265),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e="/api/"+this.props.link;return o.a.createElement(c.a,{to:e,target:"_blank"},this.props.children)},t}(i.Component);t.a=r},272:function(e,t,n){"use strict";n(273)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},273:function(e,t,n){var a=n(18),i=n(19),o=n(24),c=/"/g,r=function(e,t,n,a){var i=String(o(e)),r="<"+t;return""!==n&&(r+=" "+n+'="'+String(a).replace(c,"&quot;")+'"'),r+">"+i+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(r),a(a.P+a.F*i((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}}}]);